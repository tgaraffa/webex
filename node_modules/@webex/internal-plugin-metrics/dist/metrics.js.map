{"version":3,"names":["BrowserDetection","getOSName","getOSVersion","getBrowserName","getBrowserVersion","getSparkUserAgent","webex","config","appName","appVersion","appPlatform","sparkUserAgent","CLIENT_NAME","Metrics","WebexPlugin","extend","children","batcher","Batcher","clientMetricsBatcher","ClientMetricsBatcher","callDiagnosticEventsBatcher","CallDiagnosticEventsBatcher","namespace","submit","key","value","request","submitClientMetrics","eventName","props","preLoginId","Error","payload","metricName","tags","browser","os","domain","window","location","hostname","client_id","credentials","user_id","internal","device","userId","org_id","getOrgId","logger","info","fields","browser_version","os_version","sdk_version","version","platform","spark_user_agent","type","metrics","context","app","locale","name","eventPayload","timestamp","Date","valueOf","_payload","postPreLoginMetric","aliasUser","method","api","resource","headers","body","qs","alias","getClientToken","then","token","authorization","toString","submitCallDiagnosticEvents","event"],"sources":["metrics.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {WebexPlugin} from '@webex/webex-core';\nimport {BrowserDetection} from '@webex/common';\n\nimport {CLIENT_NAME} from './config';\nimport Batcher from './batcher';\nimport ClientMetricsBatcher from './client-metrics-batcher';\nimport CallDiagnosticEventsBatcher from './call-diagnostic-events-batcher';\n\nconst {\n  getOSName,\n  getOSVersion,\n  getBrowserName,\n  getBrowserVersion\n} = BrowserDetection();\n\nfunction getSparkUserAgent(webex) {\n  const {\n    appName,\n    appVersion,\n    appPlatform\n  } = webex?.config ?? {};\n\n  let sparkUserAgent = CLIENT_NAME;\n\n  if (appName) {\n    sparkUserAgent += ` ${appName}/${appVersion ?? '0.0'}`;\n  }\n\n  if (appPlatform) {\n    sparkUserAgent += ` ${appPlatform}`;\n  }\n\n  return sparkUserAgent;\n}\n\n\nconst Metrics = WebexPlugin.extend({\n  children: {\n    batcher: Batcher,\n    clientMetricsBatcher: ClientMetricsBatcher,\n    callDiagnosticEventsBatcher: CallDiagnosticEventsBatcher\n  },\n\n  namespace: 'Metrics',\n\n  submit(key, value) {\n    return this.batcher.request(Object.assign({key}, value));\n  },\n\n\n  /**\n   * This corresponds to #sendSemiStructured() in the deprecated metrics handler\n   * @param {string} eventName\n   * @param {Object} props\n   * @param {string} preLoginId\n   * @returns {Object} HttpResponse object\n   */\n  submitClientMetrics(eventName, props = {}, preLoginId) {\n    if (!eventName) {\n      throw Error('Missing behavioral metric name. Please provide one');\n    }\n    const payload = {metricName: eventName};\n\n    payload.tags = {\n      ...props.tags,\n      browser: getBrowserName(),\n      os: getOSName(),\n\n      // Node does not like this so we need to check if it exists or not\n      // eslint-disable-next-line no-undef\n      domain: typeof window !== 'undefined' ? window.location.hostname || 'non-browser' : 'non-browser', // Check what else we could measure\n      client_id: this.webex.credentials.config.client_id,\n      user_id: this.webex.internal.device.userId\n    };\n\n    try {\n      payload.tags.org_id = this.webex.credentials.getOrgId();\n    }\n    catch {\n      this.logger.info('metrics: unable to get orgId');\n    }\n\n\n    payload.fields = {\n      ...props.fields,\n      browser_version: getBrowserVersion(),\n      os_version: getOSVersion(),\n      sdk_version: this.webex.version,\n      platform: 'Web',\n      spark_user_agent: getSparkUserAgent(this.webex)\n    };\n\n\n    payload.type = props.type || this.webex.config.metrics.type;\n\n\n    payload.context = {\n      ...props.context,\n      app: {\n        version: this.webex.version\n      },\n      locale: 'en-US',\n      os: {\n        name: getOSName(),\n        version: getOSVersion()\n      }\n    };\n\n\n    if (props.eventPayload) {\n      payload.eventPayload = props.eventPayload;\n    }\n\n    // Mocking the time in tests when running in node\n    // is impossible so unable to use Date.now()\n    payload.timestamp = new Date().valueOf();\n\n    if (preLoginId) {\n      const _payload = {\n        metrics: [payload]\n      };\n\n      // Do not batch these because pre-login events occur during onboarding, so we will be partially blind\n      // to users' progress through the reg flow if we wait to persist pre-login metrics for people who drop off because\n      // their metrics will not post from a queue flush in time\n      return this.postPreLoginMetric(_payload, preLoginId);\n    }\n\n    return this.clientMetricsBatcher.request(payload);\n  },\n\n  /**\n   * Issue request to alias a user's pre-login ID with their CI UUID\n   * @param {string} preLoginId\n   * @returns {Object} HttpResponse object\n   */\n  aliasUser(preLoginId) {\n    return this.request({\n      method: 'POST',\n      api: 'metrics',\n      resource: 'clientmetrics',\n      headers: {\n        'x-prelogin-userid': preLoginId\n      },\n      body: {},\n      qs: {\n        alias: true\n      }\n    });\n  },\n\n  postPreLoginMetric(payload, preLoginId) {\n    return this.webex.credentials.getClientToken().then((token) =>\n      this.request({\n        method: 'POST',\n        api: 'metrics',\n        resource: 'clientmetrics-prelogin',\n        headers: {\n          authorization: token.toString(),\n          'x-prelogin-userid': preLoginId\n        },\n        body: payload\n      }));\n  },\n\n  submitCallDiagnosticEvents(payload) {\n    const event = {\n      type: 'diagnostic-event',\n      eventPayload: payload\n    };\n\n    return this.callDiagnosticEventsBatcher.request(event);\n  }\n});\n\nexport default Metrics;\n"],"mappings":"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"}