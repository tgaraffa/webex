export interface Typegen0 {
    '@@xstate/typegen': true;
    internalEvents: {
        '': {
            type: '';
        };
        'done.invoke.roap.creatingLocalOffer:invocation[0]': {
            type: 'done.invoke.roap.creatingLocalOffer:invocation[0]';
            data: unknown;
            __tip: 'See the XState TS docs to learn how to strongly type this.';
        };
        'done.invoke.roap.settingRemoteAnswer:invocation[0]': {
            type: 'done.invoke.roap.settingRemoteAnswer:invocation[0]';
            data: unknown;
            __tip: 'See the XState TS docs to learn how to strongly type this.';
        };
        'done.invoke.roap.settingRemoteOffer:invocation[0]': {
            type: 'done.invoke.roap.settingRemoteOffer:invocation[0]';
            data: unknown;
            __tip: 'See the XState TS docs to learn how to strongly type this.';
        };
        'error.platform.roap.creatingLocalOffer:invocation[0]': {
            type: 'error.platform.roap.creatingLocalOffer:invocation[0]';
            data: unknown;
        };
        'error.platform.roap.settingRemoteAnswer:invocation[0]': {
            type: 'error.platform.roap.settingRemoteAnswer:invocation[0]';
            data: unknown;
        };
        'error.platform.roap.settingRemoteOffer:invocation[0]': {
            type: 'error.platform.roap.settingRemoteOffer:invocation[0]';
            data: unknown;
        };
        'xstate.init': {
            type: 'xstate.init';
        };
    };
    invokeSrcNameMap: {
        createLocalOffer: 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        handleRemoteAnswer: 'done.invoke.roap.settingRemoteAnswer:invocation[0]';
        handleRemoteOffer: 'done.invoke.roap.settingRemoteOffer:invocation[0]';
    };
    missingImplementations: {
        actions: never;
        services: never;
        guards: never;
        delays: never;
    };
    eventsCausingActions: {
        enqueueNewOfferCreation: 'INITIATE_OFFER';
        handleGlare: 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED';
        ignoreDuplicate: 'REMOTE_ANSWER_ARRIVED' | 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED';
        increaseRetryCounter: 'ERROR_ARRIVED';
        increaseSeq: '' | 'ERROR_ARRIVED' | 'INITIATE_OFFER';
        rejectPendingInitiateOfferPromises: 'error.platform.roap.creatingLocalOffer:invocation[0]';
        resetOfferRequestFlag: 'done.invoke.roap.settingRemoteAnswer:invocation[0]';
        resetPendingLocalOffer: '' | 'ERROR_ARRIVED' | 'INITIATE_OFFER' | 'REMOTE_OFFER_REQUEST_ARRIVED' | 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        resetRetryCounter: 'REMOTE_ANSWER_ARRIVED';
        resolvePendingInitiateOfferPromises: 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        sendDoneEvent: 'REMOTE_OK_ARRIVED' | 'done.invoke.roap.settingRemoteAnswer:invocation[0]';
        sendGenericError: 'error.platform.roap.settingRemoteAnswer:invocation[0]' | 'error.platform.roap.settingRemoteOffer:invocation[0]';
        sendInvalidStateError: 'REMOTE_ANSWER_ARRIVED' | 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED' | 'REMOTE_OK_ARRIVED';
        sendOutOfOrderError: 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED';
        sendRetryAfterError: 'REMOTE_OFFER_ARRIVED';
        sendRoapAnswerMessage: 'done.invoke.roap.settingRemoteOffer:invocation[0]';
        sendRoapOKMessage: 'done.invoke.roap.settingRemoteAnswer:invocation[0]';
        sendRoapOfferMessage: 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        sendRoapOfferResponseMessage: 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        sendStartedEvent: '' | 'INITIATE_OFFER' | 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED';
        setOfferRequestFlag: 'REMOTE_OFFER_REQUEST_ARRIVED';
        updateSeq: 'REMOTE_ANSWER_ARRIVED' | 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED' | 'REMOTE_OK_ARRIVED';
    };
    eventsCausingServices: {
        createLocalOffer: '' | 'ERROR_ARRIVED' | 'INITIATE_OFFER' | 'REMOTE_OFFER_REQUEST_ARRIVED' | 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        handleRemoteAnswer: 'REMOTE_ANSWER_ARRIVED';
        handleRemoteOffer: 'REMOTE_OFFER_ARRIVED';
    };
    eventsCausingGuards: {
        isHandlingOfferRequest: 'REMOTE_OFFER_REQUEST_ARRIVED' | 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        isPendingLocalOffer: '' | 'done.invoke.roap.creatingLocalOffer:invocation[0]';
        isSameSeq: 'ERROR_ARRIVED' | 'REMOTE_ANSWER_ARRIVED' | 'REMOTE_OFFER_ARRIVED' | 'REMOTE_OFFER_REQUEST_ARRIVED';
        shouldErrorTriggerOfferRetry: 'ERROR_ARRIVED';
    };
    eventsCausingDelays: {};
    matchesStates: 'browserError' | 'creatingLocalOffer' | 'idle' | 'remoteError' | 'settingRemoteAnswer' | 'settingRemoteOffer' | 'waitingForAnswer' | 'waitingForOK';
    tags: never;
}
//# sourceMappingURL=roap.typegen.d.ts.map