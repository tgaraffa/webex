import { EventMap } from 'typed-emitter';
export declare enum Event {
    CONNECTION_STATE_CHANGED = "connectionState:changed",
    REMOTE_TRACK_ADDED = "remoteTrack:added",
    ROAP_MESSAGE_TO_SEND = "roap:messageToSend",
    ROAP_STARTED = "roap:started",
    ROAP_FAILURE = "roap:failure",
    ROAP_DONE = "roap:done",
    DTMF_TONE_CHANGED = "dtmfTone:changed"
}
export declare enum ConnectionState {
    NEW = "NEW",
    CLOSED = "CLOSED",
    CONNECTED = "CONNECTED",
    CONNECTING = "CONNECTING",
    DISCONNECTED = "DISCONNECTED",
    FAILED = "FAILED"
}
export interface ConnectionStateChangedEvent {
    state: ConnectionState;
}
export declare enum RemoteTrackType {
    AUDIO = "audio",
    VIDEO = "video",
    SCREENSHARE_VIDEO = "screenShareVideo"
}
export interface RemoteTrackAddedEvent {
    type: RemoteTrackType;
    track: MediaStreamTrack;
}
export declare enum ErrorType {
    DOUBLECONFLICT = "DOUBLECONFLICT",
    CONFLICT = "CONFLICT",
    FAILED = "FAILED",
    INVALID_STATE = "INVALID_STATE",
    NOMATCH = "NOMATCH",
    OUT_OF_ORDER = "OUT_OF_ORDER",
    REFUSED = "REFUSED",
    RETRY = "RETRY",
    TIMEOUT = "TIMEOUT"
}
export interface RoapMessage {
    seq: number;
    messageType: 'OFFER' | 'OFFER_REQUEST' | 'OFFER_RESPONSE' | 'ANSWER' | 'OK' | 'ERROR';
    sdp?: string;
    tieBreaker?: number;
    errorCause?: string;
    errorType?: ErrorType;
    retryAfter?: number;
}
export interface RoapMessageEvent {
    roapMessage: RoapMessage;
}
export interface DtmfToneChangedEvent {
    tone: string;
}
export interface MediaConnectionEvents extends EventMap {
    [Event.CONNECTION_STATE_CHANGED]: (event: ConnectionStateChangedEvent) => void;
    [Event.REMOTE_TRACK_ADDED]: (event: RemoteTrackAddedEvent) => void;
    [Event.DTMF_TONE_CHANGED]: (event: DtmfToneChangedEvent) => void;
}
export interface RoapEvents extends EventMap {
    [Event.ROAP_DONE]: () => void;
    [Event.ROAP_MESSAGE_TO_SEND]: (event: RoapMessageEvent) => void;
    [Event.ROAP_FAILURE]: () => void;
}
export declare type AllEvents = MediaConnectionEvents | RoapEvents;
export declare type AnyEvent = ConnectionStateChangedEvent | RemoteTrackAddedEvent | RoapMessageEvent | DtmfToneChangedEvent | undefined;
//# sourceMappingURL=eventTypes.d.ts.map