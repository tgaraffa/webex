/// <reference types="node" />
import EventEmitter from 'events';
export declare enum TrackStatus {
    ENDED = "ended",
    LIVE = "live"
}
export declare enum TrackKind {
    AUDIO = "audio",
    VIDEO = "video"
}
export interface TrackInterface {
    getMediaStreamTrack(): MediaStreamTrack;
    ID: string;
    kind: TrackKind;
    status: TrackStatus;
    muted: boolean;
    label: string;
    stop(): void;
    getSettings(): MediaTrackSettings;
}
export declare class Track extends EventEmitter implements TrackInterface {
    #private;
    ID: string;
    kind: TrackKind;
    status: TrackStatus;
    muted: boolean;
    label: string;
    constructor(mediaStreamTrack: MediaStreamTrack);
    stop(): void;
    applyConstraints(constraints: MediaTrackConstraints): Promise<boolean>;
    getSettings(): MediaTrackSettings;
    getMediaStreamTrack(): MediaStreamTrack;
}
//# sourceMappingURL=Track.d.ts.map