{"version":3,"names":["EmbargoInterceptor","options","reason","statusCode","device","webex","internal","loggerMessage","join","clear","credentials","logger","info","reject","Interceptor"],"sources":["embargo.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class EmbargoInterceptor extends Interceptor {\n  /**\n   * @returns {EmbargoInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new EmbargoInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Promise}\n   */\n  onResponseError(options, reason) {\n    if (reason.statusCode === 451) {\n      const {device} = this.webex.internal;\n      const loggerMessage = [\n        'Received `HTTP 451 Unavailable For Legal Reasons`, ',\n        'discarding credentials and device registration'\n      ].join('');\n\n      if (device) {\n        this.webex.internal.device.clear();\n      }\n\n      this.webex.credentials.clear();\n      this.webex.logger.info(loggerMessage);\n    }\n\n    return Promise.reject(reason);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;AAEA;AACA;AACA;IACqBA,kB;;;;;;;;;;;;;IASnB;AACF;AACA;AACA;AACA;AACA;IACE,yBAAgBC,OAAhB,EAAyBC,MAAzB,EAAiC;MAC/B,IAAIA,MAAM,CAACC,UAAP,KAAsB,GAA1B,EAA+B;QAC7B,IAAOC,MAAP,GAAiB,KAAKC,KAAL,CAAWC,QAA5B,CAAOF,MAAP;QACA,IAAMG,aAAa,GAAG,CACpB,qDADoB,EAEpB,gDAFoB,EAGpBC,IAHoB,CAGf,EAHe,CAAtB;;QAKA,IAAIJ,MAAJ,EAAY;UACV,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,MAApB,CAA2BK,KAA3B;QACD;;QAED,KAAKJ,KAAL,CAAWK,WAAX,CAAuBD,KAAvB;QACA,KAAKJ,KAAL,CAAWM,MAAX,CAAkBC,IAAlB,CAAuBL,aAAvB;MACD;;MAED,OAAO,iBAAQM,MAAR,CAAeX,MAAf,CAAP;IACD;;;;IA/BD;AACF;AACA;IACE,kBAAgB;MACd;MACA,OAAO,IAAIF,kBAAJ,CAAuB;QAACK,KAAK,EAAE;MAAR,CAAvB,CAAP;IACD;;;EAP6CS,qB"}