{"version":3,"names":["Credentials","WebexPlugin","extend","oneFlight","keyFactory","scope","waitForValue","persist","whileInFlight","collections","userTokens","TokenCollection","dataTypes","token","makeStateDataType","Token","dataType","derived","canAuthorize","deps","fn","Boolean","supertoken","canRefresh","config","jwtRefreshCallback","props","prop","namespace","session","isRefreshing","default","type","ready","refreshTimer","undefined","buildLoginUrl","options","clientType","state","Error","client_id","redirect_uri","response_type","base64","toBase64Url","authorizeUrl","querystring","stringify","getOrgId","logger","info","extractOrgIdFromJWT","access_token","e","extractOrgIdFromUserToken","f","decodedJWT","jwt","decode","realm","fields","split","length","buildLogoutUrl","logoutUrl","cisService","service","goto","calcRefreshTimeout","expiration","Math","floor","random","constructor","_dataTypes","forEach","key","set","bind","args","downscope","catch","reason","trace","resolve","serialize","parent","getClientToken","webex","request","method","uri","tokenUrl","form","grant_type","self_contained_token","auth","user","pass","client_secret","sendImmediately","shouldRefreshAccessToken","then","res","body","statusCode","reject","ErrorConstructor","grantErrors","select","error","_res","getUserToken","once","filterScope","sortScope","get","tap","t","add","initialize","attrs","authorization","expires","scheduleRefresh","prototype","listenToOnce","authorizationString","parsed","url","parse","query","href","substr","indexOf","invalidate","clearTimeout","unset","err","warn","models","remove","refresh","tokens","requestAccessTokenFromJwt","internal","services","updateCredentialsConfig","st","all","map","revoke","InvalidRequestError","trigger","expiresIn","timeoutLength","safeSetTimeout"],"sources":["credentials.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport querystring from 'querystring';\nimport url from 'url';\n\nimport jwt from 'jsonwebtoken';\nimport {\n  base64,\n  makeStateDataType,\n  oneFlight,\n  tap,\n  whileInFlight\n} from '@webex/common';\nimport {safeSetTimeout} from '@webex/common-timers';\nimport {clone, cloneDeep, isObject, isEmpty} from 'lodash';\n\nimport WebexPlugin from '../webex-plugin';\nimport {persist, waitForValue} from '../storage/decorators';\n\nimport grantErrors from './grant-errors';\nimport {filterScope, sortScope} from './scope';\nimport Token from './token';\nimport TokenCollection from './token-collection';\n\n/**\n * @class\n */\nconst Credentials = WebexPlugin.extend({\n  collections: {\n    userTokens: TokenCollection\n  },\n\n  dataTypes: {\n    token: makeStateDataType(Token, 'token').dataType\n  },\n\n  derived: {\n    canAuthorize: {\n      deps: [\n        'supertoken',\n        'supertoken.canAuthorize',\n        'canRefresh'\n      ],\n      fn() {\n        return Boolean(this.supertoken && this.supertoken.canAuthorize || this.canRefresh);\n      }\n    },\n    canRefresh: {\n      deps: [\n        'supertoken',\n        'supertoken.canRefresh'\n      ],\n      fn() {\n        // If we're operating in JWT mode, we have to delegate to the consumer\n        if (this.config.jwtRefreshCallback) {\n          return true;\n        }\n\n        return Boolean(this.supertoken && this.supertoken.canRefresh);\n      }\n    }\n  },\n\n  props: {\n    supertoken: makeStateDataType(Token, 'token').prop\n  },\n\n  namespace: 'Credentials',\n\n  session: {\n    isRefreshing: {\n      default: false,\n      type: 'boolean'\n    },\n    /**\n     * Becomes `true` once the {@link loaded} event fires.\n     * @see {@link WebexPlugin#ready}\n     * @instance\n     * @memberof Credentials\n     * @type {boolean}\n     */\n    ready: {\n      default: false,\n      type: 'boolean'\n    },\n    refreshTimer: {\n      default: undefined,\n      type: 'any'\n    }\n  },\n\n  /**\n   * Generates an OAuth Login URL. Prefers the api.ciscospark.com proxy if the\n   * instance is initialize with an authorizatUrl, but fallsback to idbroker\n   * as the base otherwise.\n   * @instance\n   * @memberof Credentials\n   * @param {Object} [options={}]\n   * @returns {string}\n   */\n  buildLoginUrl(options = {clientType: 'public'}) {\n    /* eslint-disable camelcase */\n    if (options.state && !isObject(options.state)) {\n      throw new Error('if specified, `options.state` must be an object');\n    }\n\n    options.client_id = this.config.client_id;\n    options.redirect_uri = this.config.redirect_uri;\n    options.scope = this.config.scope;\n\n    options = cloneDeep(options);\n\n    if (!options.response_type) {\n      options.response_type = options.clientType === 'public' ? 'token' : 'code';\n    }\n    Reflect.deleteProperty(options, 'clientType');\n\n    if (options.state) {\n      if (!isEmpty(options.state)) {\n        options.state = base64.toBase64Url(JSON.stringify(options.state));\n      }\n      else {\n        delete options.state;\n      }\n    }\n\n    return `${this.config.authorizeUrl}?${querystring.stringify(options)}`;\n    /* eslint-enable camelcase */\n  },\n\n  /**\n   * Get the determined OrgId.\n   *\n   * @throws {Error} - If the OrgId could not be determined.\n   * @returns {string} - The OrgId.\n   */\n  getOrgId() {\n    this.logger.info(\n      'credentials: attempting to retrieve the OrgId from token'\n    );\n\n    try {\n      // Attempt to extract a client-authenticated token's OrgId.\n      this.logger.info('credentials: trying to extract OrgId from JWT');\n\n      return this.extractOrgIdFromJWT(this.supertoken.access_token);\n    }\n    catch (e) {\n      // Attempt to extract a user token's OrgId.\n      this.logger.info('credentials: could not extract OrgId from JWT');\n      this.logger.info(\n        'credentials: attempting to extract OrgId from user token'\n      );\n\n      try {\n        return this.extractOrgIdFromUserToken(this.supertoken?.access_token);\n      }\n      catch (f) {\n        this.logger.info('credentials: could not extract OrgId from user token');\n        throw f;\n      }\n    }\n  },\n\n  /**\n   * Extract the OrgId [realm] from a provided JWT.\n   *\n   * @private\n   * @param {string} token - The JWT to extract the OrgId from.\n   * @throws {Error} - If the token does not pass JWT general/realm validation.\n   * @returns {string} - The OrgId.\n   */\n  extractOrgIdFromJWT(token = '') {\n    // Decoded the provided token.\n    const decodedJWT = jwt.decode(token);\n\n    // Validate that the provided token is a JWT.\n    if (!decodedJWT) {\n      throw new Error('unable to extract the OrgId from the provided JWT');\n    }\n\n    if (!decodedJWT.realm) {\n      throw new Error('the provided JWT does not contain an OrgId');\n    }\n\n    // Return the OrgId [realm].\n    return decodedJWT.realm;\n  },\n\n  /**\n   * Extract the OrgId [realm] from a provided user token.\n   *\n   * @private\n   * @param {string} token - The user token to extract the OrgId from.\n   * @throws {Error} - Will throw an error if the provided token is invalid.\n   * @returns {string} - The OrgId.\n   */\n  extractOrgIdFromUserToken(token = '') {\n    // Split the provided token into subsections.\n    const fields = token.split('_');\n\n    // Validate that the provided token has the proper amount of sections.\n    if (fields.length !== 3) {\n      throw new Error('the provided token is not a valid format');\n    }\n\n    // Return the token section that contains the OrgId.\n    return fields[2];\n  },\n\n  /**\n   * Generates a Logout URL\n   * @instance\n   * @memberof Credentials\n   * @param {Object} [options={}]\n   * @returns {[type]}\n   */\n  buildLogoutUrl(options = {}) {\n    return `${this.config.logoutUrl}?${querystring.stringify(Object.assign({\n      cisService: this.config.service,\n      goto: this.config.redirect_uri\n    }, options))}`;\n  },\n\n  /**\n   * Generates a number between 60% - 90% of expired value\n   * @instance\n   * @memberof Credentials\n   * @param {number} expiration\n   * @private\n   * @returns {number}\n   */\n  calcRefreshTimeout(expiration) {\n    return Math.floor((Math.floor(Math.random() * 4) + 6) / 10 * expiration);\n  },\n\n  constructor(...args) {\n    // HACK to deal with the fact that AmpersandState#dataTypes#set is a pure\n    // function.\n    this._dataTypes = cloneDeep(this._dataTypes);\n    Object.keys(this._dataTypes).forEach((key) => {\n      if (this._dataTypes[key].set) {\n        this._dataTypes[key].set = this._dataTypes[key].set.bind(this);\n      }\n    });\n    // END HACK\n    Reflect.apply(WebexPlugin, this, args);\n  },\n\n  /**\n   * Downscopes a token\n   * @instance\n   * @memberof Credentials\n   * @param {string} scope\n   * @private\n   * @returns {Promise<Token>}\n   */\n  downscope(scope) {\n    return this.supertoken.downscope(scope)\n      .catch((reason) => {\n        this.logger.trace(`credentials: failed to downscope supertoken to ${scope}`, reason);\n        this.logger.trace(`credentials: falling back to supertoken for ${scope}`);\n\n        return Promise.resolve(new Token(Object.assign({scope}, this.supertoken.serialize())), {parent: this});\n      });\n  },\n\n  /**\n   * Requests a client credentials grant and returns the token. Given the\n   * limited use for such tokens as this time, this method does not cache its\n   * token.\n   * @instance\n   * @memberof Credentials\n   * @param {Object} options\n   * @returns {Promise<Token>}\n   */\n  getClientToken(options = {}) {\n    this.logger.info('credentials: requesting client credentials grant');\n\n    return this.webex.request({\n      /* eslint-disable camelcase */\n      method: 'POST',\n      uri: options.uri || this.config.tokenUrl,\n      form: {\n        grant_type: 'client_credentials',\n        scope: options.scope || 'webexsquare:admin',\n        self_contained_token: true\n      },\n      auth: {\n        user: this.config.client_id,\n        pass: this.config.client_secret,\n        sendImmediately: true\n      },\n      shouldRefreshAccessToken: false\n      /* eslint-enable camelcase */\n    })\n      .then((res) => new Token(res.body, {parent: this}))\n      .catch((res) => {\n        if (res.statusCode !== 400) {\n          return Promise.reject(res);\n        }\n\n        const ErrorConstructor = grantErrors.select(res.body.error);\n\n        return Promise.reject(new ErrorConstructor(res._res || res));\n      });\n  },\n\n  @oneFlight({keyFactory: (scope) => scope})\n  @waitForValue('@')\n  /**\n   * Resolves with a token with the specified scopes. If no scope is specified,\n   * defaults to omit(webex.credentials.scope, 'spark:kms'). If no such token is\n   * available, downscopes the supertoken to that scope.\n   * @instance\n   * @memberof Credentials\n   * @param {string} scope\n   * @returns {Promise<Token>}\n   */\n  getUserToken(scope) {\n    return Promise.resolve(!this.isRefreshing || new Promise((resolve) => {\n      this.logger.info('credentials: token refresh inflight; delaying getUserToken until refresh completes');\n      this.once('change:isRefreshing', () => {\n        this.logger.info('credentials: token refresh complete; reinvoking getUserToken');\n        resolve();\n      });\n    }))\n      .then(() => {\n        if (!this.canAuthorize) {\n          this.logger.info('credentials: cannot produce an access token from current state');\n\n          return Promise.reject(new Error('Current state cannot produce an access token'));\n        }\n\n        if (!scope) {\n          scope = filterScope('spark:kms', this.config.scope);\n        }\n\n        scope = sortScope(scope);\n\n        if (scope === sortScope(this.config.scope)) {\n          return Promise.resolve(this.supertoken);\n        }\n\n        const token = this.userTokens.get(scope);\n\n        // we should also check for the token.access_token since token object does\n        // not get cleared on unsetting while logging out.\n        if (!token || !token.access_token) {\n          return this.downscope(scope)\n            .then(tap((t) => this.userTokens.add(t)));\n        }\n\n        return Promise.resolve(token);\n      });\n  },\n\n  @persist('@')\n  /**\n   * Initializer\n   * @instance\n   * @memberof Credentials\n   * @param {Object} attrs\n   * @param {Object} options\n   * @private\n   * @returns {Credentials}\n   */\n  initialize(attrs, options) {\n    if (attrs) {\n      if (typeof attrs === 'string') {\n        this.supertoken = attrs;\n      }\n\n      if (attrs.access_token) {\n        this.supertoken = attrs;\n      }\n\n      if (attrs.authorization) {\n        if (attrs.authorization.supertoken) {\n          this.supertoken = attrs.authorization.supertoken;\n        }\n        else {\n          this.supertoken = attrs.authorization;\n        }\n      }\n\n      // schedule refresh\n      if (this.supertoken && this.supertoken.expires) {\n        this.scheduleRefresh(this.supertoken.expires);\n      }\n    }\n\n    Reflect.apply(WebexPlugin.prototype.initialize, this, [attrs, options]);\n\n    this.listenToOnce(this.parent, 'change:config', () => {\n      if (this.config.authorizationString) {\n        const parsed = url.parse(this.config.authorizationString, true);\n\n        /* eslint-disable camelcase */\n        this.config.client_id = parsed.query.client_id;\n        this.config.redirect_uri = parsed.query.redirect_uri;\n        this.config.scope = parsed.query.scope;\n        this.config.authorizeUrl = parsed.href.substr(0, parsed.href.indexOf('?'));\n        /* eslint-enable camelcase */\n      }\n    });\n\n    this.webex.once('loaded', () => {\n      this.ready = true;\n    });\n  },\n\n  @oneFlight\n  @waitForValue('@')\n  /**\n   * Clears all tokens from store them from the stores.\n   *\n   * This is no longer quite the right name for this method, but all of the\n   * alternatives I'm coming up with are already taken.\n   * @instance\n   * @memberof Credentials\n   * @returns {Promise}\n   */\n  invalidate() {\n    this.logger.info('credentials: invalidating tokens');\n\n    // clear refresh timer\n    if (this.refreshTimer) {\n      clearTimeout(this.refreshTimer);\n      this.unset('refreshTimer');\n    }\n\n    try {\n      this.unset('supertoken');\n    }\n    catch (err) {\n      this.logger.warn('credentials: failed to clear supertoken', err);\n    }\n\n    while (this.userTokens.models.length) {\n      try {\n        this.userTokens.remove(this.userTokens.models[0]);\n      }\n      catch (err) {\n        this.logger.warn('credentials: failed to remove user token', err);\n      }\n    }\n\n    this.logger.info('credentials: finished removing tokens');\n\n    // Return a promise to give the storage layer a tick or two to clear\n    // localStorage\n    return Promise.resolve();\n  },\n\n  @oneFlight\n  @whileInFlight('isRefreshing')\n  @waitForValue('@')\n  /**\n   * Removes the supertoken and child tokens, then refreshes the supertoken;\n   * subsequent calls to {@link Credentials#getUserToken()} will re-downscope\n   * child tokens. Enqueus revocation of previous previousTokens. Yes, that's\n   * the correct number of \"previous\"es.\n   * @instance\n   * @memberof Credentials\n   * @returns {Promise}\n   */\n  refresh() {\n    this.logger.info('credentials: refresh requested');\n\n    const {supertoken} = this;\n    const tokens = clone(this.userTokens.models);\n\n    // This is kind of a leaky abstraction, since it relies on the authorization\n    // plugin, but the only alternatives I see are\n    // 1. put all JWT support in core\n    // 2. have separate jwt and non-jwt auth plugins\n    // while I like #2 from a code simplicity standpoint, the third-party DX\n    // isn't great\n    if (this.config.jwtRefreshCallback) {\n      return this.config.jwtRefreshCallback(this.webex)\n        .then((jwt) => this.webex.authorization.requestAccessTokenFromJwt({jwt}));\n    }\n\n    if (this.webex.internal.services) {\n      this.webex.internal.services.updateCredentialsConfig();\n    }\n\n    return supertoken.refresh()\n      .then((st) => {\n        // clear refresh timer\n        if (this.refreshTimer) {\n          clearTimeout(this.refreshTimer);\n          this.unset('refreshTimer');\n        }\n        this.supertoken = st;\n\n        return Promise.all(tokens.map((token) => this.downscope(token.scope)\n          // eslint-disable-next-line max-nested-callbacks\n          .then((t) => {\n            this.logger.info(`credentials: revoking token for ${token.scope}`);\n\n            return token.revoke()\n              .catch((err) => {\n                this.logger.warn('credentials: failed to revoke user token', err);\n              })\n              .then(() => {\n                this.userTokens.remove(token.scope);\n                this.userTokens.add(t);\n              });\n          })));\n      })\n      .then(() => {\n        this.scheduleRefresh(this.supertoken.expires);\n      })\n      .catch((error) => {\n        const {InvalidRequestError} = grantErrors;\n\n        if (error instanceof InvalidRequestError) {\n          // Error: The refresh token provided is expired, revoked, malformed, or invalid. Hence emit an event to the client, an opportunity to logout.\n          this.unset('supertoken');\n          while (this.userTokens.models.length) {\n            try {\n              this.userTokens.remove(this.userTokens.models[0]);\n            }\n            catch (err) {\n              this.logger.warn('credentials: failed to remove user token', err);\n            }\n          }\n          this.webex.trigger('client:InvalidRequestError');\n        }\n\n        return Promise.reject(error);\n      });\n  },\n\n  /**\n   * Schedules a token refresh or refreshes the token if token has expired\n   * @instance\n   * @memberof Credentials\n   * @param {number} expires\n   * @private\n   * @returns {undefined}\n   */\n  scheduleRefresh(expires) {\n    const expiresIn = expires - Date.now();\n\n    if (expiresIn > 0) {\n      const timeoutLength = this.calcRefreshTimeout(expiresIn);\n\n      this.refreshTimer = safeSetTimeout(() => this.refresh(), timeoutLength);\n    }\n    else {\n      this.refresh();\n    }\n  }\n\n});\n\nexport default Credentials;\n"],"mappings":"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"}