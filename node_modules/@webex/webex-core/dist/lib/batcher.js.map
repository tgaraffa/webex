{"version":3,"names":["Batcher","WebexPlugin","extend","session","deferreds","type","default","queue","derived","bounce","fn","cappedDebounce","executeQueue","config","batcherWait","maxCalls","batcherMaxCalls","maxWait","batcherMaxWait","request","item","defer","Defer","fingerprintRequest","then","idx","has","resolve","get","promise","set","prepareItem","req","tap","delete","catch","reason","reject","enqueue","push","splice","prepareRequest","payload","submitHttpRequest","res","handleHttpSuccess","WebexHttpError","handleHttpError","all","map","getDeferredForRequest","logger","error","process","env","NODE_ENV","stack","Error","body","items","acceptItem","options","didItemFail","didFail","handleItemFailure","handleItemSuccess","getDeferredForResponse","fingerprintResponse"],"sources":["batcher.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {has} from 'lodash';\nimport {\n  cappedDebounce,\n  Defer,\n  tap\n} from '@webex/common';\n\nimport WebexPlugin from './webex-plugin';\nimport WebexHttpError from './webex-http-error';\n\n/**\n * Base class for coalescing requests to batched APIs\n * @class Batcher\n */\nconst Batcher = WebexPlugin.extend({\n  session: {\n    deferreds: {\n      type: 'object',\n      default() {\n        return new Map();\n      }\n    },\n    queue: {\n      type: 'array',\n      default() {\n        return [];\n      }\n    }\n  },\n\n  derived: {\n    bounce: {\n      fn() {\n        return cappedDebounce((...args) => this.executeQueue(...args), this.config.batcherWait, {\n          maxCalls: this.config.batcherMaxCalls,\n          maxWait: this.config.batcherMaxWait\n        });\n      }\n    }\n  },\n\n  /**\n   * Requests an item from a batched API\n   * @param {Object} item\n   * @returns {Promise<mixed>}\n   */\n  request(item) {\n    // So far, I can't find a way to avoid three layers of nesting here.\n    /* eslint max-nested-callbacks: [0] */\n    const defer = new Defer();\n\n    this.fingerprintRequest(item)\n      .then((idx) => {\n        if (this.deferreds.has(idx)) {\n          defer.resolve(this.deferreds.get(idx).promise);\n\n          return;\n        }\n        this.deferreds.set(idx, defer);\n        this.prepareItem(item)\n          .then((req) => {\n            defer.promise = defer.promise\n              .then(tap(() => this.deferreds.delete(idx)))\n              .catch((reason) => {\n                this.deferreds.delete(idx);\n\n                return Promise.reject(reason);\n              });\n\n            this.enqueue(req)\n              .then(() => this.bounce())\n              .catch((reason) => defer.reject(reason));\n          })\n          .catch((reason) => defer.reject(reason));\n      })\n      .catch((reason) => defer.reject(reason));\n\n    return defer.promise;\n  },\n\n  /**\n   * Adds an item to the queue.\n   * Intended to be overridden\n   * @param {mixed} req\n   * @returns {Promise<undefined>}\n   */\n  enqueue(req) {\n    this.queue.push(req);\n\n    return Promise.resolve();\n  },\n\n  /**\n   * Transform the item before adding it to the queue\n   * Intended to be overridden\n   * @param {mixed} item\n   * @returns {Promise<mixed>}\n   */\n  prepareItem(item) {\n    return Promise.resolve(item);\n  },\n\n  /**\n   * Detaches the current queue, does any appropriate transforms, and submits it\n   * to the API.\n   * @returns {Promise<undefined>}\n   */\n  executeQueue() {\n    const queue = this.queue.splice(0, this.config.batcherMaxCalls);\n\n    return new Promise((resolve) => {\n      resolve(this.prepareRequest(queue)\n        .then((payload) => this.submitHttpRequest(payload)\n          .then((res) => this.handleHttpSuccess(res)))\n        .catch((reason) => {\n          if (reason instanceof WebexHttpError) {\n            return this.handleHttpError(reason);\n          }\n\n          return Promise.all(queue.map((item) => this.getDeferredForRequest(item)\n            .then((defer) => {\n              defer.reject(reason);\n            })));\n        }));\n    })\n      .catch((reason) => {\n        this.logger.error(process.env.NODE_ENV === 'production' ? reason : reason.stack);\n\n        return Promise.reject(reason);\n      });\n  },\n\n  /**\n   * Performs any final transforms on the queue before submitting it to the API\n   * Intended to be overridden\n   * @param {Object|Array} queue\n   * @returns {Promise<Object>}\n   */\n  prepareRequest(queue) {\n    return Promise.resolve(queue);\n  },\n\n  /**\n   * Submits the prepared request body to the API.\n   * This method *must* be overridden\n   * @param {Object} payload\n   * @returns {Promise<HttpResponseObject>}\n   */\n  // eslint-disable-next-line no-unused-vars\n  submitHttpRequest(payload) {\n    throw new Error('request() must be implemented');\n  },\n\n  /**\n   * Actions taken when the http request returns a success\n   * Intended to be overridden\n   * @param {Promise<HttpResponseObject>} res\n   * @returns {Promise<undefined>}\n   */\n  handleHttpSuccess(res) {\n    return Promise.all((res.body && res.body.items || res.body).map((item) => this.acceptItem(item)));\n  },\n\n  /**\n   * Actions taken when the http request returns a failure. Typically, this\n   * means failing the entire queue, but could be overridden in some\n   * implementations to e.g. reenqueue.\n   * Intended to be overridden\n   * @param {WebexHttpError} reason\n   * @returns {Promise<undefined>}\n   */\n  handleHttpError(reason) {\n    if (reason instanceof WebexHttpError) {\n      if (has(reason, 'options.body.map')) {\n        return Promise.all(reason.options.body.map((item) => this.getDeferredForRequest(item)\n          .then((defer) => {\n            defer.reject(reason);\n          })));\n      }\n    }\n    this.logger.error('http error handler called without a WebexHttpError object', reason);\n\n    return Promise.reject(reason);\n  },\n\n  /**\n   * Determines if the item succeeded or failed and delegates accordingly\n   * @param {Object} item\n   * @returns {Promise<undefined>}\n   */\n  acceptItem(item) {\n    return this.didItemFail(item)\n      .then((didFail) => {\n        if (didFail) {\n          return this.handleItemFailure(item);\n        }\n\n        return this.handleItemSuccess(item);\n      });\n  },\n\n  /**\n   * Indicates if the specified response item implies a success or a failure\n   * Intended to be overridden\n   * @param {Object} item\n   * @returns {Promise<Boolean>}\n   */\n  // eslint-disable-next-line no-unused-vars\n  didItemFail(item) {\n    return Promise.resolve(false);\n  },\n\n  /**\n   * Finds the Defer for the specified item and rejects its promise\n   * Intended to be overridden\n   * @param {Object} item\n   * @returns {Promise<undefined>}\n   */\n  handleItemFailure(item) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.reject(item);\n      });\n  },\n\n  /**\n   * Finds the Defer for the specified item and resolves its promise\n   * Intended to be overridden\n   * @param {Object} item\n   * @returns {Promise<undefined>}\n   */\n  handleItemSuccess(item) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.resolve(item);\n      });\n  },\n\n  /**\n   * Returns the Deferred for the specified request item\n   * @param {Object} item\n   * @returns {Promise<Defer>}\n   */\n  getDeferredForRequest(item) {\n    return this.fingerprintRequest(item)\n      .then((idx) => {\n        const defer = this.deferreds.get(idx);\n\n        /* istanbul ignore if */\n        if (!defer) {\n          throw new Error('Could not find pending request for received response');\n        }\n\n        return defer;\n      });\n  },\n\n  /**\n   * Returns the Deferred for the specified response item\n   * @param {Object} item\n   * @returns {Promise<Defer>}\n   */\n  getDeferredForResponse(item) {\n    return this.fingerprintResponse(item)\n      .then((idx) => {\n        const defer = this.deferreds.get(idx);\n\n        /* istanbul ignore if */\n        if (!defer) {\n          throw new Error('Could not find pending request for received response');\n        }\n\n        return defer;\n      });\n  },\n\n  /**\n   * Generates a unique identifier for the item in a request payload\n   * Intended to be overridden\n   * Note that overrides must return a primitive.\n   * @param {Object} item\n   * @returns {Promise<primitive>}\n   */\n  // eslint-disable-next-line no-unused-vars\n  fingerprintRequest(item) {\n    throw new Error('fingerprintRequest() must be implemented');\n  },\n\n  /**\n   * Generates a unique identifier for the item in a response payload\n   * Intended to be overridden\n   * Note that overrides must return a primitive.\n   * @param {Object} item\n   * @returns {Promise<primitive>}\n   */\n  // eslint-disable-next-line no-unused-vars\n  fingerprintResponse(item) {\n    throw new Error('fingerprintResponse() must be implemented');\n  }\n});\n\nexport default Batcher;\n"],"mappings":"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"}