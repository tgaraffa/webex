{"version":3,"names":["EMITTER_SYMBOL","FILE_SYMBOL","PROMISE_SYMBOL","ShareActivity","WebexPlugin","extend","getSymbols","file","emitter","namespace","derived","target","deps","fn","conversation","session","claimedFileType","required","type","content","clientTempId","displayName","enableThumbnails","default","hiddenSpaceUrl","mentions","spaceUrl","uploads","initialize","attrs","options","prototype","resolve","_spaceUrl","_retrieveSpaceUrl","url","then","_hiddenSpaceUrl","addGif","gif","gifToAdd","get","name","fileSize","size","byteLength","length","mimeType","objectType","height","width","image","set","SCR","create","scr","loc","thumbnailScr","add","substring","lastIndexOf","upload","EventEmitter","promise","detectFileType","logger","processImage","thumbnailMaxWidth","config","thumbnailMaxHeight","imageData","main","webex","internal","encryption","encryptBinary","cdata","all","uploadPromise","_upload","transferEvents","metadata","downloadUrl","thumb","thumbnail","fileDimensions","thumbnailDimensions","proxyEvents","getFiles","files","key","push","uri","uploadOptions","fileHash","sha256","toString","role","initializeBody","qs","transcode","phases","body","$url","uploadUrl","finalize","$uri","finishUploadUrl","remove","delete","prepare","Error","activity","verb","object","undefined","items","promises","forEach","item","contentCategory","_determineContentCategory","_itemContainsActionWithMimeType","map","actions","mimeTypes","split","shift","request","method","res","share","parent"],"sources":["share-activity.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {EventEmitter} from 'events';\n\nimport SCR from 'node-scr';\nimport {proxyEvents, transferEvents} from '@webex/common';\nimport {WebexPlugin} from '@webex/webex-core';\nimport {filter, map, pick, some} from 'lodash';\nimport {detectFileType, processImage} from '@webex/helper-image';\nimport sha256 from 'crypto-js/sha256';\n\nexport const EMITTER_SYMBOL = Symbol('EMITTER_SYMBOL');\nexport const FILE_SYMBOL = Symbol('FILE_SYMBOL');\nconst PROMISE_SYMBOL = Symbol('PROMISE_SYMBOL');\n\n/**\n * @class\n */\nconst ShareActivity = WebexPlugin.extend({\n  getSymbols() {\n    return {\n      file: FILE_SYMBOL,\n      emitter: EMITTER_SYMBOL\n    };\n  },\n\n  namespace: 'Conversation',\n\n  derived: {\n    target: {\n      deps: ['conversation'],\n      fn() {\n        return this.conversation;\n      }\n    }\n  },\n\n  session: {\n    claimedFileType: 'string',\n    conversation: {\n      required: true,\n      type: 'object'\n    },\n\n    content: 'string',\n\n    clientTempId: 'string',\n\n    displayName: 'string',\n\n    enableThumbnails: {\n      default: true,\n      type: 'boolean'\n    },\n\n    hiddenSpaceUrl: 'object',\n\n    mentions: 'object',\n\n    spaceUrl: 'object',\n\n    uploads: {\n      type: 'object',\n      default() {\n        return new Map();\n      }\n    }\n  },\n\n  initialize(attrs, options) {\n    Reflect.apply(WebexPlugin.prototype.initialize, this, [attrs, options]);\n\n    if (attrs && attrs.conversation) {\n      this.spaceUrl = Promise.resolve(attrs.conversation._spaceUrl || this._retrieveSpaceUrl(`${attrs.conversation.url}/space`)\n        .then((url) => {\n          attrs.conversation._spaceUrl = url;\n\n          return url;\n        }));\n      this.hiddenSpaceUrl = Promise.resolve(attrs.conversation._hiddenSpaceUrl || this._retrieveSpaceUrl(`${attrs.conversation.url}/space/hidden`)\n        .then((url) => {\n          attrs.conversation._hiddenSpaceUrl = url;\n\n          return url;\n        }));\n    }\n  },\n\n  /**\n   * Adds an additional GIF to the share activity\n   * Different from regular add to skip uploading to webex files service\n   * @param {File} gif\n   * @param {File} gif.image // thumbnail\n   * @param {Object} options\n   * @param {Object} options.actions\n   * @returns {Promise}\n   */\n  addGif(gif, options) {\n    let gifToAdd = this.uploads.get(gif);\n\n    // If the gif already exists, then don't do anything\n    if (gifToAdd) {\n      return Promise.resolve();\n    }\n\n    gifToAdd = Object.assign({\n      displayName: gif.name,\n      fileSize: gif.size || gif.byteLength || gif.length,\n      mimeType: gif.type,\n      url: 'https://giphy.com',\n      objectType: 'file',\n      height: gif.height,\n      width: gif.width,\n      image: {\n        height: gif.image.height,\n        width: gif.image.width,\n        url: 'https://giphy.com'\n      },\n      [FILE_SYMBOL]: gif\n    }, pick(options, 'actions'));\n\n    this.uploads.set(gif, gifToAdd);\n\n    /* Instead of encryptBinary, which produces a encrypted version of\n     * the file for upload and a SCR (contains info needed to encrypt the\n     * SCR itself and the displayName), we directly create an SCR.\n     * Because we are skipping uploading, the encrypted file is not needed.\n     */\n    return SCR.create()\n      .then((scr) => {\n        scr.loc = gif.url;\n        gifToAdd.scr = scr;\n\n        return SCR.create();\n      })\n      .then((thumbnailScr) => {\n        thumbnailScr.loc = gif.image.url;\n        gifToAdd.image.scr = thumbnailScr;\n      });\n  },\n\n  /**\n   * Adds an additional file to the share and begins submitting it to webex\n   * files\n   * @param {File} file\n   * @param {Object} options\n   * @param {Object} options.actions\n   * @returns {EventEmittingPromise}\n   */\n  add(file, options) {\n    options = options || {};\n    options.claimedFileType = file.displayName.substring(file.displayName.lastIndexOf('.'));\n    let upload = this.uploads.get(file);\n\n    if (upload) {\n      return upload[PROMISE_SYMBOL];\n    }\n    const emitter = new EventEmitter();\n\n    upload = Object.assign({\n      displayName: file.name,\n      fileSize: file.size || file.byteLength || file.length,\n      mimeType: file.type,\n      objectType: 'file',\n      [EMITTER_SYMBOL]: emitter,\n      [FILE_SYMBOL]: file\n    }, pick(options, 'actions'));\n\n    this.uploads.set(file, upload);\n    const promise = detectFileType(file, this.logger)\n      .then((type) => {\n        upload.mimeType = type;\n\n        return processImage({\n          file,\n          type,\n          thumbnailMaxWidth: this.config.thumbnailMaxWidth,\n          thumbnailMaxHeight: this.config.thumbnailMaxHeight,\n          enableThumbnails: this.enableThumbnails,\n          logger: this.logger\n        });\n      })\n      .then((imageData) => {\n        const main = this.webex.internal.encryption.encryptBinary(file)\n          .then(({scr, cdata}) => {\n            upload.scr = scr;\n\n            return Promise.all([cdata, this.spaceUrl]);\n          })\n          .then(([cdata, spaceUrl]) => {\n            const uploadPromise = this._upload(cdata, `${spaceUrl}/upload_sessions`, options);\n\n            transferEvents('progress', uploadPromise, emitter);\n\n            return uploadPromise;\n          })\n          .then((metadata) => {\n            upload.url = upload.scr.loc = metadata.downloadUrl;\n          });\n\n\n        let thumb;\n\n        if (imageData) {\n          const [thumbnail, fileDimensions, thumbnailDimensions] = imageData;\n\n          Object.assign(upload, fileDimensions);\n\n          if (thumbnail && thumbnailDimensions) {\n            upload.image = thumbnailDimensions;\n            thumb = this.webex.internal.encryption.encryptBinary(thumbnail)\n              .then(({scr, cdata}) => {\n                upload.image.scr = scr;\n\n                return Promise.all([cdata, this.hiddenSpaceUrl]);\n              })\n              .then(([cdata, spaceUrl]) => this._upload(cdata, `${spaceUrl}/upload_sessions`))\n              .then((metadata) => {\n                upload.image.url = upload.image.scr.loc = metadata.downloadUrl;\n              });\n          }\n        }\n\n        return Promise.all([main, thumb]);\n      });\n\n\n    upload[PROMISE_SYMBOL] = promise;\n\n    proxyEvents(emitter, promise);\n\n    return promise;\n  },\n\n  /**\n   * Fetches the files from the share\n   * @returns {Array}\n   */\n  getFiles() {\n    const files = [];\n\n    for (const [key] of this.uploads) {\n      files.push(this.uploads.get(key)[FILE_SYMBOL]);\n    }\n\n    return files;\n  },\n\n\n  /**\n   * @param {File} file\n   * @param {string} uri\n   * @param {Object} uploadOptions - Optional object adding additional params to request body\n   * @private\n   * @returns {Promise}\n   */\n  _upload(file, uri, uploadOptions) {\n    const fileSize = file.length || file.size || file.byteLength;\n    const fileHash = sha256(file).toString();\n    const {role, claimedFileType} = uploadOptions ?? {};\n    const initializeBody = Object.assign({fileSize}, {claimedFileType}, role && {role});\n\n    return this.webex.upload({\n      uri,\n      file,\n      qs: {\n        transcode: true\n      },\n      phases: {\n        initialize: {\n          body: initializeBody\n        },\n        upload: {\n          $url(session) {\n            return session.uploadUrl;\n          }\n        },\n        finalize: {\n          $uri(session) {\n            return session.finishUploadUrl;\n          },\n          body: {fileSize, fileHash}\n        }\n      }\n    });\n  },\n\n  /**\n   * Removes the specified file from the share (Does not currently delete the\n   * uploaded file)\n   * @param {File} file\n   * @returns {Promise}\n   */\n  remove(file) {\n    this.uploads.delete(file);\n\n    // Returns a promise for future-proofiness.\n    return Promise.resolve();\n  },\n\n  /**\n   * @private\n   * @returns {Promise<Object>}\n   */\n  prepare() {\n    if (!this.uploads.size) {\n      throw new Error('Cannot submit a share activity without atleast one file');\n    }\n\n    const activity = {\n      verb: 'share',\n      object: {\n        objectType: 'content',\n        displayName: this.object && this.object.displayName ? this.object.displayName : undefined,\n        content: this.object && this.object.content ? this.object.content : undefined,\n        mentions: this.object && this.object.mentions ? this.object.mentions : undefined,\n        files: {\n          items: []\n        }\n      },\n      clientTempId: this.clientTempId\n    };\n\n    const promises = [];\n\n    this.uploads.forEach((item) => {\n      activity.object.files.items.push(item);\n      promises.push(item[PROMISE_SYMBOL]);\n    });\n\n    activity.object.contentCategory = this._determineContentCategory(activity.object.files.items);\n\n    return Promise.all(promises)\n      .then(() => activity);\n  },\n\n  /**\n   * @param {Array} items\n   * @param {string} mimeType\n   * @private\n   * @returns {boolean}\n   */\n  _itemContainsActionWithMimeType(items, mimeType) {\n    return some(items.map((item) => some(item.actions, {mimeType})));\n  },\n\n  /**\n   * @param {Array} items\n   * @private\n   * @returns {string}\n   */\n  _determineContentCategory(items) {\n    // determine if the items contain an image\n    if (this._itemContainsActionWithMimeType(items, 'application/x-cisco-webex-whiteboard')) {\n      return 'documents';\n    }\n\n    const mimeTypes = filter(map(items, 'mimeType'));\n\n    if (mimeTypes.length !== items.length) {\n      return 'documents';\n    }\n\n    const contentCategory = mimeTypes[0].split('/').shift();\n\n    if (contentCategory !== 'video' && contentCategory !== 'image') {\n      return 'documents';\n    }\n\n    for (const mimeType of mimeTypes) {\n      if (mimeType.split('/').shift() !== contentCategory) {\n        return 'documents';\n      }\n    }\n\n    return `${contentCategory}s`;\n  },\n\n  /**\n   * @param {string} uri\n   * @returns {Promise}\n   */\n  _retrieveSpaceUrl(uri) {\n    return this.webex.request({\n      method: 'PUT',\n      uri\n    })\n      .then((res) => res.body.spaceUrl);\n  }\n});\n\n/**\n * Instantiates a ShareActivity\n * @param {Object} conversation\n * @param {ShareActivity|Object|array} object\n * @param {ProxyWebex} webex\n * @returns {ShareActivity}\n */\nShareActivity.create = function create(conversation, object, webex) {\n  if (object instanceof ShareActivity) {\n    return object;\n  }\n\n  let files;\n\n  if (object?.object?.files) {\n    files = object.object.files;\n    Reflect.deleteProperty(object.object, 'files');\n  }\n\n  const share = new ShareActivity(Object.assign({\n    conversation\n  }, object), {\n    parent: webex\n  });\n\n  files = files?.items ?? files;\n  if (files) {\n    files.forEach((file) => share.add(file));\n  }\n\n  return share;\n};\n\nexport default ShareActivity;\n"],"mappings":"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"}