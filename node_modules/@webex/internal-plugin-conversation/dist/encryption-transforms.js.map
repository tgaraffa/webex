{"version":3,"names":["KEY","encryptTextProp","name","ctx","key","object","transform","encryptJsonProp","transforms","toArray","encryptObject","undefined","resolve","objectType","encryptReaction2","reaction2","encryptConversation","conversation","webex","internal","encryption","kms","createUnboundKeys","count","then","keys","k","kmsMessage","keyUris","includes","uri","push","all","activities","items","reduce","p","activity","encryptionKeyUrl","defaultActivityEncryptionKeyUrl","encryptActivity","created","verb","encryptVerbActivity","maybeEncryptTarget","target","conversationUrl","url","reject","Error","get","updateKey","updateKeyActivity","resource","kmsResourceObjectUrl","logger","warn","prepareActivityKmsMessage","kro","forEach","replace","keyUrl","encryptVerbActivityWithKey","direction","fn","encryptAddActivity","encryptAssignActivity","alias","encryptCreateActivity","encryptPostActivity","encryptShareActivity","encryptCardactionActivity","encryptUpdateActivity","encryptUpdateKeyActivity","encryptComment","comment","encryptContent","content","promises","files","map","item","encryptFile","file","image","scr","encryptSubmit","submit","encryptImageURI","imageURI","encryptPropContent","encryptPropDisplayName","encryptPropInputs","encryptPropLocation","encryptPropScr","encryptScr","encryptText","ciphertext"],"sources":["encryption-transforms.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {\n  capitalize,\n  curry,\n  get,\n  has,\n  isArray\n} from 'lodash';\n\nimport toArray from './to-array';\n\nconst KEY = Symbol('KEY');\n\nconst encryptTextProp = curry((name, ctx, key, object) => ctx.transform('encryptTextProp', name, key, object));\n\nconst encryptJsonProp = curry((name, ctx, key, object) => ctx.transform('encryptJsonProp', name, key, object));\n\n// eslint-disable-next-line import/prefer-default-export\nexport const transforms = toArray('outbound', {\n  encryptObject(ctx, key, object) {\n    if (!object) {\n      object = key;\n      key = undefined;\n    }\n\n    if (!object) {\n      return Promise.resolve();\n    }\n\n    if (!object.objectType) {\n      return Promise.resolve();\n    }\n\n    if (key === false) {\n      return Promise.resolve();\n    }\n\n    return ctx.transform(`encrypt${capitalize(object.objectType)}`, key, object);\n  },\n\n  encryptReaction2(ctx, key, reaction2) {\n    return ctx.transform('encryptPropDisplayName', key, reaction2);\n  },\n\n  encryptConversation(ctx, key, conversation) {\n    if (key === false) {\n      return Promise.resolve();\n    }\n\n    return Promise.resolve(key || ctx.webex.internal.encryption.kms.createUnboundKeys({count: 1}))\n      .then((keys) => {\n        const k = isArray(keys) ? keys[0] : keys;\n\n        if (has(conversation, 'kmsMessage.keyUris') && !conversation.kmsMessage.keyUris.includes(k.uri)) {\n          conversation.kmsMessage.keyUris.push(k.uri);\n        }\n\n        return Promise.all([\n          // too many implicit returns on the same line is difficult to interpret\n          // eslint-disable-next-line arrow-body-style\n          has(conversation, 'activities.items') && conversation.activities.items.reduce((p, activity) => {\n            // eslint-disable-next-line max-nested-callbacks\n            return p.then(() => ctx.transform('encryptObject', k, activity));\n          }, Promise.resolve()),\n          ctx.transform('encryptPropDisplayName', k, conversation)\n        ])\n          .then(() => {\n            conversation.encryptionKeyUrl = k.uri || k;\n            // we only want to set the defaultActivityEncryptionKeyUrl if we've\n            // bound a new key\n            if (!key) {\n              conversation.defaultActivityEncryptionKeyUrl = conversation.defaultActivityEncryptionKeyUrl || k.uri || k;\n            }\n          });\n      });\n  },\n\n  encryptActivity(ctx, key, activity) {\n    // Activity is already encrypted\n    if (activity.encryptionKeyUrl || activity.object?.created === 'True') {\n      return Promise.resolve();\n    }\n\n    return ctx.transform(`encrypt${capitalize(activity.verb)}Activity`, key, activity)\n      .then(() => {\n        key = key || activity[KEY];\n\n        return ctx.transform('prepareActivityKmsMessage', key, activity);\n      });\n  },\n\n  encryptVerbActivity(ctx, key, activity) {\n    return ctx.transform('maybeEncryptTarget', key, activity)\n      .then(() => {\n        key = key || activity[KEY];\n      })\n      .then(() => ctx.transform('encryptObject', key, activity.object));\n  },\n\n  maybeEncryptTarget(ctx, key, activity) {\n    // This isn't quite right; if we just go by key, we have no guarantee that\n    // we have a proper KRO available for add activities\n    if (key) {\n      return Promise.resolve();\n    }\n\n    if (has(activity, 'target.defaultActivityEncryptionKeyUrl') &&\n      activity.target.defaultActivityEncryptionKeyUrl &&\n      has(activity, 'target.kmsResourceObjectUrl')\n    ) {\n      activity[KEY] = key || activity.target.defaultActivityEncryptionKeyUrl;\n\n      return Promise.resolve();\n    }\n\n    const conversationUrl = activity.target && activity.target.url;\n\n    if (!conversationUrl) {\n      return Promise.reject(new Error('Cannot determine encryption key for activity\\'s conversation; no key url or conversation url provided'));\n    }\n\n    return ctx.webex.internal.conversation.get({url: conversationUrl})\n      .then((conversation) => {\n        if (!conversation.defaultActivityEncryptionKeyUrl) {\n          return ctx.webex.internal.conversation.updateKey(conversation)\n            .then((updateKeyActivity) => {\n              if (updateKeyActivity.kmsMessage.resource) {\n                activity.target.kmsResourceObjectUrl = updateKeyActivity.kmsMessage.resource.uri;\n              }\n              activity[KEY] = activity.target.defaultActivityEncryptionKeyUrl = updateKeyActivity.object.defaultActivityEncryptionKeyUrl;\n            });\n        }\n\n        if (!activity.target.defaultActivityEncryptionKeyUrl) {\n          ctx.webex.logger.warn('plugin-conversation: downloaded conversation to determine its defaultActivityEncryptionKeyUrl; make sure to pass all encryption related properties when calling Webex.conversation methods.');\n        }\n\n        if (!activity.target.kmsResourceObjectUrl) {\n          ctx.webex.logger.warn('plugin-conversation: downloaded conversation to determine its kmsResourceObjectUrl; make sure to pass all encryption related properties when calling Webex.conversation methods.');\n        }\n\n        activity[KEY] = activity.target.defaultActivityEncryptionKeyUrl = conversation.defaultActivityEncryptionKeyUrl;\n        activity.target.kmsResourceObjectUrl = conversation.kmsResourceObjectUrl;\n\n        return Promise.resolve();\n      });\n  },\n\n  prepareActivityKmsMessage(ctx, key, activity) {\n    if (activity.kmsMessage) {\n      if (!key && activity.verb === 'delete') {\n        key = get(activity, 'target.defaultActivityEncryptionKeyUrl');\n      }\n\n      if (!key && activity.verb === 'updateKey' && has(activity, 'object.defaultActivityEncryptionKeyUrl')) {\n        key = get(activity, 'object.defaultActivityEncryptionKeyUrl');\n      }\n\n      if (!key && activity.verb === 'leave' && has(activity, 'target.defaultActivityEncryptionKeyUrl')) {\n        key = get(activity, 'target.defaultActivityEncryptionKeyUrl');\n      }\n\n      if (key) {\n        const kro = activity.target.kmsResourceObjectUrl;\n\n        ['uri', 'resourceUri'].forEach((k) => {\n          if (activity.kmsMessage[k] && !kro && activity.kmsMessage[k].includes('<KRO>')) {\n            throw new Error('encrypter: cannot determine kro');\n          }\n\n          if (activity.kmsMessage[k]) {\n            activity.kmsMessage[k] = activity.kmsMessage[k].replace('<KRO>', kro);\n            // key may be a key or a key url\n            activity.kmsMessage[k] = activity.kmsMessage[k].replace('<KEYURL>', key.keyUrl || key);\n          }\n        });\n      }\n      // If we made it this far and still don't have an encryption key, assume\n      // this is a conversation that is not encrypted and we're performing an\n      // action that should not encrypt it (e.g. `leave`)\n      else {\n        Reflect.deleteProperty(activity, 'kmsMessage');\n      }\n    }\n  },\n\n  encryptVerbActivityWithKey: {\n    direction: 'outbound',\n    fn(ctx, key, activity) {\n      return ctx.transform('encryptVerbActivity', key, activity)\n        .then(() => {\n          key = key || activity[KEY];\n          activity.encryptionKeyUrl = key.uri || key;\n        });\n    }\n  },\n\n  encryptAddActivity: {\n    direction: 'outbound',\n    fn(ctx, key, activity) {\n      if (has(activity, 'object.objectType') && activity.object.objectType === 'reaction2') {\n        return ctx.transform('encryptVerbActivityWithKey', key, activity);\n      }\n\n      return ctx.transform('encryptVerbActivity', key, activity);\n    }\n  },\n\n  encryptAssignActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey'\n  },\n\n  encryptCreateActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivity'\n  },\n\n  encryptPostActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey'\n  },\n\n  encryptShareActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey'\n  },\n\n  encryptCardactionActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey'\n  },\n\n  encryptUpdateActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey'\n  },\n\n  encryptUpdateKeyActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivity'\n  },\n\n  encryptComment(ctx, key, comment) {\n    return Promise.all([\n      ctx.transform('encryptPropDisplayName', key, comment),\n      ctx.transform('encryptPropContent', key, comment)\n    ]);\n  },\n\n  encryptContent(ctx, key, content) {\n    const promises = content.files.items.map((item) => ctx.transform('encryptObject', key, item));\n\n    promises.push(ctx.transform('encryptPropContent', key, content));\n    promises.push(ctx.transform('encryptPropDisplayName', key, content));\n\n    return Promise.all(promises);\n  },\n\n  encryptFile(ctx, key, file) {\n    if (file.image && !file.image.scr) {\n      return Promise.reject(new Error('`file.image` must have an `scr`'));\n    }\n\n    return Promise.all([\n      ctx.transform('encryptPropScr', key, file),\n      ctx.transform('encryptPropDisplayName', key, file),\n      ctx.transform('encryptPropContent', key, file),\n      file.image && ctx.transform('encryptPropScr', key, file.image)\n    ]);\n  },\n\n  encryptSubmit(ctx, key, submit) {\n    return ctx.transform('encryptPropInputs', key, submit);\n  },\n\n  // TODO is this used for anything other than the now-removed stickies service?\n  encryptImageURI(ctx, key, imageURI) {\n    return ctx.transform('encryptPropLocation', key, imageURI);\n  },\n\n  encryptPropContent: encryptTextProp('content'),\n\n  encryptPropDisplayName: encryptTextProp('displayName'),\n\n  encryptPropInputs: encryptJsonProp('inputs'),\n\n  encryptPropLocation: encryptTextProp('location'),\n\n  encryptPropScr(ctx, key, object) {\n    if (!object.scr) {\n      return Promise.resolve();\n    }\n\n    return ctx.webex.internal.encryption.encryptScr(key, object.scr)\n      .then((scr) => {\n        object.scr = scr;\n      });\n  },\n\n  encryptJsonProp(ctx, name, key, object) {\n    if (!object[name]) {\n      return Promise.resolve();\n    }\n\n    return ctx.webex.internal.encryption.encryptText(key.uri || key, JSON.stringify(object[name]))\n      .then((ciphertext) => {\n        object[name] = ciphertext;\n      });\n  },\n\n  encryptTextProp(ctx, name, key, object) {\n    if (!object[name]) {\n      return Promise.resolve();\n    }\n\n    return ctx.webex.internal.encryption.encryptText(key.uri || key, object[name])\n      .then((ciphertext) => {\n        object[name] = ciphertext;\n      });\n  }\n});\n"],"mappings":"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"}