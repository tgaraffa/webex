{"version":3,"names":["Authorization","WebexPlugin","extend","whileInFlight","derived","isAuthenticating","deps","fn","isAuthorizing","session","default","type","namespace","logout","options","webex","request","method","uri","config","logoutUrl","body","token","cisService","service","requestAuthorizationCodeGrant","logger","info","code","reject","Error","tokenUrl","form","grant_type","redirect_uri","self_contained_token","auth","user","client_id","pass","client_secret","sendImmediately","shouldRefreshAccessToken","then","res","credentials","set","supertoken","catch","statusCode","ErrorConstructor","grantErrors","select","error","_res","requestAccessTokenFromJwt","jwt","hydraUri","internal","services","get","slice","process","env","HYDRA_SERVICE_URL","headers","authorization","access_token","token_type","expires_in","expiresIn","initServiceCatalogs","oneFlight"],"sources":["authorization.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint camelcase: [0] */\n\nimport {oneFlight, whileInFlight} from '@webex/common';\nimport {grantErrors, WebexPlugin} from '@webex/webex-core';\n\n/**\n * NodeJS support for OAuth2\n * @class\n * @name AuthorizationNode\n */\nconst Authorization = WebexPlugin.extend({\n  derived: {\n    /**\n     * Alias of {@link AuthorizationNode#isAuthorizing}\n     * @instance\n     * @memberof AuthorizationNode\n     * @type {boolean}\n     */\n    isAuthenticating: {\n      deps: ['isAuthorizing'],\n      fn() {\n        return this.isAuthorizing;\n      }\n    }\n  },\n\n  session: {\n    /**\n     * Indicates if an Authorization Code exchange is inflight\n     * @instance\n     * @memberof AuthorizationNode\n     * @type {boolean}\n     */\n    isAuthorizing: {\n      default: false,\n      type: 'boolean'\n    }\n  },\n\n  namespace: 'Credentials',\n\n  logout(options = {}) {\n    this.webex.request({\n      method: 'POST',\n      uri: this.config.logoutUrl,\n      body: {\n        token: options.token,\n        cisService: this.config.service\n      }\n    });\n  },\n\n  @whileInFlight('isAuthorizing')\n  @oneFlight\n  /**\n   * Exchanges an authorization code for an access token\n   * @instance\n   * @memberof AuthorizationNode\n   * @param {Object} options\n   * @param {Object} options.code\n   * @returns {Promise}\n   */\n  requestAuthorizationCodeGrant(options = {}) {\n    this.logger.info('credentials: requesting authorization code grant');\n\n    if (!options.code) {\n      return Promise.reject(new Error('`options.code` is required'));\n    }\n\n    return this.webex.request({\n      method: 'POST',\n      uri: this.config.tokenUrl,\n      form: {\n        grant_type: 'authorization_code',\n        redirect_uri: this.config.redirect_uri,\n        code: options.code,\n        self_contained_token: true\n      },\n      auth: {\n        user: this.config.client_id,\n        pass: this.config.client_secret,\n        sendImmediately: true\n      },\n      shouldRefreshAccessToken: false\n    })\n      .then((res) => {\n        this.webex.credentials.set({supertoken: res.body});\n      })\n      .catch((res) => {\n        if (res.statusCode !== 400) {\n          return Promise.reject(res);\n        }\n\n        const ErrorConstructor = grantErrors.select(res.body.error);\n\n        return Promise.reject(new ErrorConstructor(res._res || res));\n      });\n  },\n\n  @oneFlight\n  /**\n   * Requests a Webex access token for a user already authenticated into\n   * your product.\n   *\n   * Note: You'll need to supply a jwtRefreshCallback of the form\n   * `Promise<jwt> = jwtRefreshCallback(webex)` for automatic token refresh to\n   * work.\n   *\n   * @instance\n   * @memberof AuthorizationNode\n   * @param {Object} options\n   * @param {Object} options.jwt This is a jwt generated by your backend that\n   * identifies a user in your system\n   * @returns {Promise}\n   */\n  requestAccessTokenFromJwt({jwt}) {\n    let hydraUri = this.webex.internal.services.get('hydra', true);\n\n    if (hydraUri && hydraUri.slice(-1) !== '/') {\n      // add a `/` to hydra's uri from the services catalog so that\n      // it matches the current env service format.\n      hydraUri += '/';\n    }\n\n    hydraUri = hydraUri ||\n      process.env.HYDRA_SERVICE_URL ||\n      'https://api.ciscospark.com/v1/';\n\n    return this.webex.request({\n      method: 'POST',\n      uri: `${hydraUri}jwt/login`,\n      headers: {\n        authorization: jwt\n      }\n    })\n      .then(({body}) => ({\n        access_token: body.token,\n        token_type: 'Bearer',\n        expires_in: body.expiresIn\n      }))\n      .then((token) => {\n        this.webex.credentials.set({\n          supertoken: token\n        });\n      })\n      .then(() => this.webex.internal.services.initServiceCatalogs());\n  }\n});\n\nexport default Authorization;\n"],"mappings":"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"}