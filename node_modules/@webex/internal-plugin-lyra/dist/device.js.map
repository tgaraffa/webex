{"version":3,"names":["Device","WebexPlugin","extend","namespace","getAudioState","space","webex","request","method","uri","url","then","res","body","putAudioState","audioState","deviceUrl","reject","Error","mute","unmute","increaseVolume","decreaseVolume","setVolume","level"],"sources":["device.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {WebexPlugin} from '@webex/webex-core';\n\n/**\n * @class\n * @extends {Lyra}\n * @memberof Lyra\n */\nconst Device = WebexPlugin.extend({\n  namespace: 'Lyra',\n\n  /**\n   * Gets the audio state of the device\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise<LyraAudioState>} {volume, microphones, url}\n   */\n  getAudioState(space) {\n    return this.webex.request({\n      method: 'GET',\n      uri: `${space.url}/audio`\n    })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Updates audio state for lyra device, should be called every 10 minutes or\n   * when mic or volume state is changed\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {Types~LyraAudioState} audioState\n   * @param {object} audioState.volume optional\n   * @param {boolean} audioState.volume.level\n   * @param {object} audioState.microphones optional\n   * @param {boolean} audioState.microphones.muted\n   * @param {string} audioState.deviceUrl\n   * @returns {Promise}\n   */\n  putAudioState(space, audioState = {}) {\n    if (!audioState.deviceUrl) {\n      return Promise.reject(new Error('audioState.deviceUrl is required'));\n    }\n\n    return this.webex.request({\n      method: 'PUT',\n      uri: `${space.url}/audio`,\n      body: audioState\n    })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Mutes lyra device\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  mute(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/microphones/actions/mute/invoke`\n    });\n  },\n\n  /**\n   * Unmutes lyra device\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  unmute(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/microphones/actions/un-mute/invoke`\n    });\n  },\n\n  /**\n   * Increases lyra device's volume\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  increaseVolume(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/volume/actions/increase/invoke`\n    });\n  },\n\n  /**\n   * Decreases lyra device's volume\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  decreaseVolume(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/volume/actions/decrease/invoke`\n    });\n  },\n\n  /**\n   * Sets lyra device's volume but should use increase and decrease api instead\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {integer} level to be set\n   * @returns {Promise}\n   */\n  setVolume(space, level = 0) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/volume/actions/set/invoke`,\n      body: {\n        level\n      }\n    });\n  }\n\n});\n\nexport default Device;\n"],"mappings":";;;;;;;;;;;;;;AAIA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA,IAAMA,MAAM,GAAGC,sBAAA,CAAYC,MAAZ,CAAmB;EAChCC,SAAS,EAAE,MADqB;;EAGhC;AACF;AACA;AACA;AACA;AACA;EACEC,aATgC,yBASlBC,KATkB,EASX;IACnB,OAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,KADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX;IAFqB,CAAnB,EAIJC,IAJI,CAIC,UAACC,GAAD;MAAA,OAASA,GAAG,CAACC,IAAb;IAAA,CAJD,CAAP;EAKD,CAf+B;;EAiBhC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,aA9BgC,yBA8BlBT,KA9BkB,EA8BM;IAAA,IAAjBU,UAAiB,uEAAJ,EAAI;;IACpC,IAAI,CAACA,UAAU,CAACC,SAAhB,EAA2B;MACzB,OAAO,iBAAQC,MAAR,CAAe,IAAIC,KAAJ,CAAU,kCAAV,CAAf,CAAP;IACD;;IAED,OAAO,KAAKZ,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,KADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX,WAFqB;MAGxBG,IAAI,EAAEE;IAHkB,CAAnB,EAKJJ,IALI,CAKC,UAACC,GAAD;MAAA,OAASA,GAAG,CAACC,IAAb;IAAA,CALD,CAAP;EAMD,CAzC+B;;EA2ChC;AACF;AACA;AACA;AACA;AACA;EACEM,IAjDgC,gBAiD3Bd,KAjD2B,EAiDpB;IACV,OAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,MADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX;IAFqB,CAAnB,CAAP;EAID,CAtD+B;;EAwDhC;AACF;AACA;AACA;AACA;AACA;EACEU,MA9DgC,kBA8DzBf,KA9DyB,EA8DlB;IACZ,OAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,MADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX;IAFqB,CAAnB,CAAP;EAID,CAnE+B;;EAqEhC;AACF;AACA;AACA;AACA;AACA;EACEW,cA3EgC,0BA2EjBhB,KA3EiB,EA2EV;IACpB,OAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,MADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX;IAFqB,CAAnB,CAAP;EAID,CAhF+B;;EAkFhC;AACF;AACA;AACA;AACA;AACA;EACEY,cAxFgC,0BAwFjBjB,KAxFiB,EAwFV;IACpB,OAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,MADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX;IAFqB,CAAnB,CAAP;EAID,CA7F+B;;EA+FhC;AACF;AACA;AACA;AACA;AACA;AACA;EACEa,SAtGgC,qBAsGtBlB,KAtGsB,EAsGJ;IAAA,IAAXmB,KAAW,uEAAH,CAAG;IAC1B,OAAO,KAAKlB,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,MADgB;MAExBC,GAAG,YAAKJ,KAAK,CAACK,GAAX,qCAFqB;MAGxBG,IAAI,EAAE;QACJW,KAAK,EAALA;MADI;IAHkB,CAAnB,CAAP;EAOD,CA9G+B;EAAA;AAAA,CAAnB,CAAf;;eAkHexB,M"}