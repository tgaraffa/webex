{"version":3,"names":["Space","WebexPlugin","extend","namespace","list","webex","request","method","api","resource","then","res","body","items","get","space","spaceId","id","identity","reject","Error","join","options","passType","pass","type","deviceUrl","internal","device","url","data","verificationInitiation","uri","leave","removeAllDevices","params","base64","toBase64Url","querystring","stringify","verifyOccupant","occupantId","getCurrentBindings","bindConversation","conversation","kmsResourceObjectUrl","kmsMessage","resourceUri","userIds","conversationUrl","_bindConversation","resolve","encodedDeviceUrl","encode","bindingCleanupAfterCall","unbindConversation","parameters","authId","encryption","kms","prepareRequest","req","wrapped","deleteBinding","bindingId"],"sources":["space.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport querystring from 'querystring';\n\nimport {WebexPlugin} from '@webex/webex-core';\nimport {base64} from '@webex/common';\n\n/**\n * @class\n * @extends {Lyra}\n * @memberof Lyra\n */\nconst Space = WebexPlugin.extend({\n  namespace: 'Lyra',\n\n  /**\n   * Lists lyra spaces associated with user\n   *\n   * @returns {Promise<Array>} spaces\n   */\n  list() {\n    return this.webex.request({\n      method: 'GET',\n      api: 'lyra',\n      resource: '/spaces'\n    })\n      .then((res) => res.body.items);\n  },\n\n  /**\n   * Retrieves a lyra space info\n   * @param {Types~LyraSpace} space\n   * @param {string} space.id\n   * @param {string} space.identity.id\n   * @returns {Promise<LyraSpace>} response body\n   */\n  get(space = {}) {\n    const spaceId = space.id || space.identity && space.identity.id;\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    return this.webex.request({\n      method: 'GET',\n      api: 'lyra',\n      resource: `/spaces/${spaceId}`\n    })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Joins a lyra space, update every 10 minutes to keep alive for MANUAL\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {object} options\n   * @param {string} options.passType\n   * @param {string} options.data additional data such as proof for ultrasound\n   * @param {string} options.uri use a custom uri\n   * @returns {Promise}\n   */\n  join(space, options) {\n    options = Object.assign({\n      passType: 'MANUAL'\n    }, options);\n\n    const body = {\n      pass: {\n        type: options.passType\n      },\n      deviceUrl: this.webex.internal.device.url\n    };\n\n    if (options.data) {\n      body.pass.data = options.data;\n    }\n\n    if (options.verificationInitiation) {\n      body.verificationInitiation = options.verificationInitiation;\n    }\n\n    // if options.uri is available use it, since that would have the\n    // complete lyra service URL\n    if (options.uri) {\n      return this.webex.request({\n        method: 'PUT',\n        uri: options.uri,\n        body\n      });\n    }\n\n    return this.webex.request({\n      method: 'PUT',\n      api: 'lyra',\n      resource: `${space.url}/occupants/@me`,\n      body\n    });\n  },\n\n  /**\n   * Leaves a lyra space\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {object} options\n   * @param {boolean} options.removeAllDevices remove all devices of current user also\n   * @returns {Promise}\n   */\n  leave(space, options = {}) {\n    // all devices are removed by default (when deviceUrl is not supplied)\n    let uri = `${space.url}/occupants/@me`;\n\n    if (!options.removeAllDevices) {\n      const params = {\n        deviceUrl: base64.toBase64Url(this.webex.internal.device.url)\n      };\n\n      uri += `?${querystring.stringify(params)}`;\n    }\n\n    return this.webex.request({\n      method: 'DELETE',\n      api: 'lyra',\n      resource: uri\n    });\n  },\n\n  /**\n   * Verifies a space occupant (to be used by the lyra device)\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} occupantId id of user to verify\n   * @returns {Promise}\n   */\n  verifyOccupant(space, occupantId) {\n    const body = {\n      pass: {\n        type: 'VERIFICATION'\n      }\n    };\n\n    return this.webex.request({\n      method: 'PUT',\n      uri: `${space.url}/occupants/${occupantId}`,\n      body\n    });\n  },\n\n\n  /**\n   * Gets the state of bindings in this Lyra space\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  getCurrentBindings(space) {\n    return this.webex.request({\n      method: 'GET',\n      uri: `${space.url}/bindings`\n    })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Binds a conversation to lyra space\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} space.id\n   * @param {string} space.identity.id\n   * @param {Types~Conversation} conversation\n   * @param {string} conversation.kmsResourceObjectUrl\n   * @param {string} conversation.url\n   * @param {object} options\n   * @param {boolean} options.uri complete lyra service URL\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  bindConversation(space = {}, conversation = {}, options = {}) {\n    const spaceId = space.id || space.identity && space.identity.id;\n\n    if (!space.url) {\n      return Promise.reject(new Error('space.url is required'));\n    }\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    if (!conversation.kmsResourceObjectUrl) {\n      return Promise.reject(new Error('conversation.kmsResourceObjectUrl is required'));\n    }\n\n    if (!conversation.url) {\n      return Promise.reject(new Error('conversation.url is required'));\n    }\n\n    const body = {\n      kmsMessage: {\n        method: 'create',\n        uri: '/authorizations',\n        resourceUri: `${conversation.kmsResourceObjectUrl}`,\n        userIds: [spaceId]\n      },\n      conversationUrl: conversation.url\n    };\n\n    const request = {\n      method: 'POST',\n      body\n    };\n\n    // if options.uri is available use it, since that would have the\n    // complete lyra service URL\n    if (options.uri) {\n      request.uri = options.uri;\n    }\n    else {\n      request.api = 'lyra';\n      request.resource = `${space.url}/bindings`;\n    }\n\n    return this._bindConversation(spaceId)\n      .then(() => this.webex.request(request))\n      .then((res) => res.body);\n  },\n\n  /**\n   * Binds a conversation to lyra space by posting capabilities to Lyra.\n   *\n   * Lyra no longer automatically enables binding for a space containing a device with type \"SPARK_BOARD\".\n   * Webexboard now is running the CE code stack which supports posting of capabilities to Lyra.\n   * @param {String} spaceId space ID\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  _bindConversation(spaceId) {\n    // Skip until we can bind a conversation to lyra space by posting capabilities to Lyra.\n    /* eslint no-unreachable: 1 */\n    return Promise.resolve();\n\n    // PUT /lyra/api/v1/spaces/{spaceId}/devices/{encodedDeviceUrl}/capabilities\n    const encodedDeviceUrl = base64.encode(this.webex.internal.device.url);\n    const resource = `spaces/${spaceId}/devices/${encodedDeviceUrl}/capabilities`;\n\n    return this.webex.request({\n      method: 'PUT',\n      api: 'lyra',\n      resource,\n      body: {\n        bindingCleanupAfterCall: true\n      }\n    });\n  },\n\n  /**\n   * Removes binding between a conversation and a lyra space using conversation\n   * url\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} space.id\n   * @param {string} space.identity.id\n   * @param {Types~Conversation} conversation\n   * @param {string} conversation.kmsResourceObjectUrl\n   * @param {string} conversation.url\n   * @param {object} options\n   * @param {boolean} options.uri complete lyra service URL\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  unbindConversation(space = {}, conversation = {}, options = {}) {\n    const spaceId = space.id || space.identity && space.identity.id;\n\n    if (!space.url) {\n      return Promise.reject(new Error('space.url is required'));\n    }\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    if (!conversation.url) {\n      return Promise.reject(new Error('conversation.url is required'));\n    }\n\n    if (!conversation.kmsResourceObjectUrl) {\n      return Promise.reject(new Error('conversation.kmsResourceObjectUrl is required'));\n    }\n\n    const parameters = {\n      kmsMessage: {\n        method: 'delete',\n        uri: `${conversation.kmsResourceObjectUrl}/authorizations?${querystring.stringify({authId: spaceId})}`\n      },\n      conversationUrl: base64.toBase64Url(conversation.url)\n    };\n\n    return this.webex.internal.encryption.kms.prepareRequest(parameters.kmsMessage)\n      .then((req) => {\n        parameters.kmsMessage = req.wrapped;\n        // if options.uri is available use it, since that would have the\n        // complete lyra service URL\n        if (options.uri) {\n          return this.webex.request({\n            method: 'DELETE',\n            uri: `${options.uri}?${querystring.stringify(parameters)}`\n          });\n        }\n\n        return this.webex.request({\n          method: 'DELETE',\n          api: 'lyra',\n          resource: `${space.url}/bindings?${querystring.stringify(parameters)}`\n        });\n      });\n  },\n\n  /**\n   * Delete a binding using binding id\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} space.identity.id\n   * @param {object} options\n   * @param {string} options.kmsResourceObjectUrl\n   * @param {string} options.bindingId\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  deleteBinding(space = {}, options = {}) {\n    const spaceId = space.id || space.identity && space.identity.id;\n\n    if (!space.url) {\n      return Promise.reject(new Error('space.url is required'));\n    }\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    if (!options.kmsResourceObjectUrl) {\n      return Promise.reject(new Error('options.kmsResourceObjectUrl is required'));\n    }\n\n    if (!options.bindingId) {\n      return Promise.reject(new Error('options.bindingId is required'));\n    }\n\n    const parameters = {\n      kmsMessage: {\n        method: 'delete',\n        uri: `${options.kmsResourceObjectUrl}/authorizations?${querystring.stringify({authId: spaceId})}`\n      }\n    };\n\n    return this.webex.internal.encryption.kms.prepareRequest(parameters.kmsMessage)\n      .then((req) => {\n        parameters.kmsMessage = req.wrapped;\n\n        return this.webex.request({\n          method: 'DELETE',\n          uri: `${space.url}/bindings/${options.bindingId}?${querystring.stringify(parameters)}`\n        });\n      });\n  }\n});\n\nexport default Space;\n"],"mappings":"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"}