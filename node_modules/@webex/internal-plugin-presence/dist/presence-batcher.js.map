{"version":3,"names":["PresenceBatcher","Batcher","extend","namespace","handleHttpSuccess","res","all","body","statusList","map","presenceResponse","handleItemSuccess","subject","handleItemFailure","item","response","getDeferredForResponse","then","defer","reject","resolve","fingerprintRequest","id","fingerprintResponse","prepareRequest","ids","submitHttpRequest","subjects","webex","request","method","api","resource"],"sources":["presence-batcher.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Batcher} from '@webex/webex-core';\n\n/**\n * @class\n * @ignore\n */\nconst PresenceBatcher = Batcher.extend({\n  namespace: 'Presence',\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {HttpResponseObject} res\n   * @returns {Promise}\n   */\n  handleHttpSuccess(res) {\n    return Promise.all(res.body.statusList.map((presenceResponse) =>\n      this.handleItemSuccess(presenceResponse.subject, presenceResponse)));\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemFailure(item, response) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.reject(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} item\n   * @param {Object} response\n   * @returns {Promise}\n   */\n  handleItemSuccess(item, response) {\n    return this.getDeferredForResponse(item)\n      .then((defer) => {\n        defer.resolve(response);\n      });\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintRequest(id) {\n    return Promise.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {string} id\n   * @returns {Promise<string>}\n   */\n  fingerprintResponse(id) {\n    return Promise.resolve(id);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Array} ids\n   * @returns {Promise<Array>}\n   */\n  prepareRequest(ids) {\n    return Promise.resolve(ids);\n  },\n\n  /**\n   * @instance\n   * @memberof PresenceBatcher\n   * @param {Object} subjects\n   * @returns {Promise<HttpResponseObject>}\n   */\n  submitHttpRequest(subjects) {\n    return this.webex.request({\n      method: 'POST',\n      api: 'apheleia',\n      resource: 'compositions',\n      body: {subjects}\n    });\n  }\n});\n\nexport default PresenceBatcher;\n"],"mappings":";;;;;;;;;;;;;;AAIA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA,IAAMA,eAAe,GAAGC,kBAAA,CAAQC,MAAR,CAAe;EACrCC,SAAS,EAAE,UAD0B;;EAGrC;AACF;AACA;AACA;AACA;AACA;EACEC,iBATqC,6BASnBC,GATmB,EASd;IAAA;;IACrB,OAAO,iBAAQC,GAAR,CAAYD,GAAG,CAACE,IAAJ,CAASC,UAAT,CAAoBC,GAApB,CAAwB,UAACC,gBAAD;MAAA,OACzC,KAAI,CAACC,iBAAL,CAAuBD,gBAAgB,CAACE,OAAxC,EAAiDF,gBAAjD,CADyC;IAAA,CAAxB,CAAZ,CAAP;EAED,CAZoC;;EAcrC;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,iBArBqC,6BAqBnBC,IArBmB,EAqBbC,QArBa,EAqBH;IAChC,OAAO,KAAKC,sBAAL,CAA4BF,IAA5B,EACJG,IADI,CACC,UAACC,KAAD,EAAW;MACfA,KAAK,CAACC,MAAN,CAAaJ,QAAb;IACD,CAHI,CAAP;EAID,CA1BoC;;EA4BrC;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,iBAnCqC,6BAmCnBG,IAnCmB,EAmCbC,QAnCa,EAmCH;IAChC,OAAO,KAAKC,sBAAL,CAA4BF,IAA5B,EACJG,IADI,CACC,UAACC,KAAD,EAAW;MACfA,KAAK,CAACE,OAAN,CAAcL,QAAd;IACD,CAHI,CAAP;EAID,CAxCoC;;EA0CrC;AACF;AACA;AACA;AACA;AACA;EACEM,kBAhDqC,8BAgDlBC,EAhDkB,EAgDd;IACrB,OAAO,iBAAQF,OAAR,CAAgBE,EAAhB,CAAP;EACD,CAlDoC;;EAoDrC;AACF;AACA;AACA;AACA;AACA;EACEC,mBA1DqC,+BA0DjBD,EA1DiB,EA0Db;IACtB,OAAO,iBAAQF,OAAR,CAAgBE,EAAhB,CAAP;EACD,CA5DoC;;EA8DrC;AACF;AACA;AACA;AACA;AACA;EACEE,cApEqC,0BAoEtBC,GApEsB,EAoEjB;IAClB,OAAO,iBAAQL,OAAR,CAAgBK,GAAhB,CAAP;EACD,CAtEoC;;EAwErC;AACF;AACA;AACA;AACA;AACA;EACEC,iBA9EqC,6BA8EnBC,QA9EmB,EA8ET;IAC1B,OAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;MACxBC,MAAM,EAAE,MADgB;MAExBC,GAAG,EAAE,UAFmB;MAGxBC,QAAQ,EAAE,cAHc;MAIxBzB,IAAI,EAAE;QAACoB,QAAQ,EAARA;MAAD;IAJkB,CAAnB,CAAP;EAMD;AArFoC,CAAf,CAAxB;;eAwFe3B,e"}