{"version":3,"names":["whileInFlight","param","whileInFlightDecorator","target","name","descriptor","value","whileInFlightExecutor","fn","args","resolve","then","tap","catch","reason","reject"],"sources":["while-in-flight.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint no-invalid-this: [0] */\n\nimport {wrap} from 'lodash';\n\nimport tap from './tap';\n\n/**\n * While the promise returned by the decorated is unfullfilled, sets, the\n * specified boolean on the target class to `true`\n * @param {string} param\n * @returns {Function}\n */\nexport default function whileInFlight(param) {\n  return function whileInFlightDecorator(target, name, descriptor) {\n    descriptor.value = wrap(descriptor.value, function whileInFlightExecutor(fn, ...args) {\n      return new Promise((resolve) => {\n        this[param] = true;\n        resolve(Reflect.apply(fn, this, args)\n          .then(tap(() => {\n            this[param] = false;\n          }))\n          .catch((reason) => {\n            this[param] = false;\n\n            return Promise.reject(reason);\n          }));\n      });\n    });\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;EAC3C,OAAO,SAASC,sBAAT,CAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,UAA9C,EAA0D;IAC/DA,UAAU,CAACC,KAAX,GAAmB,oBAAKD,UAAU,CAACC,KAAhB,EAAuB,SAASC,qBAAT,CAA+BC,EAA/B,EAA4C;MAAA;;MAAA,kCAANC,IAAM;QAANA,IAAM;MAAA;;MACpF,OAAO,qBAAY,UAACC,OAAD,EAAa;QAC9B,KAAI,CAACT,KAAD,CAAJ,GAAc,IAAd;QACAS,OAAO,CAAC,oBAAcF,EAAd,EAAkB,KAAlB,EAAwBC,IAAxB,EACLE,IADK,CACA,IAAAC,YAAA,EAAI,YAAM;UACd,KAAI,CAACX,KAAD,CAAJ,GAAc,KAAd;QACD,CAFK,CADA,EAILY,KAJK,CAIC,UAACC,MAAD,EAAY;UACjB,KAAI,CAACb,KAAD,CAAJ,GAAc,KAAd;UAEA,OAAO,iBAAQc,MAAR,CAAeD,MAAf,CAAP;QACD,CARK,CAAD,CAAP;MASD,CAXM,CAAP;IAYD,CAbkB,CAAnB;EAcD,CAfD;AAgBD"}