{"version":3,"names":["escapeMe","escape","html","resolve","escapeSync","replace","entityReplacer","char"],"sources":["html-base.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nconst escapeMe = /(<|>|&)/g;\n\n// escape and escapeSync probably don't both need to exist, but it seemed like a\n// good idea in case we ever want to for the future.\n\n/**\n * Escapes HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escape(html) {\n  return new Promise((resolve) => resolve(escapeSync(html)));\n}\n\n/**\n * Synchronously escape HTML\n * @param {[type]} html\n * @returns {[type]}\n */\nexport function escapeSync(html) {\n  return html.replace(escapeMe, entityReplacer);\n}\n\n/**\n * @param {string} char\n * @private\n * @returns {string}\n */\nfunction entityReplacer(char) {\n  switch (char) {\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '&':\n      return '&amp;';\n    default:\n      return char;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA,IAAMA,QAAQ,GAAG,UAAjB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EAC3B,OAAO,qBAAY,UAACC,OAAD;IAAA,OAAaA,OAAO,CAACC,UAAU,CAACF,IAAD,CAAX,CAApB;EAAA,CAAZ,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASE,UAAT,CAAoBF,IAApB,EAA0B;EAC/B,OAAOA,IAAI,CAACG,OAAL,CAAaL,QAAb,EAAuBM,cAAvB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;EAC5B,QAAQA,IAAR;IACE,KAAK,GAAL;MACE,OAAO,MAAP;;IACF,KAAK,GAAL;MACE,OAAO,MAAP;;IACF,KAAK,GAAL;MACE,OAAO,OAAP;;IACF;MACE,OAAOA,IAAP;EARJ;AAUD"}