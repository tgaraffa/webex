{"version":3,"names":["Transcription","webSocketUrl","sessionId","members","sessionID","memberCSIs","params","webSocket","WebSocket","token","onopen","send","id","uuidv4","type","data","trackingId","toString","callback","onclose","event","onerror","csis","csi","member","membersCollection","find","participant","status","selfIsSpeaking","includes","speaker","transcription","onmessage","JSON","parse","voiceaPayload","getSpeaker","messageID","transcript_id","personID","timestamp","close"],"sources":["index.js"],"sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\n/**\n * @description Meeting Webex assistance transcription feature.\n * @exports\n * @class Transcription\n */\nexport default class Transcription {\n  /**\n   * @param {string} webSocketUrl\n   * @param {sessionID} sessionId\n   * @param {object} members\n   * @constructor\n   * @memberof Transcription\n   */\n  constructor(webSocketUrl, sessionId, members) {\n    this.webSocketUrl = webSocketUrl;\n    this.sessionID = sessionId;\n    this.members = members;\n    this.memberCSIs = {};\n\n    const params = '?outboundWireFormat=text&bufferStates=true&aliasHttpStatus=true';\n\n    this.webSocket = new WebSocket(`${this.webSocketUrl}${params}`);\n  }\n\n  /**\n   * open the Low Latency Mercury connection\n   * An event parameter will be send to the callback.\n   *\n   * @param {string} token\n   * @param {string} sessionID\n   * @returns {void}\n   */\n  connect(token) {\n    this.webSocket.onopen = () => {\n      this.webSocket.send(JSON.stringify({\n        id: uuidv4(),\n        type: 'authorization',\n        data: {token: `Bearer ${token}`},\n        trackingId: `webex-js-sdk_${this.sessionID}${Date.now.toString()}`\n      }));\n    };\n  }\n\n  /**\n   * Sets callback to invoke when the web socket connection is closed.\n   *\n   * @param {function} callback\n   * @returns {void}\n   */\n  onCloseSocket(callback) {\n    if (callback) {\n      this.webSocket.onclose = (event) => {\n        callback(event);\n      };\n    }\n  }\n\n  /**\n   * Sets callback to invoke when a web socket connection error occurs.\n   * An event parameter will be send to the callback.\n   *\n   * @param {function} callback\n   * @returns {void}\n   */\n  onErrorSocket(callback) {\n    if (callback) {\n      this.webSocket.onerror = (event) => {\n        callback(event);\n      };\n    }\n  }\n\n  /**\n   * Get current speaker from the given csis payload and update the global csis map\n   *\n   * @private\n   * @param {object} csis\n   * @returns {object}\n   */\n  getSpeaker(csis) {\n    for (const csi of csis) {\n      const member = this.memberCSIs[csi];\n\n      if (member) {\n        return member;\n      }\n    }\n\n    return Object.values(this.members.membersCollection.members)\n      .find((member) => {\n        const memberCSIs = member.participant.status.csis;\n        let selfIsSpeaking = false;\n\n        for (const csi of csis) {\n          if (memberCSIs.includes(csi)) {\n            this.memberCSIs[csi] = member;\n            selfIsSpeaking = true;\n            break;\n          }\n        }\n\n        return selfIsSpeaking;\n      });\n  }\n\n  /**\n   * Sends transcription data to given callback as it arrives.\n   *\n   * @param {function} callback\n   * @returns {void}\n   */\n  subscribe(callback) {\n    let data, csis, speaker, transcription;\n\n    this.webSocket.onmessage = (event) => {\n      data = JSON.parse(event.data);\n      csis = data.data?.voiceaPayload?.csis || [];\n      speaker = this.getSpeaker(csis);\n      transcription = data.data?.voiceaPayload?.data || '';\n\n      this.webSocket.send(JSON.stringify({messageID: data.id, type: 'ack'}));\n\n      if (transcription) {\n        callback(\n          {\n            id: data.data?.voiceaPayload?.transcript_id,\n            personID: speaker?.id,\n            transcription,\n            timestamp: data.timestamp,\n            type: data?.data?.voiceaPayload?.type\n          }\n        );\n      }\n    };\n  }\n\n  /**\n   * Close the LLM web socket connection\n   * @returns {void}\n   */\n  closeSocket() {\n    this.webSocket.close();\n  }\n}\n\n"],"mappings":"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"}