{"version":3,"names":["Member","participant","options","MEETINGS","id","name","isAudioMuted","isVideoMuted","isHandRaised","isSelf","isHost","isGuest","isInLobby","isInMeeting","isNotAdmitted","isContentSharing","status","isDevice","isUser","associatedUser","isRecording","isMutable","isRemovable","type","isModerator","isModeratorAssignmentProhibited","processParticipant","processParticipantOptions","processMember","MemberUtil","extractId","extractName","processStatus","processIsSelf","selfId","processIsHost","hostId","processIsContentSharing","contentSharingId","processType","processIsRecording","recordingId","extractStatus","_IN_LOBBY_","_IN_MEETING_","_NOT_IN_MEETING_","flag","sharingId","isSame","isAssociatedSame"],"sources":["index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\nimport {\n  MEETINGS,\n  _IN_LOBBY_,\n  _NOT_IN_MEETING_,\n  _IN_MEETING_\n} from '../constants';\n\nimport MemberUtil from './util.js';\n\n/**\n * @class Member\n */\nexport default class Member {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} participant - the locus participant\n   * @param {Object} [options] - constructor params\n   * @param {String} options.selfId\n   * @param {String} options.hostId\n   * @param {String} options.contentSharingId\n   * @param {String} options.type\n   * @returns {Member}\n   * @memberof Member\n   */\n  constructor(participant, options = {}) {\n    /**\n     * The server participant object\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Member\n    */\n    this.participant = null;\n    /**\n     * The member id\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Member\n    */\n    this.id = null;\n    /**\n     * The member name\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Member\n    */\n    this.name = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isAudioMuted = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isVideoMuted = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isHandRaised = null;\n    /**\n      * @instance\n      * @type {Boolean}\n      * @public\n      * @memberof Member\n     */\n    this.isSelf = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isHost = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isGuest = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isInLobby = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isInMeeting = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isNotAdmitted = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isContentSharing = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.status = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isDevice = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isUser = null;\n    /**\n         * Is this member associated to another user by way of pairing (typical of devices)\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Member\n    */\n    this.associatedUser = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isRecording = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isMutable = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isRemovable = null;\n    /**\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Member\n    */\n    this.type = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isModerator = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n    */\n    this.isModeratorAssignmentProhibited = null;\n    // TODO: more participant types\n    // such as native client, web client, is a device, what type of phone, etc\n    this.processParticipant(participant);\n    this.processParticipantOptions(participant, options);\n    this.processMember();\n  }\n\n  /**\n   * set all the participant values extracted directly from locus participant\n   * @param {Object} participant the locus participant object\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processParticipant(participant) {\n    this.participant = participant;\n    if (participant) {\n      this.id = MemberUtil.extractId(participant);\n      this.name = MemberUtil.extractName(participant);\n      this.isAudioMuted = MemberUtil.isAudioMuted(participant);\n      this.isVideoMuted = MemberUtil.isVideoMuted(participant);\n      this.isHandRaised = MemberUtil.isHandRaised(participant);\n      this.isGuest = MemberUtil.isGuest(participant);\n      this.isUser = MemberUtil.isUser(participant);\n      this.isDevice = MemberUtil.isDevice(participant);\n      this.isModerator = MemberUtil.isModerator(participant);\n      this.isModeratorAssignmentProhibited = MemberUtil.isModeratorAssignmentProhibited(participant);\n      this.processStatus(participant);\n      // must be done last\n      this.isNotAdmitted = MemberUtil.isNotAdmitted(participant, this.isGuest, this.status);\n    }\n  }\n\n  /**\n   * Use the members options and participant values to set on the member\n   * @param {Object} participant the locus participant object\n   * @param {Object} options the passed in options, what was set on members\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processParticipantOptions(participant, options) {\n    if (participant && options) {\n      this.processIsSelf(participant, options.selfId);\n      this.processIsHost(participant, options.hostId);\n      this.processIsContentSharing(participant, options.contentSharingId);\n      this.processType(options.type);\n      this.processIsRecording(participant, options.recordingId);\n    }\n  }\n\n  /**\n   * processes what already exists on the member to determine other info about the member\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processMember() {\n    // must occur after self, guest, meeting, and type properties are calculated\n    this.isRemovable = MemberUtil.isRemovable(this.isSelf, this.isGuest, this.isInMeeting, this.type);\n    // must occur after self, device, meeting, mute status, and type properties are calculated\n    this.isMutable = MemberUtil.isMutable(this.isSelf, this.isDevice, this.isInMeeting, this.isAudioMuted, this.type);\n  }\n\n  /**\n   * set the status on member object\n   * @param {Object} participant the locus participant object\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processStatus(participant) {\n    this.status = MemberUtil.extractStatus(participant);\n    switch (this.status) {\n      case _IN_LOBBY_:\n        this.isInLobby = true;\n        this.isInMeeting = false;\n        break;\n      case _IN_MEETING_:\n        this.isInLobby = false;\n        this.isInMeeting = true;\n        break;\n      case _NOT_IN_MEETING_:\n        this.isInLobby = false;\n        this.isInMeeting = false;\n        break;\n      default:\n        this.isInLobby = false;\n        this.isInMeeting = false;\n    }\n  }\n\n  /**\n   * set the isContentSharing on member\n   * @param {Boolean} flag\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  setIsContentSharing(flag) {\n    this.isContentSharing = flag;\n  }\n\n  /**\n   * set the isHost on member\n   * @param {Boolean} flag\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  setIsHost(flag) {\n    this.isHost = flag;\n  }\n\n  /**\n   * set the isSelf on member\n   * @param {Boolean} flag\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  setIsSelf(flag) {\n    this.isSelf = flag;\n  }\n\n  /**\n   * determine if this member is content sharing\n   * @param {Object} participant\n   * @param {String} sharingId\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  processIsContentSharing(participant, sharingId) {\n    if (MemberUtil.isUser(participant)) {\n      this.isContentSharing = MemberUtil.isSame(participant, sharingId);\n    }\n    else if (MemberUtil.isDevice(participant)) {\n      this.isContentSharing = MemberUtil.isAssociatedSame(participant, sharingId);\n    }\n  }\n\n  /**\n   * Determine if this member is recording\n   * @param {Object} participant\n   * @param {String} recordingId\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  processIsRecording(participant, recordingId) {\n    this.isRecording = MemberUtil.isSame(participant, recordingId);\n  }\n\n  /**\n   * determine if this member is the self\n   * @param {Object} participant\n   * @param {String} selfId\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processIsSelf(participant, selfId) {\n    if (MemberUtil.isUser(participant)) {\n      this.isSelf = MemberUtil.isSame(participant, selfId);\n    }\n    else if (MemberUtil.isDevice(participant)) {\n      this.isSelf = MemberUtil.isAssociatedSame(participant, selfId);\n      this.associatedUser = selfId;\n    }\n  }\n\n  /**\n   * determine if this member is the host\n   * @param {Object} participant\n   * @param {String} hostId\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processIsHost(participant, hostId) {\n    if (MemberUtil.isUser(participant)) {\n      this.isHost = MemberUtil.isSame(participant, hostId);\n    }\n    else if (MemberUtil.isDevice(participant)) {\n      this.isHost = MemberUtil.isAssociatedSame(participant, hostId);\n    }\n  }\n\n  /**\n   * set the type for the member, could be MEETING or CALL\n   * @param {String} type\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  processType(type) {\n    this.type = type;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAGA;;AAOA;;AAVA;AACA;AACA;;AAUA;AACA;AACA;IACqBA,M;EAGnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,gBAAYC,WAAZ,EAAuC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAAA;IAAA,iDAZ3BC,mBAY2B;;IACrC;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,KAAKF,WAAL,GAAmB,IAAnB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKG,EAAL,GAAU,IAAV;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,IAAL,GAAY,IAAZ;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,YAAL,GAAoB,IAApB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,YAAL,GAAoB,IAApB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,YAAL,GAAoB,IAApB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,MAAL,GAAc,IAAd;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,MAAL,GAAc,IAAd;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,OAAL,GAAe,IAAf;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,SAAL,GAAiB,IAAjB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,WAAL,GAAmB,IAAnB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,aAAL,GAAqB,IAArB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,gBAAL,GAAwB,IAAxB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,MAAL,GAAc,IAAd;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,QAAL,GAAgB,IAAhB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,MAAL,GAAc,IAAd;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,cAAL,GAAsB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"}