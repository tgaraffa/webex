{"version":3,"names":["BrowserDetection","isBrowser","pc","insertBandwidthLimit","sdpLines","index","limit","periodicKeyFrame","search","AUDIO","StaticConfig","meetings","bandwidth","audio","video","SDP","PERIODIC_KEYFRAME","splice","B_LINE","setMaxFs","sdp","level","QUALITY_LEVELS","HIGH","MAX_FRAMESIZES","ParameterError","replaceSdp","maxFsLine","MAX_FS","replace","setStartBitrateOnRemoteSdp","startBitrate","checkH264Support","videoPresent","match","h264Present","isSdpInvalid","parsedSdp","sdpTransform","parse","media","mediaLine","candidates","length","LoggerProxy","logger","error","BAD_MEDIA_PORTS","includes","port","icePwd","iceUfrag","limitBandwidth","offerSdp","split","CARRIAGE_RETURN","i","M_LINE","join","setContentSlides","screenPc","A_CONTENT_SLIDES","iceCandidate","peerConnection","remoteQualityLevel","resolve","reject","now","doneGatheringIceCandidate","miliseconds","Math","abs","localDescription","PeerConnectionUtils","convertCLineToIpv4","invalidSdpPresent","InvalidSdpError","log","iceGatheringState","COMPLETE","onIceGatheringStateChange","GATHERING","onicecandidate","evt","candidate","type","protocol","address","onicecandidateerror","event","replaceTrack","track","senders","getSenders","forEach","sender","kind","err","addStream","stream","tracksPresent","find","getTracks","addTrack","setRemoteSessionDetails","typeStr","remoteSdp","meetingId","signalingState","Metrics","postEvent","eventType","REMOTE_SDP_RECEIVED","data","canProceed","errors","generateErrorPayload","name","MEDIA_ENGINE","HAVE_LOCAL_OFFER","STABLE","OFFER","enableExtmap","setRemoteDescription","window","RTCSessionDescription","then","catch","metricName","BEHAVIORAL_METRICS","PEERCONNECTION_FAILURE","correlation_id","reason","message","stack","metadata","sendBehavioralMetric","MediaError","createOffer","enableRtx","description","setLocalDescription","LOCAL_SDP_GENERATED","INVALID_ICE_CANDIDATE","code","close","rollBackLocalDescription","ROLLBACK","updatePeerConnection","params","createAnswer","peerconnection","HAVE_REMOTE_OFFER","sdpConstraints","answer","connectionState","PEER_CONNECTION_STATE","CLOSED","setPeerConnectionEvents","meeting","mediaProperties","connectionFailed","reconnectionManager","iceState","reconnect","networkDisconnect","ICE_END","uploadLogs","file","function","CONNECTION_FAILURE","correlationId","locus_id","locusId","oniceconnectionstatechange","info","iceConnectionState","ICE_STATE","CHECKING","ICE_START","COMPLETED","CONNECTED","CONNECTION_SUCCESS","setNetworkStatus","NETWORK_STATUS","iceReconnected","DISCONNECTED","waitForIceReconnect","FAILED","onconnectionstatechange","CONNECTION_STATE","NEW","CONNECTING"],"sources":["index.js"],"sourcesContent":["\n// We need to figure out how to pass a webex logger instance to these util files\n\n/* globals RTCSessionDescription */\n\nimport window from 'global/window';\nimport sdpTransform from 'sdp-transform'; // https://github.com/clux/sdp-transform\n\nimport Metrics from '../metrics';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport StaticConfig from '../common/config';\nimport {\n  COMPLETE,\n  GATHERING,\n  AUDIO,\n  SDP,\n  ICE_STATE,\n  CONNECTION_STATE,\n  NETWORK_STATUS,\n  PEER_CONNECTION_STATE,\n  OFFER,\n  QUALITY_LEVELS,\n  MAX_FRAMESIZES\n} from '../constants';\nimport BEHAVIORAL_METRICS from '../metrics/constants';\nimport {error, eventType} from '../metrics/config';\nimport MediaError from '../common/errors/media';\nimport ParameterError from '../common/errors/parameter';\nimport {InvalidSdpError} from '../common/errors/webex-errors';\nimport BrowserDetection from '../common/browser-detection';\n\nimport PeerConnectionUtils from './util';\n\nconst {isBrowser} = BrowserDetection();\n\n/**\n * @export\n * @public\n */\nconst pc = {};\n\n/**\n * munges the bandwidth limit into the sdp\n * @param {String} sdpLines\n * @param {Number} index\n * @returns {String}\n */\nconst insertBandwidthLimit = (sdpLines, index) => {\n  // eslint-disable-next-line no-warning-comments\n  // TODO convert to sdp parser\n  let limit;\n  let periodicKeyFrame = '';\n\n  if (sdpLines[index].search(AUDIO) !== -1) {\n    limit = StaticConfig.meetings.bandwidth.audio;\n  }\n  else {\n    limit = StaticConfig.meetings.bandwidth.video;\n    periodicKeyFrame = SDP.PERIODIC_KEYFRAME;\n    sdpLines.splice(index + 2, 0, periodicKeyFrame);\n  }\n  sdpLines.splice(index + 1, 0, `${SDP.B_LINE}:${limit}`);\n\n  return sdpLines;\n};\n\n/**\n * needed for calliope max-fs\n * @param {String} sdp\n * @param {String} [level=QUALITY_LEVELS.HIGH] quality level for max-fs\n * @returns {String}\n */\nconst setMaxFs = (sdp, level = QUALITY_LEVELS.HIGH) => {\n  if (!MAX_FRAMESIZES[level]) {\n    throw new ParameterError(`setMaxFs: unable to set max framesize, value for level \"${level}\" is not defined`);\n  }\n  // eslint-disable-next-line no-warning-comments\n  // TODO convert with sdp parser, no munging\n  let replaceSdp = sdp;\n  const maxFsLine = `${SDP.MAX_FS}${MAX_FRAMESIZES[level]}`;\n\n  replaceSdp = replaceSdp.replace(/(\\na=fmtp:(\\d+).*profile-level-id=.*)/gi, `$1;${maxFsLine}`);\n\n  return replaceSdp;\n};\n\n\nconst setStartBitrateOnRemoteSdp = (sdp) => {\n  if (StaticConfig.meetings.bandwidth.startBitrate) {\n    sdp = sdp.replace(/(\\na=fmtp:(\\d+).*profile-level-id=.*)/gi, `$1;x-google-start-bitrate=${StaticConfig.meetings.bandwidth.startBitrate}`);\n  }\n\n  return sdp;\n};\n\n/**\n * checks that sdp has h264 codec in it\n * @param {String} sdp\n * @returns {boolean}\n */\nconst checkH264Support = (sdp) => {\n  // eslint-disable-next-line no-warning-comments\n  // TODO convert to sdp parser to read rtp.codec\n  const videoPresent = sdp.match(/\\nm=video.*/g);\n  const h264Present = sdp.match(/\\na=rtpmap:\\d+\\sH264.*/g);\n\n  if (videoPresent) {\n    return !!h264Present;\n  }\n\n  return true;\n};\n\n/**\n * validates the sdp, checks port, candidates, and ice info\n * @param {String} sdp\n * @returns {String}\n */\nconst isSdpInvalid = (sdp) => {\n  const parsedSdp = sdpTransform.parse(sdp);\n\n  for (const mediaLine of parsedSdp.media) {\n    if (!mediaLine.candidates || mediaLine.candidates?.length === 0) {\n      LoggerProxy.logger.error('PeerConnectionManager:index#isSdpInvalid --> iceCandidate: Ice candadate never completed');\n\n      return 'iceCandidate: Ice gathering never completed';\n    }\n\n    if (SDP.BAD_MEDIA_PORTS.includes(mediaLine.port)) {\n      LoggerProxy.logger.error('PeerConnectionManager:index#isSdpInvalid --> iceCandidate: Found invalid port number for the ice candidate');\n\n      return 'iceCandidate: Found invalid port number for the ice candidate';\n    }\n    if (!mediaLine.icePwd || !mediaLine.iceUfrag) {\n      LoggerProxy.logger.error('PeerConnectionManager:index#isSdpInvalid --> iceCandidate: ice ufrag and password not found');\n\n      return 'iceCandidate: ice ufrag and password not found';\n    }\n  }\n\n  return '';\n};\n\n/**\n * munges the bandwidth into the sdp\n * @param {String} sdp\n * @returns {String}\n */\nconst limitBandwidth = (sdp) => {\n  // TODO convert to sdp parser\n  let offerSdp = sdp;\n  let sdpLines = offerSdp.split(SDP.CARRIAGE_RETURN);\n\n  for (let i = 0; i < sdpLines.length; i += 1) {\n    if (sdpLines[i].search(SDP.M_LINE) !== -1) {\n      sdpLines = insertBandwidthLimit(sdpLines, i);\n    }\n  }\n  offerSdp = sdpLines.join(SDP.CARRIAGE_RETURN);\n\n  return offerSdp;\n};\n\n/**\n * makes sure the screen pc sdp has content:slides for server\n * @param {RTCPeerConnection} screenPc\n * @returns {RTCPeerConnection}\n */\npc.setContentSlides = (screenPc) => {\n  if (screenPc && screenPc.sdp) {\n    screenPc.sdp += `${SDP.A_CONTENT_SLIDES}${SDP.CARRIAGE_RETURN}`;\n  }\n\n  return screenPc;\n};\n\n/**\n * handles ice trickling and establishes ICE connection onto peer connection object\n * @param {Object} peerConnection\n * @param {Object} options\n * @param {String} options.remoteQualityLevel\n * @returns {Promise.RTCPeerConnection}\n */\npc.iceCandidate = (peerConnection, {remoteQualityLevel}) =>\n  new Promise((resolve, reject) => {\n    const now = Date.now();\n    const doneGatheringIceCandidate = () => {\n      const miliseconds = parseInt(Math.abs(Date.now() - now), 4);\n\n      peerConnection.sdp = limitBandwidth(peerConnection.localDescription.sdp);\n      peerConnection.sdp = setMaxFs(peerConnection.sdp, remoteQualityLevel);\n      peerConnection.sdp = PeerConnectionUtils.convertCLineToIpv4(peerConnection.sdp);\n\n      const invalidSdpPresent = isSdpInvalid(peerConnection.sdp);\n\n      if (invalidSdpPresent) {\n        LoggerProxy.logger.error('PeerConnectionManager:index#iceCandidate --> SDP not valid after waiting.');\n        reject(new InvalidSdpError(invalidSdpPresent));\n      }\n      LoggerProxy.logger.log(`PeerConnectionManager:index#iceCandidate --> Time to gather ice candidate ${miliseconds} miliseconds`);\n\n\n      resolve();\n    };\n\n    // If ice has already been gathered\n    if (peerConnection.iceGatheringState === COMPLETE) {\n      doneGatheringIceCandidate();\n    }\n\n    peerConnection.onIceGatheringStateChange = () => {\n      if (peerConnection.iceGatheringState === COMPLETE) {\n        doneGatheringIceCandidate(peerConnection);\n      }\n      if (peerConnection.iceGatheringState === GATHERING) {\n        LoggerProxy.logger.log('PeerConnectionManager:index#onIceGatheringStateChange --> Ice state changed to gathering');\n      }\n    };\n\n    peerConnection.onicecandidate = (evt) => {\n      if (evt.candidate === null) {\n        doneGatheringIceCandidate(peerConnection);\n      }\n      else {\n        LoggerProxy.logger.log(`PeerConnectionManager:index#onicecandidate --> Candidate ${evt.candidate?.type} ${evt.candidate?.protocol} ${evt.candidate?.address}:${evt.candidate?.port}`);\n      }\n    };\n\n    peerConnection.onicecandidateerror = (event) => {\n      // we can often get ICE candidate errors (for example when failing to communicate with a TURN server)\n      // they don't mean that the whole ICE connection will fail, so it's OK to ignore them\n      LoggerProxy.logger.error('PeerConnectionManager:index#onicecandidateerror --> ignoring ice error:', event);\n    };\n  });\n\n/**\n * swapping tracks\n * @param {Object} peerConnection\n * @param {Object} track\n * @returns {undefined}\n */\npc.replaceTrack = (peerConnection, track) => {\n  try {\n    const senders = peerConnection.getSenders();\n\n    if (senders.length > 0) {\n      senders.forEach((sender) => {\n        if (sender.track && sender.track.kind === track.kind) {\n          sender.replaceTrack(track);\n        }\n      });\n    }\n  }\n  catch (err) {\n    LoggerProxy.logger.error(`PeerConnectionManager:index#replaceTrack --> Error replacing track, ${err}`);\n  }\n};\n\n/**\n * adding streams to peerConnection\n * @param {Object} peerConnection\n * @param {Object} stream\n * @returns {undefined}\n */\npc.addStream = (peerConnection, stream) => {\n  try {\n    if (stream && !isBrowser('edge')) {\n      const tracksPresent = peerConnection.getSenders && peerConnection.getSenders().find((sender) => sender.track != null);\n\n      if (tracksPresent) {\n        stream.getTracks().forEach((track) => {\n          pc.replaceTrack(peerConnection, track);\n        });\n\n        return;\n      }\n      stream.getTracks().forEach((track) => {\n        peerConnection.addTrack(track, stream);\n      });\n      // // TODO : may come back disable addTracks for chrome they are moving back to addStream\n      // // https://bugs.chromium.org/p/chromium/issues/detail?id=764414\n      // // https://bugs.chromium.org/p/chromium/issues/detail?id=738918#c7\n      //   peerConnection.addStream(stream);\n    }\n    else if (isBrowser('edge')) {\n      peerConnection.addStream(stream);\n    }\n  }\n  catch (err) {\n    LoggerProxy.logger.error(`PeerConnectionManager:index#addStream --> Error adding stream, error: ${error}`);\n  }\n};\n\n/**\n * setting the remote description\n * @param {Object} peerConnection\n * @param {String} typeStr\n * @param {String} remoteSdp\n * @param {String} meetingId\n * @returns {undefined}\n */\npc.setRemoteSessionDetails = (\n  peerConnection,\n  typeStr,\n  remoteSdp,\n  meetingId,\n) => {\n  LoggerProxy.logger.log(`PeerConnectionManager:index#setRemoteSessionDetails --> Setting the remote description type: ${typeStr}State: ${peerConnection.signalingState}`);\n  let sdp = remoteSdp;\n\n  // making sure that the remoteDescription is only set when there is a answer for offer\n  // or there is a offer from the server\n\n  if (!sdp) {\n    Metrics.postEvent({\n      event: eventType.REMOTE_SDP_RECEIVED,\n      meetingId,\n      data: {\n        canProceed: false,\n        errors: [Metrics.generateErrorPayload(2001, true,\n          error.name.MEDIA_ENGINE, 'missing remoteSdp')]\n      }\n    });\n  }\n  if (peerConnection.signalingState === SDP.HAVE_LOCAL_OFFER || (peerConnection.signalingState === SDP.STABLE && typeStr === SDP.OFFER)) {\n    sdp = setStartBitrateOnRemoteSdp(sdp);\n\n    if (!peerConnection.enableExtmap) {\n      sdp = sdp.replace(/\\na=extmap.*/g, '');\n    }\n\n    // remove any xtls candidates\n    sdp = sdp.replace(/^a=candidate:.*xTLS.*\\r\\n/gim, '');\n\n    return peerConnection.setRemoteDescription(\n      new window.RTCSessionDescription({\n        type: typeStr,\n        sdp\n      })\n    )\n      .then(() => {\n        if (peerConnection.signalingState === SDP.STABLE) {\n          Metrics.postEvent({\n            event: eventType.REMOTE_SDP_RECEIVED,\n            meetingId\n          });\n        }\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error(`Peer-connection-manager:index#setRemoteDescription --> ${error} missing remotesdp`);\n\n\n        const metricName = BEHAVIORAL_METRICS.PEERCONNECTION_FAILURE;\n        const data = {\n          correlation_id: meetingId,\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendBehavioralMetric(metricName, data, metadata);\n\n        return Metrics.postEvent({\n          event: eventType.REMOTE_SDP_RECEIVED,\n          meetingId,\n          data: {\n            canProceed: false,\n            errors: [Metrics.generateErrorPayload(2001, true,\n              error.name.MEDIA_ENGINE, 'missing remoteSdp')]\n          }\n        });\n      });\n  }\n\n  return Promise.reject(new MediaError('PeerConnection in wrong state'));\n};\n\n/**\n * create offer with a valid paramater\n * @param {Object} peerConnection\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @param {string} meetingProperties.enableRtx\n * @param {string} meetingProperties.enableExtmap\n * @returns {RTCPeerConnection}\n */\npc.createOffer = (peerConnection, {\n  meetingId,\n  remoteQualityLevel,\n  enableRtx,\n  enableExtmap\n}) => {\n  LoggerProxy.logger.log('PeerConnectionManager:index#createOffer --> creating a new offer');\n\n  // saving the extMap State to use in setRemoteDescription\n\n  peerConnection.enableExtmap = enableExtmap;\n\n  return peerConnection\n    .createOffer()\n    .then((description) => {\n      // bug https://bugs.chromium.org/p/chromium/issues/detail?id=1020642\n      // chrome currently generates RTX line irrespective of weither the server side supports it\n      // we are removing apt as well because its associated with rtx line\n\n      if (!enableRtx) {\n        description.sdp = description.sdp.replace(/\\r\\na=rtpmap:\\d+ rtx\\/\\d+/g, '');\n        description.sdp = description.sdp.replace(/\\r\\na=fmtp:\\d+ apt=\\d+/g, '');\n      }\n\n      return peerConnection.setLocalDescription(description);\n    })\n    .then(() => pc.iceCandidate(peerConnection, {remoteQualityLevel}))\n    .then(() => {\n      if (!checkH264Support(peerConnection.sdp)) {\n        throw new MediaError('openH264 is downloading please Wait. Upload logs if not working on second try');\n      }\n\n      if (!enableExtmap) {\n        peerConnection.sdp = peerConnection.sdp.replace(/\\na=extmap.*/g, '');\n      }\n\n      pc.setContentSlides(peerConnection);\n\n      Metrics.postEvent({\n        event: eventType.LOCAL_SDP_GENERATED,\n        meetingId\n      });\n\n      return peerConnection;\n    })\n    .catch((error) => {\n      LoggerProxy.logger.error(`Peer-connection-manager:index#createOffer --> ${error}`);\n      if (error instanceof InvalidSdpError) {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.INVALID_ICE_CANDIDATE,\n          {\n            correlation_id: meetingId,\n            code: error.code,\n            reason: error.message\n          }\n        );\n      }\n      else {\n        const metricName = BEHAVIORAL_METRICS.PEERCONNECTION_FAILURE;\n        const data = {\n          correlation_id: meetingId,\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendBehavioralMetric(metricName, data, metadata);\n      }\n\n      Metrics.postEvent({\n        event: eventType.LOCAL_SDP_GENERATED,\n        meetingId,\n        data: {\n          canProceed: false,\n          errors: [\n            Metrics.generateErrorPayload(2001, true,\n              error.name.MEDIA_ENGINE)]\n        }\n      });\n      pc.close(peerConnection);\n      throw error;\n    });\n};\n\n/**\n * rollBack local description in peerconnection\n * @param {Object} peerConnection\n * @returns {Promise.RTCPeerConnection}\n */\npc.rollBackLocalDescription = (peerConnection) => peerConnection\n  .setLocalDescription(new RTCSessionDescription({type: SDP.ROLLBACK}))\n  .then(() => peerConnection)\n  .catch((err) => {\n    LoggerProxy.logger.error(`Peer-connection-manager:index#setLocalDescription --> ${err} `);\n\n    return Promise.error(err);\n  });\n\n/**\n * @param {Object} params {\n * @param {Boolean} params.offerToReceiveAudio\n * @param {Boolean} params.offerToReceiveVideo\n * @param {string} params.offerSdp\n * @param {MediaStream} params.stream\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @returns {Promise.<Array>} [MediaSDP, ScreenSDP]\n */\npc.updatePeerConnection = (params, {meetingId, remoteQualityLevel}) => {\n  LoggerProxy.logger.log(`PeerConnectionManager:index#updatePeerConnection --> updating the peerConnection with params: ${params}`);\n\n  const {peerConnection, offerSdp} = params;\n\n  return pc.createAnswer({\n    peerConnection,\n    offerSdp: offerSdp[0]\n  }, {meetingId, remoteQualityLevel}).then((peerconnection) => {\n    // The content slides should also be set when we are sending inactive\n    pc.setContentSlides(peerconnection);\n\n    return Promise.resolve([peerconnection.sdp]);\n  });\n};\n\n/**\n * @param {Object} params\n * @param {Object} params.peerConnection\n * @param {Object} params.sdpConstraints\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @returns {RTCPeerConnection} peerConnection\n */\npc.createAnswer = (params, {meetingId, remoteQualityLevel}) => {\n  const {peerConnection} = params;\n\n  // TODO: Some times to many mercury event comes at the same time\n  // Need to maintain state of peerconnection\n  if (peerConnection.signalingState === SDP.HAVE_REMOTE_OFFER) {\n    return Promise.resolve(peerConnection);\n  }\n\n  return pc.setRemoteSessionDetails(peerConnection, OFFER, params.offerSdp, meetingId)\n    .then(() => peerConnection.createAnswer(params.sdpConstraints))\n    .then((answer) =>\n\n      peerConnection.setLocalDescription(answer))\n    .then(() => pc.iceCandidate(peerConnection, {remoteQualityLevel}))\n    .then(() => {\n      peerConnection.sdp = limitBandwidth(peerConnection.localDescription.sdp);\n      peerConnection.sdp = setMaxFs(peerConnection.sdp, remoteQualityLevel);\n      peerConnection.sdp = PeerConnectionUtils.convertCLineToIpv4(peerConnection.sdp);\n      if (!checkH264Support(peerConnection.sdp)) {\n        throw new MediaError('openH264 is downloading please Wait. Upload logs if not working on second try');\n      }\n\n      return peerConnection;\n    })\n    .catch((error) => {\n      if (error instanceof InvalidSdpError) {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.INVALID_ICE_CANDIDATE,\n          {\n            correlation_id: meetingId\n          }\n        );\n      }\n      else {\n        const metricName = BEHAVIORAL_METRICS.PEERCONNECTION_FAILURE;\n        const data = {\n          correlation_id: meetingId,\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendBehavioralMetric(metricName, data, metadata);\n      }\n\n      LoggerProxy.logger.error(`PeerConnectionManager:index#setRemoteSessionDetails --> Error creating remote session, error: ${error}`);\n    });\n};\n\n/**\n * shut down the peer connection\n * @param {Object} peerConnection\n * @returns {undefined}\n */\npc.close = (peerConnection) => {\n  // peerConnection.close() fails on firefox on network changes and gives a Dom exception\n  // To avoid this we have added a try catch block.\n  // Please refer to https://bugzilla.mozilla.org/show_bug.cgi?id=1274407 for more information\n  LoggerProxy.logger.log('PeerConnectionManager:index#close --> pc: close() -> attempting to close the peer connection');\n\n  if (peerConnection && peerConnection.connectionState === PEER_CONNECTION_STATE.CLOSED) {\n    LoggerProxy.logger.log('PeerConnectionManager:index#close --> pc: close() -> connection already closed');\n\n    return Promise.resolve();\n  }\n  LoggerProxy.logger.log('PeerConnectionManager:index#close --> pc: close() -> closing the mediaPeerConnection');\n\n  return Promise.resolve()\n    .then(() => {\n      if (peerConnection && peerConnection.close) {\n        peerConnection.close();\n      }\n    });\n};\n\n\npc.setPeerConnectionEvents = (meeting) => {\n  // In case ICE fail\n  const {peerConnection} = meeting.mediaProperties;\n\n  const connectionFailed = () => {\n    if (meeting.reconnectionManager.iceState.resolve) {\n      // DISCONNECTED state triggers first then it goes to FAILED STATE\n      // sometimes the failed state can happen before 10 seconds (Which is the timer for the reconnect for ice disconnect)\n      meeting.reconnectionManager.iceState.resolve();\n    }\n\n    meeting.reconnect({networkDisconnect: true});\n    Metrics.postEvent({\n      event: eventType.ICE_END,\n      meeting,\n      data: {\n        canProceed: false,\n        errors: [\n          Metrics.generateErrorPayload(\n            2004, false, error.name.MEDIA_ENGINE\n          )]\n      }\n    });\n\n    meeting.uploadLogs({\n      file: 'peer-connection-manager/index',\n      function: 'connectionFailed'\n    });\n\n    Metrics.sendBehavioralMetric(\n      BEHAVIORAL_METRICS.CONNECTION_FAILURE,\n      {\n        correlation_id: meeting.correlationId,\n        locus_id: meeting.locusId\n      }\n    );\n  };\n\n  peerConnection.oniceconnectionstatechange = () => {\n    LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE CHANGE.');\n    switch (peerConnection.iceConnectionState) {\n      case ICE_STATE.CHECKING:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE CHECKING.');\n        Metrics.postEvent({event: eventType.ICE_START, meeting});\n        break;\n      case ICE_STATE.COMPLETED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE COMPLETED.');\n        break;\n      case ICE_STATE.CONNECTED:\n        // Ice connection state goes to connected when both client and server sends STUN packets and\n        // Established connected between them. Firefox does not trigger COMPLETED and only trigger CONNECTED\n        Metrics.postEvent({event: eventType.ICE_END, meeting});\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.CONNECTION_SUCCESS,\n          {\n            correlation_id: meeting.correlationId,\n            locus_id: meeting.locusId\n          }\n        );\n        meeting.setNetworkStatus(NETWORK_STATUS.CONNECTED);\n        meeting.reconnectionManager.iceReconnected();\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE CONNECTED.');\n        break;\n      case ICE_STATE.CLOSED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE CLOSED.');\n        break;\n      case ICE_STATE.DISCONNECTED:\n        meeting.setNetworkStatus(NETWORK_STATUS.DISCONNECTED);\n        meeting.reconnectionManager.waitForIceReconnect()\n          .catch(() => {\n            LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE DISCONNECTED. Automatic Reconnection Timed Out.');\n\n            connectionFailed();\n          });\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE DISCONNECTED.');\n        break;\n      case ICE_STATE.FAILED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> ICE STATE FAILED.');\n        // notify of ice failure\n        // Ice failure is the only indicator currently for identifying the actual connection drop\n        // Firefox takes sometime 10-15 seconds to go to failed state\n        connectionFailed();\n        break;\n      default:\n        break;\n    }\n  };\n\n  peerConnection.onconnectionstatechange = () => {\n    LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE CHANGE.');\n    switch (peerConnection.connectionState) {\n      case CONNECTION_STATE.NEW:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE NEW.');\n        break;\n      case CONNECTION_STATE.CONNECTING:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE CONNECTING.');\n        break;\n      case CONNECTION_STATE.CONNECTED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE CONNECTED.');\n        break;\n      case CONNECTION_STATE.CLOSED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE CLOSED.');\n        break;\n      case CONNECTION_STATE.DISCONNECTED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE DISCONNECTED.');\n        break;\n      case CONNECTION_STATE.FAILED:\n        LoggerProxy.logger.info('PeerConnectionManager:index#setPeerConnectionEvents --> CONNECTION STATE FAILED.');\n        // Special case happens only on chrome where there is no ICE FAILED event\n        // only CONNECTION FAILED event gets triggered\n\n        connectionFailed();\n        break;\n      default:\n        break;\n    }\n  };\n};\n\nexport default pc;\n"],"mappings":"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"}