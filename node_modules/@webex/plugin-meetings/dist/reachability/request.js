"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/json/stringify"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _loggerProxy = _interopRequireDefault(require("../common/logs/logger-proxy"));

var _constants = require("../constants");

/**
 * @class ReachabilityRequest
 */
var ReachabilityRequest = /*#__PURE__*/(0, _createClass2.default)(
/**
 * Creates an instance of ReachabilityRequest.
 * @param {object} webex
 * @memberof ReachabilityRequest
 */
function ReachabilityRequest(webex) {
  var _this = this;

  (0, _classCallCheck2.default)(this, ReachabilityRequest);
  (0, _defineProperty2.default)(this, "getClusters", function () {
    return _this.webex.request({
      method: _constants.HTTP_VERBS.GET,
      shouldRefreshAccessToken: false,
      api: _constants.API.CALLIOPEDISCOVERY,
      resource: _constants.RESOURCE.CLUSTERS
    }).then(function (res) {
      var clusters = res.body.clusters;
      (0, _keys.default)(clusters).forEach(function (key) {
        var _res$body$clusterClas, _res$body$clusterClas2;

        clusters[key].isVideoMesh = (_res$body$clusterClas = res.body.clusterClasses) === null || _res$body$clusterClas === void 0 ? void 0 : (_res$body$clusterClas2 = _res$body$clusterClas.hybridMedia) === null || _res$body$clusterClas2 === void 0 ? void 0 : _res$body$clusterClas2.includes(key);
      });

      _loggerProxy.default.logger.log("Reachability:request#getClusters --> get clusters successful:".concat((0, _stringify.default)(clusters)));

      return clusters;
    });
  });
  (0, _defineProperty2.default)(this, "remoteSDPForClusters", function (localSDPList) {
    return _this.webex.request({
      method: _constants.HTTP_VERBS.POST,
      shouldRefreshAccessToken: false,
      api: _constants.API.CALLIOPEDISCOVERY,
      resource: _constants.RESOURCE.REACHABILITY,
      body: {
        offers: localSDPList
      }
    }).then(function (res) {
      _loggerProxy.default.logger.log('Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully');

      return res.body;
    });
  });
  this.webex = webex;
}
/**
 * gets the cluster information
 *
 * @param {boolean} includeVideoMesh whether to include the video mesh clusters in the result or not
 * @returns {Promise}
 */
);
var _default = ReachabilityRequest;
exports.default = _default;
//# sourceMappingURL=request.js.map
