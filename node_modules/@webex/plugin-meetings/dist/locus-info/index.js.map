{"version":3,"names":["LocusInfo","updateMeeting","webex","meetingId","parsedLocus","states","emitChange","compareAndUpdateFlags","locusParser","LocusDeltaParser","action","locus","meeting","loci","DESYNC","USE_CURRENT","USE_INCOMING","locusInfo","onDeltaLocus","locusDesync","needToGetFullLocus","meetingRequest","getFullLocus","desync","locusUrl","then","res","onFullLocus","body","resume","LoggerProxy","logger","info","onDeltaAction","parsedLoci","applyLocusDeltaData","onDeltaEvent","created","scheduledMeeting","participantsUrl","replaces","aclUrl","baseSequence","sequence","membership","identities","participants","deltaParticipants","updateParticipants","updateConversationUrl","conversationUrl","updateControls","controls","updateLocusUrl","url","updateFullState","fullState","updateMeetingInfo","updateEmbeddedApps","embeddedApps","updateSelf","self","updateHostInfo","host","updateMediaShares","mediaShares","data","eventType","LOCUSEVENT","PARTICIPANT_JOIN","PARTICIPANT_LEFT","CONTROLS_UPDATED","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_AUDIO_UNMUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_UNMUTED","SELF_CHANGED","PARTICIPANT_UPDATED","PARTICIPANT_CONTROLS_UPDATED","PARTICIPANT_ROLES_UPDATED","PARTICIPANT_DECLINED","FLOOR_GRANTED","FLOOR_RELEASED","DIFFERENCE","handleLocusDelta","scope","eventName","args","emit","error","updateParticipantDeltas","updateLocusInfo","isMeetingActive","handleOneOnOneEvent","workingCopy","type","_CALL_","_SIP_BRIDGE_","emitScoped","file","function","EVENTS","REMOTE_RESPONSE","remoteDeclined","remoteAnswered","updateCreated","updateParticipantsUrl","updateReplace","replace","updateAclUrl","updateBasequence","updateSequence","updateMemberShip","updateIdentifiers","compareAndUpdate","length","find","participant","identity","_USER_","removed","partner","getLocusPartner","state","LOCUS","STATE","INACTIVE","warn","Metrics","postEvent","event","REMOTE_ENDED","DESTROY_MEETING","reason","CALL_REMOVED_REASON","CALL_INACTIVE","shouldLeave","MEETING_STATE","STATES","LEFT","DECLINED","NOTIFIED","JOINED","PARTNER_LEFT","joinedWith","_LEFT_","IDLE","SELF_LEFT","_MEETING_","TERMINATING","MEETING_REMOVED_REASON","MEETING_INACTIVE_TERMINATING","FULLSTATE_REMOVED","SELF_REMOVED","compareSelfAndHost","compareHostAndSelf","selfIdentity","hostId","moderator","LOCUS_INFO_CAN_ASSIGN_HOST","canAssignHost","findParticipant","collection","item","person","id","generateDelta","prevState","newState","deltas","audioStatus","videoSlidesStatus","videoStatus","forEach","key","reduce","existingParticipant","delta","status","changed","push","LOCUS_INFO_UPDATE_PARTICIPANTS","recordingId","record","modifiedBy","selfId","ControlsUtils","parse","getControls","updates","hasRecordingChanged","hasRecordingPausedChanged","hasMeetingContainerChanged","hasTranscribeChanged","current","paused","RECORDING_STATE","PAUSED","recording","RESUMED","RECORDING","LOCUSINFO","CONTROLS_RECORDING_UPDATED","lastModified","meetingContainerUrl","meetingContainer","CONTROLS_MEETING_CONTAINER_UPDATED","transcribe","transcribing","caption","CONTROLS_MEETING_TRANSCRIBE_UPDATED","result","FullState","getFullState","meetingStateChangedTo","FULL_STATE_MEETING_STATE_CHANGE","previousState","previous","meetingState","currentState","meetingTypeChangedTo","FULL_STATE_TYPE_UPDATE","parsedHosts","HostUtils","getHosts","isNewHost","LOCUS_INFO_UPDATE_HOST","newHost","oldHost","roles","SelfUtils","getRoles","isJoined","parsedInfo","InfoUtils","getInfos","MEETING_INFO_UPDATED","isLocked","MEETING_LOCKED","isUnlocked","MEETING_UNLOCKED","EmbeddedAppsUtils","areSimilar","EMBEDDED_APPS_UPDATED","parsedMediaShares","MediaSharesUtils","getMediaShares","LOCUS_INFO_UPDATE_MEDIA_SHARES","parsedSelves","getSelves","internal","device","element","getSipUrl","sipUri","moderatorChanged","layoutChanged","CONTROLS_MEETING_LAYOUT_UPDATED","layout","isMediaInactiveOrReleased","DISCONNECT_DUE_TO_INACTIVITY","SELF_MODERATOR_CHANGED","localAudioUnmuteRequiredByServer","LOCAL_UNMUTE_REQUIRED","muted","remoteMuted","unmuteAllowed","isMutedByOthersChanged","SELF_REMOTE_MUTE_STATUS_UPDATED","localAudioUnmuteRequestedByServer","LOCAL_UNMUTE_REQUESTED","isUserUnadmitted","SELF_UNADMITTED_GUEST","isUserAdmitted","SELF_ADMITTED_GUEST","isMediaInactive","MEDIA_INACTIVITY","getMediaStatus","mediaSessions","audioStateChange","videoStateChange","shareStateChange","MEDIA_STATUS_CHANGE","currentMediaStatus","audio","video","shareStatus","share","isUserObserving","SELF_OBSERVING","LOCUS_INFO_UPDATE_SELF","oldSelf","newSelf","LOCUS_INFO_UPDATE_URL","EventsScope"],"sources":["index.js"],"sourcesContent":["import {isEqual} from 'lodash';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport EventsScope from '../common/events/events-scope';\nimport {\n  EVENTS,\n  LOCUSEVENT,\n  _USER_,\n  _CALL_,\n  _SIP_BRIDGE_,\n  MEETING_STATE,\n  _MEETING_,\n  LOCUSINFO,\n  LOCUS,\n  _LEFT_,\n  MEETING_REMOVED_REASON,\n  CALL_REMOVED_REASON,\n  RECORDING_STATE\n} from '../constants';\nimport Metrics from '../metrics';\nimport {eventType} from '../metrics/config';\nimport InfoUtils from '../locus-info/infoUtils';\nimport FullState from '../locus-info/fullState';\nimport SelfUtils from '../locus-info/selfUtils';\nimport HostUtils from '../locus-info/hostUtils';\nimport ControlsUtils from '../locus-info/controlsUtils';\nimport EmbeddedAppsUtils from '../locus-info/embeddedAppsUtils';\nimport MediaSharesUtils from '../locus-info/mediaSharesUtils';\nimport LocusDeltaParser from '../locus-info/parser';\n\n\n/**\n * @description LocusInfo extends ChildEmitter to convert locusInfo info a private emitter to parent object\n * @export\n * @private\n * @class LocusInfo\n */\nexport default class LocusInfo extends EventsScope {\n  constructor(updateMeeting, webex, meetingId) {\n    super();\n    this.parsedLocus = {\n      states: []\n    };\n    this.webex = webex;\n    this.emitChange = false;\n    this.compareAndUpdateFlags = {};\n    this.meetingId = meetingId;\n    this.updateMeeting = updateMeeting;\n    this.locusParser = new LocusDeltaParser();\n  }\n\n\n  /**\n   * Apply locus delta data to meeting\n   * @param {string} action Locus delta action\n   * @param {Locus} locus\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   */\n  applyLocusDeltaData(action, locus, meeting) {\n    const {DESYNC, USE_CURRENT, USE_INCOMING} = LocusDeltaParser.loci;\n\n    switch (action) {\n      case USE_INCOMING:\n        meeting.locusInfo.onDeltaLocus(locus);\n        break;\n      case USE_CURRENT:\n        meeting.locusDesync = false;\n        meeting.needToGetFullLocus = false;\n        break;\n      case DESYNC:\n        meeting.meetingRequest.getFullLocus({\n          desync: true,\n          locusUrl: meeting.locusUrl\n        }).then((res) => {\n          meeting.locusInfo.onFullLocus(res.body);\n          // Notify parser to resume processing delta events\n          // now that we have full locus from DESYNC.\n          this.locusParser.resume();\n        });\n        break;\n      default:\n        LoggerProxy.logger.info(`Locus-info:index#applyLocusDeltaData --> Unknown locus delta action: ${action}`);\n    }\n  }\n\n\n  /**\n   * Adds locus delta to parser's queue\n   * and registers a function handler\n   * to recieve parsed actions from queue.\n   * @param {Locus} locus\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   */\n  handleLocusDelta(locus, meeting) {\n    // register a function to process delta actions\n    if (!this.locusParser.onDeltaAction) {\n      // delta action, along with associated loci\n      // is passed into the function.\n      this.locusParser.onDeltaAction = (action, parsedLoci) => {\n        this.applyLocusDeltaData(action, parsedLoci, meeting);\n      };\n    }\n    // queue delta event with parser\n    this.locusParser.onDeltaEvent(locus);\n  }\n\n\n  /**\n   * @param {Locus} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  init(locus = {}) {\n    this.created = locus.created || null;\n    this.scheduledMeeting = locus.meeting || null;\n    this.participantsUrl = locus.participantsUrl || null;\n    this.replaces = locus.replaces || null;\n    this.aclUrl = locus.aclUrl || null;\n    this.baseSequence = locus.baseSequence || null;\n    this.sequence = locus.sequence || null;\n    this.membership = locus.membership || null;\n    this.identities = locus.identities || null;\n    this.participants = locus.participants || null;\n\n    /**\n     * Stores the delta values for a changed participant.\n     *\n     * @typedef {Object} DeltaParticipant\n     * @property {Record<string, boolean>} delta - Contains changed streams.\n     * @property {Object} person - Contains person data.\n     */\n\n    /**\n     * Stored participant changes between the last event and the current event.\n     * All previously stored events are overwritten between events.\n     *\n     * @instance\n     * @type {Array<DeltaParticipant>}\n     * @private\n     * @member LocusInfo\n     */\n    this.deltaParticipants = [];\n\n    // above section only updates the locusInfo object\n    // The below section makes sure it updates the locusInfo as well as updates the meeting object\n    this.updateParticipants(locus.participants);\n    // For 1:1 space meeting the conversation Url does not exist in locus.conversation\n    this.updateConversationUrl(locus.conversationUrl, locus.info);\n    this.updateControls(locus.controls);\n    this.updateLocusUrl(locus.url);\n    this.updateFullState(locus.fullState);\n    this.updateMeetingInfo(locus.info);\n    this.updateEmbeddedApps(locus.embeddedApps);\n    // self and participants generate sipUrl for 1:1 meeting\n    this.updateSelf(locus.self, locus.participants);\n    this.updateHostInfo(locus.host);\n    this.updateMediaShares(locus.mediaShares);\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  initialSetup(locus) {\n    this.onFullLocus(locus);\n\n    // Change it to true after it receives it first locus object\n    this.emitChange = true;\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @param {Object} data\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  parse(meeting, data) {\n    const {eventType} = data;\n\n    LoggerProxy.logger.info(`Locus-info:index#parse --> received locus data: ${eventType}`);\n\n    switch (eventType) {\n      case LOCUSEVENT.PARTICIPANT_JOIN:\n      case LOCUSEVENT.PARTICIPANT_LEFT:\n      case LOCUSEVENT.CONTROLS_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_AUDIO_MUTED:\n      case LOCUSEVENT.PARTICIPANT_AUDIO_UNMUTED:\n      case LOCUSEVENT.PARTICIPANT_VIDEO_MUTED:\n      case LOCUSEVENT.PARTICIPANT_VIDEO_UNMUTED:\n      case LOCUSEVENT.SELF_CHANGED:\n      case LOCUSEVENT.PARTICIPANT_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_CONTROLS_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_ROLES_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_DECLINED:\n      case LOCUSEVENT.FLOOR_GRANTED:\n      case LOCUSEVENT.FLOOR_RELEASED:\n        this.onFullLocus(data.locus, eventType);\n        break;\n      case LOCUSEVENT.DIFFERENCE:\n        this.handleLocusDelta(data.locus, meeting);\n        break;\n\n      default:\n        // Why will there be a event with no eventType ????\n        // we may not need this, we can get full locus\n        this.handleLocusDelta(data.locus, meeting);\n    }\n  }\n\n  /**\n   * @param {String} scope\n   * @param {String} eventName\n   * @param {Array} args\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  emitScoped(scope, eventName, args) {\n    return this.emit(scope, eventName, args);\n  }\n\n  /**\n   * updates the locus with full locus object\n   * @param {object} locus locus object\n   * @param {sting} eventType particulat locus event\n   * @returns {object} null\n   * @memberof LocusInfo\n   */\n  onFullLocus(locus, eventType) {\n    if (!locus) {\n      LoggerProxy.logger.error('Locus-info:index#onFullLocus --> object passed as argument was invalid, continuing.');\n    }\n    this.updateParticipantDeltas(locus.participants);\n    this.scheduledMeeting = locus.meeting || null;\n    this.participants = locus.participants;\n    this.updateLocusInfo(locus);\n    this.updateParticipants(locus.participants);\n    this.isMeetingActive();\n    this.handleOneOnOneEvent(eventType);\n    // set current (working copy) for parser\n    this.locusParser.workingCopy = locus;\n  }\n\n  // used for ringing stops on one on one\n  /**\n   * @param {String} eventType\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  handleOneOnOneEvent(eventType) {\n    if (this.parsedLocus.fullState.type === _CALL_ || this.parsedLocus.fullState.type === _SIP_BRIDGE_) {\n    // for 1:1 bob calls alice and alice declines, notify the meeting state\n      if (eventType === LOCUSEVENT.PARTICIPANT_DECLINED) {\n      // trigger the event for stop ringing\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'handleOneonOneEvent'\n          },\n          EVENTS.REMOTE_RESPONSE,\n          {\n            remoteDeclined: true,\n            remoteAnswered: false\n          }\n        );\n      }\n      // for 1:1 bob calls alice and alice answers, notify the meeting state\n      if (eventType === LOCUSEVENT.PARTICIPANT_JOIN) {\n      // trigger the event for stop ringing\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'handleOneonOneEvent'\n          },\n          EVENTS.REMOTE_RESPONSE,\n          {\n            remoteDeclined: false,\n            remoteAnswered: true\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  onDeltaLocus(locus) {\n    this.updateLocusInfo(locus);\n    this.updateParticipants(locus.participants);\n    this.isMeetingActive();\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateLocusInfo(locus) {\n    this.updateControls(locus.controls);\n    this.updateConversationUrl(locus.conversationUrl, locus.info);\n    this.updateCreated(locus.created);\n    this.updateFullState(locus.fullState);\n    this.updateHostInfo(locus.host);\n    this.updateMeetingInfo(locus.info, locus.self);\n    this.updateMediaShares(locus.mediaShares);\n    this.updateParticipantsUrl(locus.participantsUrl);\n    this.updateReplace(locus.replace);\n    this.updateSelf(locus.self, locus.participants);\n    this.updateLocusUrl(locus.url);\n    this.updateAclUrl(locus.aclUrl);\n    this.updateBasequence(locus.baseSequence);\n    this.updateSequence(locus.sequence);\n    this.updateMemberShip(locus.membership);\n    this.updateIdentifiers(locus.identities);\n    this.updateEmbeddedApps(locus.embeddedApps);\n    this.compareAndUpdate();\n    // update which required to compare different objects from locus\n  }\n\n  /**\n   * @param {Array} participants\n   * @param {Object} self\n   * @returns {Array}\n   * @memberof LocusInfo\n   */\n  getLocusPartner(participants, self) {\n    if (!participants || participants.length === 0) {\n      return null;\n    }\n\n    return participants.find((participant) =>\n      (self && participant.identity !== self.identity) &&\n  (participants.length <= 2 || (participant.type === _USER_ && !participant.removed))) || this.partner;\n  }\n\n  // TODO: all the leave states need to be checked\n  /**\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  isMeetingActive() {\n    if ((this.parsedLocus.fullState.type === _CALL_) || (this.parsedLocus.fullState.type === _SIP_BRIDGE_)) {\n      const partner = this.getLocusPartner(this.participants, this.self);\n\n      this.updateMeeting({partner});\n\n      // Check if guest user needs to be checked here\n\n      // 1) when bob declines call from bob, (bob='DECLINED')\n      // 2) When alice rejects call to bob , (bob='NOTIFIED')\n\n      // When we dont add MEDIA for condition 2. The state of bob='IDLE'\n\n      if (this.fullState && this.fullState.state === LOCUS.STATE.INACTIVE) {\n        // TODO: update the meeting state\n        LoggerProxy.logger.warn('Locus-info:index#isMeetingActive --> Call Ended, locus state is inactive.');\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.CALL_INACTIVE,\n            shouldLeave: false\n          }\n        );\n      }\n      else\n      if (partner.state === MEETING_STATE.STATES.LEFT &&\n        this.parsedLocus.self &&\n        (this.parsedLocus.self.state === MEETING_STATE.STATES.DECLINED ||\n        this.parsedLocus.self.state === MEETING_STATE.STATES.NOTIFIED ||\n        this.parsedLocus.self.state === MEETING_STATE.STATES.JOINED)) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.PARTNER_LEFT,\n            shouldLeave: this.parsedLocus.self.joinedWith && this.parsedLocus.self.joinedWith.state !== _LEFT_\n          }\n        );\n      }\n      else\n      if (this.parsedLocus.self &&\n        this.parsedLocus.self.state === MEETING_STATE.STATES.LEFT &&\n      (partner.state === MEETING_STATE.STATES.LEFT ||\n      partner.state === MEETING_STATE.STATES.DECLINED ||\n      partner.state === MEETING_STATE.STATES.NOTIFIED ||\n      partner.state === MEETING_STATE.STATES.IDLE) // Happens when user just joins and adds no Media\n      ) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.SELF_LEFT,\n            shouldLeave: false\n          }\n        );\n      }\n    }\n    else if (this.parsedLocus.fullState.type === _MEETING_) {\n      if (this.fullState && (this.fullState.state === LOCUS.STATE.INACTIVE || this.fullState.state === LOCUS.STATE.TERMINATING)) {\n        LoggerProxy.logger.warn('Locus-info:index#isMeetingActive --> Meeting is ending due to inactive or terminating');\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.MEETING_INACTIVE_TERMINATING,\n            shouldLeave: false\n          }\n        );\n      }\n      else if (this.fullState && this.fullState.removed) {\n        // user has been dropped from a meeting\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.FULLSTATE_REMOVED,\n            shouldLeave: false\n          }\n        );\n      }\n      // If you are  guest and you are removed from the meeting\n      // You wont get any further events\n      else if (this.parsedLocus.self && this.parsedLocus.self.removed) {\n        // Check if we need to send an event\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.SELF_REMOVED,\n            shouldLeave: false\n          }\n        );\n      }\n    }\n    else {\n      LoggerProxy.logger.warn('Locus-info:index#isMeetingActive --> Meeting Type is unknown.');\n    }\n  }\n\n  /**\n   * checks if the host permissions have changed while in the meeting\n   * This would be the case if your role as host or moderator has been updated\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  compareAndUpdate() {\n    // TODO: check with locus team on host and moderator doc\n    // use host as a validator if needed\n    if (this.compareAndUpdateFlags.compareSelfAndHost || this.compareAndUpdateFlags.compareHostAndSelf) {\n      this.compareSelfAndHost();\n    }\n  }\n\n  /**\n   * compared the self object to check if the user has host permissions\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  compareSelfAndHost() {\n    // In some cases the host info is not present but the moderator values changes from null to false so it triggers an update\n    if ((this.parsedLocus.self.selfIdentity === this.parsedLocus.host?.hostId) && this.parsedLocus.self.moderator) {\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'compareSelfAndHost'\n        },\n        EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST,\n        {\n          canAssignHost: true\n        }\n      );\n    }\n    else {\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'compareSelfAndHost'\n        },\n        EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST,\n        {\n          canAssignHost: false\n        }\n      );\n    }\n  }\n\n  /**\n   * Update the deltaParticipants property of this object based on a list of\n   * provided participants.\n   *\n   * @param {Array} [participants] - The participants to update against.\n   * @returns {void}\n   */\n  updateParticipantDeltas(participants = []) {\n    // Used to find a participant within a participants collection.\n    const findParticipant = (participant, collection) =>\n      collection.find((item) => item.person.id === participant.person.id);\n\n    // Generates an object that indicates which state properties have changed.\n    const generateDelta = (prevState = {}, newState = {}) => {\n      // Setup deltas.\n      const deltas = {\n        audioStatus: prevState.audioStatus !== newState.audioStatus,\n        videoSlidesStatus: prevState.videoSlidesStatus !== newState.videoSlidesStatus,\n        videoStatus: prevState.videoStatus !== newState.videoStatus\n      };\n\n      // Clean the object\n      Object.keys(deltas).forEach(\n        (key) => {\n          if (deltas[key] !== true) {\n            delete deltas[key];\n          }\n        }\n      );\n\n      return deltas;\n    };\n\n    this.deltaParticipants = participants.reduce(\n      (collection, participant) => {\n        const existingParticipant = findParticipant(\n          participant,\n          this.participants || []\n        ) || {};\n\n        const delta = generateDelta(existingParticipant.status, participant.status);\n\n        const changed = (Object.keys(delta).length > 0);\n\n        if (changed) {\n          collection.push({\n            person: participant.person,\n            delta\n          });\n        }\n\n        return collection;\n      }, []\n    );\n  }\n\n  /**\n   *\n   * @param {Object} participants new participants object\n   * @param {boolen} deltaParticpantFlag  delta event\n   * @returns {Array} updatedParticipants\n   * @memberof LocusInfo\n   */\n  updateParticipants(participants) {\n    this.emitScoped(\n      {\n        file: 'locus-info',\n        function: 'updateParticipants'\n      },\n      EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS,\n      {\n        participants,\n        recordingId: this.parsedLocus.controls && this.parsedLocus.controls.record?.modifiedBy,\n        selfIdentity: this.parsedLocus.self && this.parsedLocus.self.selfIdentity,\n        selfId: this.parsedLocus.self && this.parsedLocus.self.selfId,\n        hostId: this.parsedLocus.host && this.parsedLocus.host.hostId\n      }\n    );\n  }\n\n  /**\n   * @param {Object} controls\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateControls(controls) {\n    if (controls && !isEqual(this.controls, controls)) {\n      this.parsedLocus.controls = ControlsUtils.parse(controls);\n      const {\n        updates: {\n          hasRecordingChanged,\n          hasRecordingPausedChanged,\n          hasMeetingContainerChanged,\n          hasTranscribeChanged\n        },\n        current\n      } = ControlsUtils.getControls(this.controls, controls);\n\n      if (hasRecordingChanged || hasRecordingPausedChanged) {\n        let state = null;\n\n        if (hasRecordingPausedChanged) {\n          if (current.record.paused) {\n            state = RECORDING_STATE.PAUSED;\n          }\n          else {\n            // state will be `IDLE` if the recording is not active, even when there is a `pause` status change.\n            state = current.record.recording ? RECORDING_STATE.RESUMED : RECORDING_STATE.IDLE;\n          }\n        }\n        else if (hasRecordingChanged) {\n          state = current.record.recording ? RECORDING_STATE.RECORDING : RECORDING_STATE.IDLE;\n        }\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls'\n          },\n          LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n          {\n            state,\n            modifiedBy: current.record.modifiedBy,\n            lastModified: current.record.lastModified\n          }\n        );\n      }\n\n      if (hasMeetingContainerChanged) {\n        const {meetingContainerUrl} = current.meetingContainer;\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls'\n          },\n          LOCUSINFO.EVENTS.CONTROLS_MEETING_CONTAINER_UPDATED,\n          {\n            meetingContainerUrl\n          }\n        );\n      }\n\n      if (hasTranscribeChanged) {\n        const {transcribing, caption} = current.transcribe;\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls'\n          },\n          LOCUSINFO.EVENTS.CONTROLS_MEETING_TRANSCRIBE_UPDATED,\n          {\n            transcribing, caption\n          }\n        );\n      }\n\n      this.controls = controls;\n    }\n  }\n\n  /**\n   * @param {String} conversationUrl\n   * @param {Object} info\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateConversationUrl(conversationUrl, info) {\n    if (conversationUrl && !isEqual(this.conversationUrl, conversationUrl)) {\n      this.conversationUrl = conversationUrl;\n      this.updateMeeting({conversationUrl});\n    }\n    else if (info && info.conversationUrl && !isEqual(this.conversationUrl, info.conversationUrl)) {\n      this.conversationUrl = info.conversationUrl;\n      this.updateMeeting({conversationUrl: info.conversationUrl});\n    }\n  }\n\n  /**\n   * @param {Object} created\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateCreated(created) {\n    if (created && !isEqual(this.created, created)) {\n      this.created = created;\n    }\n  }\n\n\n  /**\n   * @param {Object} fullState\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateFullState(fullState) {\n    if (fullState && !isEqual(this.fullState, fullState)) {\n      const result = FullState.getFullState(this.fullState, fullState);\n\n      this.updateMeeting(result.current);\n\n      if (result.updates.meetingStateChangedTo) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateFullState'\n          },\n          LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE,\n          {\n            previousState: result.previous && result.previous.meetingState,\n            currentState: result.current.meetingState\n          }\n        );\n      }\n\n      if (result.updates.meetingTypeChangedTo) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateFullState'\n          },\n          LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE,\n          {\n            type: result.current.type\n          }\n        );\n      }\n      this.parsedLocus.fullState = result.current;\n      this.fullState = fullState;\n    }\n  }\n\n  /**\n   * handles when the locus.host is updated\n   * @param {Object} host the locus.host property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal event locus_info_update_host\n   */\n  updateHostInfo(host) {\n    if (host && !isEqual(this.host, host)) {\n      const parsedHosts = HostUtils.getHosts(this.host, host);\n\n      this.updateMeeting(parsedHosts.current);\n      this.parsedLocus.host = parsedHosts.current;\n      if (parsedHosts.updates.isNewHost) {\n        this.compareAndUpdateFlags.compareSelfAndHost = true;\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateHostInfo'\n          },\n          EVENTS.LOCUS_INFO_UPDATE_HOST,\n          {\n            newHost: parsedHosts.current,\n            oldHost: parsedHosts.previous\n          }\n        );\n      }\n      this.host = host;\n    }\n    else {\n      this.compareAndUpdateFlags.compareSelfAndHost = false;\n    }\n  }\n\n  /**\n   * @param {Object} info\n   * @param {Object} self\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateMeetingInfo(info, self) {\n    if (info && (!isEqual(this.info, info))) {\n      const roles = self ? SelfUtils.getRoles(self) : this.parsedLocus.self?.roles || [];\n      const isJoined = SelfUtils.isJoined(self || this.parsedLocus.self);\n      const parsedInfo = InfoUtils.getInfos(this.parsedLocus.info, info, roles, isJoined);\n\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateMeetingInfo'\n        },\n        LOCUSINFO.EVENTS.MEETING_INFO_UPDATED,\n        {info: parsedInfo.current, self}\n      );\n\n      if (parsedInfo.updates.isLocked) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateMeetingInfo'\n          },\n          LOCUSINFO.EVENTS.MEETING_LOCKED,\n          info\n        );\n      }\n      if (parsedInfo.updates.isUnlocked) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateMeetingInfo'\n          },\n          LOCUSINFO.EVENTS.MEETING_UNLOCKED,\n          info\n        );\n      }\n\n      this.info = info;\n      this.parsedLocus.info = parsedInfo.current;\n      // Parses the info and adds necessary values\n      this.updateMeeting(parsedInfo.current);\n    }\n  }\n\n  /**\n   * @param {Object} embeddedApps\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateEmbeddedApps(embeddedApps) {\n    // don't do anything if the arrays of apps haven't changed significantly\n    if (EmbeddedAppsUtils.areSimilar(this.embeddedApps, embeddedApps)) {\n      return;\n    }\n\n    this.parsedLocus.embeddedApps = EmbeddedAppsUtils.parse(embeddedApps);\n\n    this.emitScoped(\n      {\n        file: 'locus-info',\n        function: 'updateEmbeddedApps'\n      },\n      LOCUSINFO.EVENTS.EMBEDDED_APPS_UPDATED,\n      embeddedApps\n    );\n    this.embeddedApps = embeddedApps;\n  }\n\n  /**\n   * handles when the locus.mediaShares is updated\n   * @param {Object} mediaShares the locus.mediaShares property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal event locus_info_update_media_shares\n   */\n  updateMediaShares(mediaShares) {\n    if (mediaShares && !isEqual(this.mediaShares, mediaShares)) {\n      const parsedMediaShares = MediaSharesUtils.getMediaShares(this.mediaShares, mediaShares);\n\n      this.updateMeeting(parsedMediaShares.current);\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateMediaShares'\n        },\n        EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES,\n        {\n          current: parsedMediaShares.current,\n          previous: parsedMediaShares.previous\n        }\n      );\n      this.parsedLocus.mediaShares = parsedMediaShares.current;\n      this.mediaShares = mediaShares;\n    }\n  }\n\n  /**\n   * @param {String} participantsUrl\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateParticipantsUrl(participantsUrl) {\n    if (participantsUrl && !isEqual(this.participantsUrl, participantsUrl)) {\n      this.participantsUrl = participantsUrl;\n    }\n  }\n\n  /**\n   * @param {Object} replace\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateReplace(replace) {\n    if (replace && !isEqual(this.replace, replace)) {\n      this.replace = replace;\n    }\n  }\n\n  /**\n   * handles when the locus.self is updated\n   * @param {Object} self the locus.mediaShares property\n   * @param {Array} participants the locus.participants property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal events self_admitted_guest, self_unadmitted_guest, locus_info_update_self\n   */\n  updateSelf(self, participants) {\n    if (self && !isEqual(this.self, self)) {\n      const parsedSelves = SelfUtils.getSelves(this.self, self, this.webex.internal.device.url);\n\n      this.updateMeeting(parsedSelves.current);\n      this.parsedLocus.self = parsedSelves.current;\n\n      const element = this.parsedLocus.states[this.parsedLocus.states.length - 1];\n\n      if (element !== parsedSelves.current.state) {\n        this.parsedLocus.states.push(parsedSelves.current.state);\n      }\n\n      // TODO: check if we need to save the sipUri here as well\n      // this.emit(LOCUSINFO.EVENTS.MEETING_UPDATE, SelfUtils.getSipUrl(this.getLocusPartner(participants, self), this.parsedLocus.fullState.type, this.parsedLocus.info.sipUri));\n      const result = SelfUtils.getSipUrl(this.getLocusPartner(participants, self), this.parsedLocus.fullState.type, this.parsedLocus.info.sipUri);\n\n      if (result.sipUri) {\n        this.updateMeeting(result);\n      }\n\n      if (parsedSelves.updates.moderatorChanged) {\n        this.compareAndUpdateFlags.compareHostAndSelf = true;\n      }\n      else {\n        this.compareAndUpdateFlags.compareHostAndSelf = false;\n      }\n\n      if (parsedSelves.updates.layoutChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.CONTROLS_MEETING_LAYOUT_UPDATED,\n          {layout: parsedSelves.current.layout}\n        );\n      }\n\n      if (parsedSelves.updates.isMediaInactiveOrReleased) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.DISCONNECT_DUE_TO_INACTIVITY,\n          {reason: self.reason}\n        );\n      }\n\n      if (parsedSelves.updates.moderatorChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_MODERATOR_CHANGED,\n          self\n        );\n      }\n      if (parsedSelves.updates.localAudioUnmuteRequiredByServer) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUIRED,\n          {\n            muted: parsedSelves.current.remoteMuted,\n            unmuteAllowed: parsedSelves.current.unmuteAllowed\n          }\n        );\n      }\n      if (parsedSelves.updates.isMutedByOthersChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_REMOTE_MUTE_STATUS_UPDATED,\n          {\n            muted: parsedSelves.current.remoteMuted,\n            unmuteAllowed: parsedSelves.current.unmuteAllowed\n          }\n        );\n      }\n      if (parsedSelves.updates.localAudioUnmuteRequestedByServer) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUESTED,\n          {}\n        );\n      }\n      if (parsedSelves.updates.isUserUnadmitted) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST,\n          self\n        );\n      }\n      if (parsedSelves.updates.isUserAdmitted) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST,\n          self\n        );\n      }\n\n      if (parsedSelves.updates.isMediaInactive) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.MEDIA_INACTIVITY,\n          SelfUtils.getMediaStatus(self.mediaSessions)\n        );\n      }\n\n      if (parsedSelves.updates.audioStateChange || parsedSelves.updates.videoStateChange || parsedSelves.updates.shareStateChange) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.MEDIA_STATUS_CHANGE,\n          {\n            audioStatus: parsedSelves.current.currentMediaStatus?.audio,\n            videoStatus: parsedSelves.current.currentMediaStatus?.video,\n            shareStatus: parsedSelves.current.currentMediaStatus?.share\n          }\n        );\n      }\n\n      if (parsedSelves.updates.isUserObserving) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf'\n          },\n          LOCUSINFO.EVENTS.SELF_OBSERVING\n        );\n      }\n\n\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateSelf'\n        },\n        EVENTS.LOCUS_INFO_UPDATE_SELF,\n        {\n          oldSelf: parsedSelves.previous,\n          newSelf: parsedSelves.current\n        }\n      );\n      this.parsedLocus.self = parsedSelves.current;\n      this.self = self;\n    }\n    else {\n      this.compareAndUpdateFlags.compareHostAndSelf = false;\n    }\n  }\n\n  /**\n   * handles when the locus.url is updated\n   * @param {String} url\n   * @returns {undefined}\n   * emits internal event locus_info_update_url\n   */\n  updateLocusUrl(url) {\n    if (url && this.url !== url) {\n      this.url = url;\n      this.updateMeeting({locusUrl: url});\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateLocusUrl'\n        },\n        EVENTS.LOCUS_INFO_UPDATE_URL,\n        url\n      );\n    }\n  }\n\n  /**\n   * @param {String} aclUrl\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateAclUrl(aclUrl) {\n    if (aclUrl && !isEqual(this.aclUrl, aclUrl)) {\n      this.aclUrl = aclUrl;\n    }\n  }\n\n  /**\n   * @param {Number} baseSequence\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateBasequence(baseSequence) {\n    if (baseSequence && !isEqual(this.baseSequence, baseSequence)) {\n      this.baseSequence = baseSequence;\n    }\n  }\n\n  /**\n   * @param {Number} sequence\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateSequence(sequence) {\n    if (sequence && !isEqual(this.sequence, sequence)) {\n      this.sequence = sequence;\n    }\n  }\n\n  /**\n   * @param {Object} membership\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateMemberShip(membership) {\n    if (membership && !isEqual(this.membership, membership)) {\n      this.membership = membership;\n    }\n  }\n\n  /**\n   * @param {Array} identities\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateIdentifiers(identities) {\n    if (identities && !isEqual(this.identities, identities)) {\n      this.identities = identities;\n    }\n  }\n}\n"],"mappings":"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"}