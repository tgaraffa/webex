{"version":3,"names":["createEffectsState","type","LoggerProxy","logger","info","EffectsState","effectType","state","bnr","enabled","BNR_STATUS","NOT_ENABLED","callToWebrtcBNRInProgress","pendingPromiseResolve","pendingPromiseReject","isEnable","meeting","resolve","reject","enableBNR","disableBNR","ENABLED","e","isBnrEnabled","warn","resolvePromise","SHOULD_ENABLE","audioStream","MediaUtil","createMediaStream","mediaProperties","audioTrack","updateAudio","sendAudio","receiveAudio","mediaDirection","stream","Metrics","sendBehavioralMetric","BEHAVIORAL_METRICS","ENABLE_BNR_SUCCESS","error","ENABLE_BNR_FAILURE","reason","message","stack","rejectPromise","SHOULD_DISABLE","WebRTCMedia","Effects","BNR","DISABLE_BNR_SUCCESS","DISABLE_BNR_FAILURE"],"sources":["effectsState.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport {Media as WebRTCMedia} from '@webex/internal-media-core';\n\nimport BEHAVIORAL_METRICS from '../metrics/constants';\nimport Metrics from '../metrics';\nimport MediaUtil from '../media/util';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {BNR_STATUS} from '../constants';\n\nconst createEffectsState = (type) => {\n  LoggerProxy.logger.info(`Meeting:effectState#createEffectsState --> creating effectsState for effect ${type}`);\n\n  return new EffectsState(type);\n};\n\n/* The purpose of this class is to manage the effects state(for eg., BNR).\n*/\nclass EffectsState {\n  constructor(type) {\n    this.effectType = type;\n    this.state = {\n      bnr: {\n        enabled: BNR_STATUS.NOT_ENABLED\n      },\n      callToWebrtcBNRInProgress: false\n    };\n    // these 2 hold the resolve, reject methods for the promise we returned to the client in last handleClientRequest() call\n    this.pendingPromiseResolve = null;\n    this.pendingPromiseReject = null;\n  }\n\n  /**\n   * @memberof EffectsState\n   * @param {Boolean} [isEnable] true for enableBNR, false for disableBNR request\n   * @param {Object} [meeting] the meeting object\n   * @returns {Promise}\n   */\n  async handleClientRequest(isEnable, meeting) {\n    return new Promise((resolve, reject) => {\n      if (this.pendingPromiseResolve) {\n        // resolve the last promise we returned to the client as the client has issued a new request that has superseded the previous one\n        this.pendingPromiseResolve();\n      }\n      this.pendingPromiseResolve = resolve;\n      this.pendingPromiseReject = reject;\n\n      if (isEnable) this.enableBNR(meeting);\n      else this.disableBNR(meeting);\n    });\n  }\n\n  /**\n   * Internal API to return status of BNR\n   * @memberof EffectsState\n   * @returns {Boolean}\n   * @public\n   * @memberof Meeting\n   */\n  isBnrEnabled() {\n    return this.state.bnr.enabled === BNR_STATUS.ENABLED;\n  }\n\n  resolvePromise() {\n    if (this.pendingPromiseResolve) {\n      this.pendingPromiseResolve(true);\n    }\n    this.pendingPromiseResolve = null;\n    this.pendingPromiseReject = null;\n  }\n\n  rejectPromise(e) {\n    if (this.pendingPromiseReject) {\n      this.pendingPromiseReject(e);\n    }\n    this.pendingPromiseResolve = null;\n    this.pendingPromiseReject = null;\n  }\n\n  /**\n   * enableBNR API\n   * @param {Object} meeting the meeting object\n   * @returns {Promise<Boolean>}\n   * @public\n   * @memberof EffectsState\n   */\n  async enableBNR(meeting) {\n    LoggerProxy.logger.info('Meeting:effectState#enableBNR. Enable BNR called');\n\n    if (this.isBnrEnabled()) {\n      LoggerProxy.logger.warn('Meeting:index#enableBNR. BNR is already enabled');\n\n      return this.resolvePromise();\n    }\n\n    if (this.state.callToWebrtcBNRInProgress) {\n      LoggerProxy.logger.warn('Meeting:effectState#enableBNR. Call to WebRTC in progress, we need to wait for it to complete');\n\n      return this.resolvePromise();\n    }\n\n    const {bnr} = this.state;\n\n    try {\n      bnr.enabled = BNR_STATUS.SHOULD_ENABLE;\n      this.state.callToWebrtcBNRInProgress = true;\n      const audioStream = MediaUtil.createMediaStream([meeting.mediaProperties.audioTrack]);\n\n      LoggerProxy.logger.info('Meeting:effectState#enableBNR. MediaStream created from meeting & sent to updateAudio');\n      await meeting.updateAudio({\n        sendAudio: true,\n        receiveAudio: meeting.mediaProperties.mediaDirection.receiveAudio,\n        stream: audioStream\n      });\n\n      LoggerProxy.logger.info('Meeting:effectState#enableBNR. Updated meeting audio with bnr enabled track');\n      bnr.enabled = BNR_STATUS.ENABLED;\n      this.state.callToWebrtcBNRInProgress = false;\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.ENABLE_BNR_SUCCESS,\n      );\n    }\n    catch (error) {\n      bnr.enabled = BNR_STATUS.NOT_ENABLED;\n      this.state.callToWebrtcBNRInProgress = false;\n      LoggerProxy.logger.error('Meeting:index#enableBNR.', error);\n\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.ENABLE_BNR_FAILURE,\n        {\n          reason: error.message,\n          stack: error.stack\n        }\n      );\n      this.rejectPromise(error);\n\n      throw error;\n    }\n\n    return this.resolvePromise();\n  }\n\n  /**\n   * disableBNR API\n   * @param {Object} meeting the meeting object\n   * @returns {Promise<Boolean>}\n   * @public\n   * @memberof EffectsState\n   */\n  async disableBNR(meeting) {\n    LoggerProxy.logger.info('Meeting:effectState#disableBNR. Disable BNR called');\n\n    const {bnr} = this.state;\n\n    try {\n      if (this.state.callToWebrtcBNRInProgress) {\n        LoggerProxy.logger.info('Meeting:effectState#disableBNR. Call to WebRTC in progress, we need to wait for it to complete');\n\n        return this.resolvePromise();\n      }\n\n      bnr.enabled = BNR_STATUS.SHOULD_DISABLE;\n      this.state.callToWebrtcBNRInProgress = true;\n\n      const audioTrack = WebRTCMedia.Effects.BNR.disableBNR(meeting.mediaProperties.audioTrack);\n\n      const audioStream = MediaUtil.createMediaStream([audioTrack]);\n\n      LoggerProxy.logger.info('Meeting:effectState#disableBNR. Raw media track obtained from WebRTC & sent to updateAudio');\n\n      await meeting.updateAudio({\n        sendAudio: true,\n        receiveAudio: meeting.mediaProperties.mediaDirection.receiveAudio,\n        stream: audioStream\n      });\n\n      bnr.enabled = BNR_STATUS.NOT_ENABLED;\n\n      this.state.callToWebrtcBNRInProgress = false;\n\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.DISABLE_BNR_SUCCESS\n      );\n    }\n    catch (error) {\n      bnr.enabled = BNR_STATUS.ENABLED;\n      this.state.callToWebrtcBNRInProgress = false;\n      LoggerProxy.logger.error(`Meeting:index#disableBNR. ${error}`);\n\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.DISABLE_BNR_FAILURE,\n        {\n          reason: error.message,\n          stack: error.stack\n        }\n      );\n      this.rejectPromise(error);\n\n      throw error;\n    }\n\n    return this.resolvePromise();\n  }\n}\n\nexport default createEffectsState;\n"],"mappings":"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"}