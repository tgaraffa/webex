"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _constants = require("../constants");

/*!
 * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.
 */

/**
 * @class InMeetingActions
 */
var InMeetingActions = /*#__PURE__*/(0, _createClass2.default)(function InMeetingActions() {
  var _this = this;

  (0, _classCallCheck2.default)(this, InMeetingActions);
  (0, _defineProperty2.default)(this, "namespace", _constants.MEETINGS);
  (0, _defineProperty2.default)(this, "canInviteNewParticipants", null);
  (0, _defineProperty2.default)(this, "canAdmitParticipant", null);
  (0, _defineProperty2.default)(this, "canLock", null);
  (0, _defineProperty2.default)(this, "canUnlock", null);
  (0, _defineProperty2.default)(this, "canAssignHost", null);
  (0, _defineProperty2.default)(this, "canStartRecording", null);
  (0, _defineProperty2.default)(this, "canPauseRecording", null);
  (0, _defineProperty2.default)(this, "canResumeRecording", null);
  (0, _defineProperty2.default)(this, "canStopRecording", null);
  (0, _defineProperty2.default)(this, "canRaiseHand", null);
  (0, _defineProperty2.default)(this, "canLowerAllHands", null);
  (0, _defineProperty2.default)(this, "canLowerSomeoneElsesHand", null);
  (0, _defineProperty2.default)(this, "canEnableClosedCaption", null);
  (0, _defineProperty2.default)(this, "canStartTranscribing", null);
  (0, _defineProperty2.default)(this, "canStopTranscribing", null);
  (0, _defineProperty2.default)(this, "isClosedCaptionActive", null);
  (0, _defineProperty2.default)(this, "isWebexAssistantActive", null);
  (0, _defineProperty2.default)(this, "canViewCaptionPanel", null);
  (0, _defineProperty2.default)(this, "isRealTimeTranslationEnabled", null);
  (0, _defineProperty2.default)(this, "canSelectSpokenLanguages", null);
  (0, _defineProperty2.default)(this, "waitingForOthersToJoin", null);
  (0, _defineProperty2.default)(this, "get", function () {
    return {
      canInviteNewParticipants: _this.canInviteNewParticipants,
      canAdmitParticipant: _this.canAdmitParticipant,
      canLock: _this.canLock,
      canUnlock: _this.canUnlock,
      canAssignHost: _this.canAssignHost,
      canStartRecording: _this.canStartRecording,
      canPauseRecording: _this.canPauseRecording,
      canResumeRecording: _this.canResumeRecording,
      canStopRecording: _this.canStopRecording,
      canRaiseHand: _this.canRaiseHand,
      canLowerAllHands: _this.canLowerAllHands,
      canLowerSomeoneElsesHand: _this.canLowerSomeoneElsesHand,
      canEnableClosedCaption: _this.canEnableClosedCaption,
      canStartTranscribing: _this.canStartTranscribing,
      canStopTranscribing: _this.canStopTranscribing,
      isClosedCaptionActive: _this.isClosedCaptionActive,
      isWebexAssistantActive: _this.isWebexAssistantActive,
      canViewCaptionPanel: _this.canViewCaptionPanel,
      isRealTimeTranslationEnabled: _this.isRealTimeTranslationEnabled,
      canSelectSpokenLanguages: _this.canSelectSpokenLanguages,
      waitingForOthersToJoin: _this.waitingForOthersToJoin
    };
  });
  (0, _defineProperty2.default)(this, "set", function (actions) {
    var old = _this.get();

    var changed = false;
    (0, _keys.default)(old).forEach(function (actionKey) {
      var actionValue = actions[actionKey];

      if (actionValue !== undefined && actionValue !== old[actionKey]) {
        changed = true;
        _this[actionKey] = actionValue;
      }
    });
    return changed;
  });
});
exports.default = InMeetingActions;
//# sourceMappingURL=in-meeting-actions.js.map
