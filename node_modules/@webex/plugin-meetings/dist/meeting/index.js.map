{"version":3,"names":["BrowserDetection","isBrowser","logRequest","request","header","success","failure","LoggerProxy","logger","info","then","arg","catch","error","MEDIA_UPDATE_TYPE","ALL","AUDIO","VIDEO","SHARE","Meeting","attrs","options","MEETINGS","mediaDirection","audioVideo","VIDEO_RESOLUTIONS","mediaProperties","localQualityLevel","sharePreferences","sendAudio","sendVideo","sendShare","warn","video","deviceId","preferredVideoDevice","lastVideoDeviceId","getVideoDeviceId","setVideoDeviceId","Media","getSupportedDevice","reject","MediaError","devicePermissions","getUserMedia","isSharing","shareStatus","SHARE_STATUS","LOCAL_SHARE_ACTIVE","config","metricName","BEHAVIORAL_METRICS","GET_USER_MEDIA_FAILURE","data","correlation_id","correlationId","locus_id","locusUrl","split","pop","reason","message","stack","metadata","type","name","Metrics","sendBehavioralMetric","getDevices","statsAnalyzer","on","StatsAnalyzerEvents","MEDIA_QUALITY","intervalMetadata","peerReflexiveIP","webex","meetings","geoHintInfo","clientAddress","MQA_STATS","DEFAULT_IP","postEvent","event","eventType","meeting","intervalData","networkType","LOCAL_MEDIA_STARTED","Trigger","trigger","file","function","EVENT_TRIGGERS","MEETING_MEDIA_LOCAL_STARTED","SENDING_MEDIA_START","mediaType","LOCAL_MEDIA_STOPPED","SENDING_MEDIA_STOP","REMOTE_MEDIA_STARTED","MEETING_MEDIA_REMOTE_STARTED","RECEIVING_MEDIA_START","REMOTE_MEDIA_STOPPED","RECEIVING_MEDIA_STOP","experimental","enableMediaNegotiatedEvent","MEDIA_NEGOTIATED","canUpdateMedia","queuedMediaUpdates","length","shift","pendingPromiseResolve","pendingPromiseReject","mediaUpdateType","log","updateMedia","updateAudio","updateVideo","updateShare","audio","NO_SHARE","transcription","closeSocket","triggerStopReceivingTranscriptionEvent","undefined","keepAliveTimerId","joinedWith","keepAliveUrl","keepAliveSecs","keepAliveInterval","setInterval","meetingRequest","keepAlive","stopKeepAlive","clearInterval","id","uuid","v4","userId","orgId","resource","deviceUrl","roapSeq","ROAP_SEQ_PRE","meetingInfo","members","Members","locus","url","parent","roap","Roap","reconnectionManager","ReconnectionManager","effects","meetingFiniteStateMachine","MeetingStateMachine","create","conversationUrl","sipUri","destination","destinationType","partner","owner","hostId","policy","MeetingRequest","mediaConnections","fetchMeetingInfoTimeoutId","updateMediaConnections","slice","MediaProperties","inMeetingActions","InMeetingActions","get","shareTransceiver","peerConnection","shareDirection","direction","trackReadyState","sender","track","readyState","activeShare","LIVE","offersToSendData","SENDRECV","configurable","callEvents","floorGrantPending","dialInDeviceStatus","PSTN_STATUS","UNKNOWN","dialInUrl","dialOutDeviceStatus","dialOutUrl","networkQualityMonitor","networkStatus","locusInfo","LocusInfo","updateMeetingObject","bind","recording","deferJoin","hasWebsocketConnected","internal","mercury","connected","lastVideoLayoutInfo","layoutType","main","content","passwordStatus","PASSWORD_STATUS","requiredCaptcha","meetingInfoFailureReason","setUpLocusInfoListeners","init","hasJoinedOnce","password","captchaCode","clearTimeout","Error","REQUIRED","captchaInfo","code","captchaId","meetingInfoProvider","fetchMeetingInfo","parseMeetingInfo","body","MEETING_INFO_FAILURE_REASON","NONE","VERIFIED","NOT_REQUIRED","MEETING_INFO_AVAILABLE","resolve","MeetingInfoV2PasswordError","meetingNumber","WRONG_PASSWORD","refreshCaptcha","PasswordError","MeetingInfoV2CaptchaError","WRONG_CAPTCHA","isPasswordRequired","CaptchaError","OTHER","VERIFY_PASSWORD_SUCCESS","isPasswordValid","failureReason","URL","refreshURL","hostname","captchaRefreshUrl","response","captchaID","verificationImageURL","verificationAudioURL","setUpLocusInfoSelfListener","setUpLocusInfoMeetingListener","setUpLocusFullStateListener","setUpLocusUrlListener","setUpLocusHostListener","setUpLocusSelfListener","setUpLocusParticipantsListener","setupLocusControlsListener","setUpLocusMediaSharesListener","setUpLocusEmbeddedAppsListener","setUpLocusInfoMeetingInfoListener","setUpLocusInfoAssignHostListener","setUpLocusInfoMediaInactiveListener","EVENTS","DISCONNECT_DUE_TO_INACTIVITY","res","locusId","REQUEST_UPLOAD_LOGS","reconnection","autoRejoin","reconnect","MEETING_SELF_LEFT","LOCUS_INFO_CAN_ASSIGN_HOST","payload","changed","set","canAssignHost","MEETING_ACTIONS_UPDATE","LOCUSINFO","FULL_STATE_MEETING_STATE_CHANGE","MEETING_STATE_CHANGE","FULL_STATE_TYPE_UPDATE","locusFullStateTypeUpdate","trackingId","identifiers","services","fullState","locusStartTime","lastActive","mediaAgentAlias","mediaAgentGroupId","mediaAgentCluster","joinRespRxStartAudio","getSetupDelayDuration","audioSetupDelay","joinRespRxStart","joinRespRxStartVideo","videoSetupDelay","joinRespTxStartAudio","getSendingMediaDelayDuration","joinRespTxStart","joinRespTxStartVideo","localSDPGenRemoteSDPRecv","getLocalSDPGenRemoteSDPRecvDelay","joinTimes","callInitiateJoinReq","getCallInitiateJoinReq","joinReqResp","getJoinReqResp","getTotalJmt","CA_TYPE","initMediaPayload","initPayload","getAnalyzerMetricsPrePayload","metrics","submitCallDiagnosticEvents","NETWORK_STATUS","DISCONNECTED","MEETINGS_NETWORK_DISCONNECTED","CONNECTED","MEETINGS_NETWORK_CONNECTED","LOCUS_INFO_UPDATE_SELF","locusSelfUpdate","pstnUpdate","newSelf","state","MEETING_STATE","STATES","JOINED","share","self","dialInPstnDevice","pstnDevices","find","device","dialOutPstnDevice","newStatus","dialingStatus","MEETING_SELF_PHONE_AUDIO_UPDATE","dialIn","status","attendeeId","dialOut","LOCUS_INFO_UPDATE_HOST","locusHostUpdate","LOCUS_INFO_UPDATE_PARTICIPANTS","locusParticipantsUpdate","CONTROLS_RECORDING_UPDATED","modifiedBy","lastModified","RECORDING_STATE","RECORDING","MEETING_STARTED_RECORDING","IDLE","MEETING_STOPPED_RECORDING","PAUSED","MEETING_PAUSED_RECORDING","RESUMED","MEETING_RESUMED_RECORDING","CONTROLS_MEETING_CONTAINER_UPDATED","meetingContainerUrl","MEETING_MEETING_CONTAINER_UPDATE","CONTROLS_MEETING_TRANSCRIBE_UPDATED","caption","transcribing","receiveTranscription","MEETING_STOPPED_RECEIVING_TRANSCRIPTION","LOCUS_INFO_UPDATE_MEDIA_SHARES","current","contentShare","whiteboardShare","whiteboard","previousContentShare","previous","previousWhiteboardShare","beneficiaryId","disposition","resourceUrl","newShareStatus","selfId","FLOOR_ACTION","GRANTED","REMOTE_SHARE_ACTIVE","shareTrack","stopShare","skipSignalingCheck","WHITEBOARD_SHARE_ACTIVE","RELEASED","oldShareStatus","MEETING_STOPPED_SHARING_REMOTE","MEETING_STOPPED_SHARING_LOCAL","SHARE_STOPPED_REASON","SELF_STOPPED","MEETING_STOPPED_SHARING_WHITEBOARD","sendStartedSharingRemote","MEETING_STARTED_SHARING_REMOTE","memberId","receiveShare","finally","MEETING_STARTED_SHARING_LOCAL","LOCAL_SHARE_FLOOR_GRANTED","MEETING_STARTED_SHARING_WHITEBOARD","WHITEBOARD_SHARE_FLOOR_GRANTED","locusMediaSharesUpdate","LOCUS_INFO_UPDATE_URL","locusUrlUpdate","MEETING_LOCKED","MEETING_UNLOCKED","MEETING_INFO_UPDATED","canInviteNewParticipants","MeetingUtil","userDisplayHints","canAdmitParticipant","canLock","canUserLock","canUnlock","canUserUnlock","canStartRecording","canUserRecord","canStopRecording","canUserStop","canPauseRecording","canUserPause","canResumeRecording","canUserResume","canRaiseHand","canUserRaiseHand","canLowerAllHands","canUserLowerAllHands","canLowerSomeoneElsesHand","canUserLowerSomeoneElsesHand","canEnableClosedCaption","canStartTranscribing","canStopTranscribing","isClosedCaptionActive","isWebexAssistantActive","canViewCaptionPanel","isRealTimeTranslationEnabled","canSelectSpokenLanguages","waitingForOthersToJoin","EMBEDDED_APPS_UPDATED","embeddedApps","MEETING_EMBEDDED_APPS_UPDATE","LOCAL_UNMUTE_REQUIRED","handleServerLocalUnmuteRequired","MEETING_SELF_UNMUTED_BY_OTHERS","SELF_REMOTE_MUTE_STATUS_UPDATED","handleServerRemoteMuteUpdate","muted","unmuteAllowed","isMuted","MEETING_SELF_MUTED_BY_OTHERS","LOCAL_UNMUTE_REQUESTED","MEETING_SELF_REQUESTED_TO_UNMUTE","SELF_UNADMITTED_GUEST","startKeepAlive","MEETING_SELF_LOBBY_WAITING","LOBBY_ENTERED","SELF_ADMITTED_GUEST","MEETING_SELF_GUEST_ADMITTED","LOBBY_EXITED","MEDIA_INACTIVITY","MEETING_MEDIA_INACTIVE","MEDIA_STATUS_CHANGE","updateMediaStatus","actual","expected","receiveAudio","receiveVideo","REMOTE_RESPONSE","remote","remoteDeclined","leave","DESTROY_MEETING","wirelessShare","onended","stop","shouldLeave","cleanUp","meetingId","object","forEach","key","invitee","alertIfActive","addMember","cancelPhoneInvite","memberIds","admitMembers","removeMember","mute","muteMember","moderator","transferHostToMember","isSelf","webexMeetingInfo","locusMeetingObject","errors","setSipUri","enableUnifiedMeetings","sipUrl","sipMeetingUri","webExMeetingId","meetingJoinUrl","permissionToken","setLocus","participants","getLocusPartner","_CALL_","person","seq","mtgLocus","mediaId","host","initialSetup","pc","ontrack","MEDIA_ID","AUDIO_TRACK","VIDEO_TRACK","SHARE_TRACK","mediaTrack","trackMediaID","transceiver","mid","target","audioTransceiver","videoTransceiver","receiver","MUTE_AUDIO_FAILURE","EVENT_TYPES","REMOTE_AUDIO","setRemoteAudioTrack","REMOTE_VIDEO","setRemoteVideoTrack","REMOTE_SHARE","setRemoteShare","startAnalyzer","MEDIA_READY","stream","MediaUtil","createMediaStream","unsetRemoteMedia","unsetRemoteTracks","closeRemoteTracks","remoteAudioTrack","remoteVideoTrack","remoteShare","triggerMediaStoppedEvent","MEDIA_STOPPED","stopTrack","stopTracks","isTrackStopped","ENDED","isWrongReadyState","all","LOCAL","audioTrack","videoTrack","emitEvent","settings","getSettings","setMediaSettings","echoCancellation","noiseSuppression","mediaSettings","setLocalAudioTrack","applyClientStateLocally","sendLocalMediaReadyEvent","aspectRatio","frameRate","height","width","setLocalVideoTrack","localStream","getTrack","localShare","setLocalShareTrack","contentTracks","displaySurface","cursor","screen","handleShareTrackEnded","LOCAL_SHARE","audioStopped","videoStopped","unsetLocalVideoTrack","unsetLocalShareTrack","ONLINE","MERCURY_CONNECTION_RESTORED","OFFLINE","MERCURY_CONNECTION_LOST","MERCURY_CONNECTION_FAILURE","PeerConnectionManager","close","unsetPeerConnection","detection","off","isUserInJoinedState","UserNotJoinedError","NoMediaEstablishedYetError","ParameterError","LOG_HEADER","handleClientRequest","handleAudioLogging","MUTED","USER_INTERACTION","UNMUTED","UNMUTE_AUDIO_FAILURE","handleVideoLogging","MUTE_VIDEO_FAILURE","UNMUTE_VIDEO_FAILURE","joinOptions","audioVideoOptions","join","joinResponse","getMediaStreams","addMedia","mediaResponse","media","local","JOIN_WITH_MEDIA_FAILURE","isMediaEstablished","currentMediaStatus","validate","ReconnectInProgress","MEETING_RECONNECTION_STARTING","MEETING_RECONNECTION_SUCCESS","MEETING_RECONNECTION_FAILURE","ReconnectionError","MEETING_RECONNECT_FAILURE","uploadLogs","reset","controls","transcribe","onCloseSocket","onErrorSocket","RECEIVE_TRANSCRIPTION_FAILURE","datachannelUrl","method","HTTP_VERBS","POST","uri","webSocketUrl","Transcription","sessionId","subscribe","MEETING_STARTED_RECEIVING_TRANSCRIPTION","monitorTranscriptionSocketConnection","connect","credentials","supertoken","access_token","registered","errorMessage","joinFailed","joinSuccess","setCorrelationId","rejoin","CALL_INITIATED","MEETING_STATE_MACHINE","RINGING","ring","_JOIN_","resourceId","meetingQuality","QUALITY_LEVELS","setLocalQualityLevel","setRemoteQualityLevel","joinMeetingOptions","JOIN_SUCCESS","isTranscriptionSupported","fail","LOCUS_JOIN_RESPONSE","parseLocusError","JOIN_FAILURE","phoneNumber","dialInPstn","dialOutPstn","pstnStatus","SUCCESS","includes","isPhoneProvisioned","clientUrl","onFullLocus","ADD_DIAL_IN_FAILURE","dial_in_url","client_url","ADD_DIAL_OUT_FAILURE","dial_out_url","disconnectPhoneAudio","MEDIA_CAPABILITIES","mediaCapabilities","rx","share_audio","tx","MOVE_MEDIA","once","SELF_OBSERVING","stopFloorRequest","setMediaDirection","closeLocalStream","closeLocalShare","unsetMediaTracks","reconnectMedia","MOVE_TO_SUCCESS","MOVE_TO_FAILURE","moveToResource","oldCorrelationId","leaveMeeting","moveMeeting","MOVE_FROM_SUCCESS","MOVE_FROM_FAILURE","meetingState","FULL_STATE","ACTIVE","MeetingNotActiveError","isUserInLeftState","isUserUnadmitted","UserInLobbyError","validateOptions","doTurnDiscovery","turnServerInfo","setMediaPeerConnection","createPeerConnection","setMercuryListener","setPeerConnectionEvents","preMedia","attachMedia","remoteQualityLevel","enableRtx","enableExtmap","setStartLocalSDPGenRemoteSDPRecvDelay","devices","handleDeviceLogging","handleMediaLogging","setRemoteStream","stats","enableStatsAnalyzer","NetworkQualityMonitor","StatsAnalyzer","setupStatsAnalyzerEventHandlers","NETWORK_QUALITY","sendNetworkQualityEvent","ADD_MEDIA_FAILURE","timerCount","joiningTimer","sendRoapMediaRequest","sdp","connectionState","CONNECTION_STATE","stabilityTimeout","setTimeout","createMeetingsError","PC_BAIL_TIMEOUT","ADD_MEDIA_SUCCESS","stopStatsAnalyzer","stopAnalyzer","closePeerConnections","unsetPeerConnections","InvalidSdpError","CODE","MEETING_REMOVED_REASON","MEETING_CONNECTION_FAILED","signalingState","SDP","STABLE","RoapCollection","isBusy","queueItem","push","enqueueMediaUpdate","previousSendShareStatus","setContentSlides","UPDATE_MEDIA_FAILURE","checkForStopShare","startShare","bnrEnabled","bnr","enabled","isAudioMuted","BNR_STATUS","ENABLED","SHOULD_ENABLE","internal_enableBNR","previousMediaDirection","sendTrack","receiveTrack","updateTransceiver","createMuteState","previousShareStatus","delay","sharingModeIsActive","isSharingOutOfSync","isLocalShareLive","setLocalTracks","_INCOMING_","acknowledgeMeeting","ALERT_DISPLAYED","declineMeeting","decline","LEAVE","canProceed","leaveReason","CLIENT_LEAVE_REQUEST","clearMeetingData","guest","MEETING_LEAVE_FAILURE","channelUrl","resourceToken","mediaShares","element","WHITEBOARD_SHARE_INITIATED","personUrl","changeMeetingFloor","MEETING_START_WHITEBOARD_SHARE_FAILURE","board","WHITEBOARD_SHARE_STOPPED","STOP_WHITEBOARD_SHARE_FAILURE","CONTENT","SHARE_INITIATED","MEETING_SHARE_FAILURE","SHARE_STOPPED","floor","beneficiary","STOP_FLOOR_REQUEST_FAILURE","startRecording","stopRecording","pauseRecording","resumeRecording","lockMeeting","unlockMeeting","tones","enableDTMF","sendDTMF","rejectWithErrorLog","renderInfo","layoutInfo","LAYOUT_TYPES","mainWidth","Math","round","mainHeight","abs","contentWidth","contentHeight","CONTROLS_MEETING_LAYOUT_UPDATED","envelope","MEETING_CONTROLS_LAYOUT_UPDATE","layout","changeVideoLayoutDebounced","level","previousLevel","setLocalVideoQuality","SET_MEETING_QUALITY_FAILURE","shareConstraints","getDisplayMedia","shareStream","GET_DISPLAY_MEDIA_FAILURE","USER_ENDED_SHARE_STREAMS","networkQualityScore","typeMedia","performance","now","start","end","startLocalSDPGenRemoteSDPRecvDelay","endLocalSDPGenRemoteSDPRecvDelay","calculatedDelay","METRICS_JOIN_TIMES_MAX_DURATION","startCallInitiateJoinReq","endCallInitiateJoinReq","startJoinReqResp","endJoinReqResp","MEETING_END_ALL_INITIATED","endMeetingForAll","MEETING_END_ALL_FAILURE","isBnrEnabled","WebRTCMedia","Effects","BNR","enableBNR","bnrAudioTrack","createEffectsState","StatelessWebexPlugin"],"sources":["index.js"],"sourcesContent":["import uuid from 'uuid';\nimport {cloneDeep, isEqual, pick} from 'lodash';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\nimport {Media as WebRTCMedia} from '@webex/internal-media-core';\n\nimport {\n  MeetingNotActiveError, createMeetingsError, UserInLobbyError,\n  NoMediaEstablishedYetError, UserNotJoinedError, InvalidSdpError\n} from '../common/errors/webex-errors';\nimport {StatsAnalyzer, EVENTS as StatsAnalyzerEvents} from '../statsAnalyzer';\nimport NetworkQualityMonitor from '../networkQualityMonitor';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport Trigger from '../common/events/trigger-proxy';\nimport Roap from '../roap/index';\nimport Media from '../media';\nimport MediaProperties from '../media/properties';\nimport MeetingStateMachine from '../meeting/state';\nimport createMuteState from '../meeting/muteState';\nimport createEffectsState from '../meeting/effectsState';\nimport LocusInfo from '../locus-info';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport Metrics from '../metrics';\nimport {trigger, mediaType, eventType} from '../metrics/config';\nimport ReconnectionManager from '../reconnection-manager';\nimport MeetingRequest from '../meeting/request';\nimport Members from '../members/index';\nimport MeetingUtil from '../meeting/util';\nimport MediaUtil from '../media/util';\nimport Transcription from '../transcription';\nimport PasswordError from '../common/errors/password-error';\nimport CaptchaError from '../common/errors/captcha-error';\nimport ReconnectionError from '../common/errors/reconnection';\nimport ReconnectInProgress from '../common/errors/reconnection-in-progress';\nimport {\n  _CALL_,\n  _INCOMING_,\n  _JOIN_,\n  AUDIO,\n  CONNECTION_STATE,\n  CONTENT,\n  ENDED,\n  EVENT_TRIGGERS,\n  EVENT_TYPES,\n  EVENTS,\n  FLOOR_ACTION,\n  FULL_STATE,\n  LAYOUT_TYPES,\n  LIVE,\n  LOCUSINFO,\n  MEETING_INFO_FAILURE_REASON,\n  MEETING_REMOVED_REASON,\n  MEETING_STATE_MACHINE,\n  MEETING_STATE,\n  MEETINGS,\n  METRICS_JOIN_TIMES_MAX_DURATION,\n  MQA_STATS,\n  NETWORK_STATUS,\n  ONLINE,\n  OFFLINE,\n  PASSWORD_STATUS,\n  PC_BAIL_TIMEOUT,\n  PSTN_STATUS,\n  QUALITY_LEVELS,\n  RECORDING_STATE,\n  ROAP_SEQ_PRE,\n  SDP,\n  SENDRECV,\n  SHARE_STATUS,\n  SHARE_STOPPED_REASON,\n  VIDEO_RESOLUTIONS,\n  VIDEO,\n  BNR_STATUS,\n  HTTP_VERBS\n} from '../constants';\nimport BEHAVIORAL_METRICS from '../metrics/constants';\nimport ParameterError from '../common/errors/parameter';\nimport MediaError from '../common/errors/media';\nimport {MeetingInfoV2PasswordError, MeetingInfoV2CaptchaError} from '../meeting-info/meeting-info-v2';\nimport BrowserDetection from '../common/browser-detection';\nimport RoapCollection from '../roap/collection';\n\nimport InMeetingActions from './in-meeting-actions';\n\n\nconst {isBrowser} = BrowserDetection();\n\nconst logRequest = (request, {header = '', success = '', failure = ''}) => {\n  LoggerProxy.logger.info(header);\n\n  return request\n    .then((arg) => {\n      LoggerProxy.logger.info(success);\n\n      return arg;\n    })\n    .catch((error) => {\n      LoggerProxy.logger.error(failure, error);\n      throw error;\n    });\n};\n\nexport const MEDIA_UPDATE_TYPE = {\n  ALL: 'ALL',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  SHARE: 'SHARE'\n};\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n * @property {boolean} isSharing\n */\n\n/**\n  * AudioVideo\n  * @typedef {Object} AudioVideo\n  * @property {Object} audio\n  * @property {String} audio.deviceId\n  * @property {Object} video\n  * @property {String} video.deviceId\n  */\n\n/**\n   * SharePreferences\n   * @typedef {Object} SharePreferences\n   * @property {Object} [shareConstraints]\n   * @property {Boolean} [highFrameRate]\n   */\n\n/**\n * JoinOptions\n * @typedef {Object} JoinOptions\n * @property {String} [resourceId]\n * @property {String} [pin]\n * @property {Boolean} [moderator]\n * @property {String|Object} [meetingQuality]\n * @property {String} [meetingQuality.local]\n * @property {String} [meetingQuality.remote]\n * @property {Boolean} [rejoin]\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property {Boolean} sendAudio\n * @property {Boolean} sendVideo\n * @property {Boolean} sendShare\n */\n\n/**\n * Recording\n * @typedef {Object} Recording\n * @property {Object} state\n * @property {String} modifiedBy\n */\n\n/**\n  * Meeting State Change Event\n  * Emitted when ever there is a meeting state change\n  * @event meeting:stateChange\n  * @instance\n  * @type {Object}\n  * @property {String} currentState current state of the meeting\n  * @property {String} previousState previous state of the meeting\n  * @memberof Meeting\n  */\n\n/**\n  * Media Ready Event\n  * Emitted when a stream is ready to be rendered\n  * @event media:ready\n  * @instance\n  * @type {Object}\n  * @property {MediaStream} stream the media stream\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n  * Media Stopped Event\n  * Emitted when a stream has stopped sending\n  * @event media:stopped\n  * @instance\n  * @type {Object}\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n * Meeting Ringing Event\n * Emitted when this client should play a ringing sound, because this member is getting an incoming meeting\n * or sending out an incoming meeting\n * @event meeting:ringing\n * @instance\n * @type {Object}\n * @property {String} type // INCOMING or JOIN\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Ringing Stop Event\n * Emitted when this client should stop playing a ringing sound\n * @event meeting:ringingStop\n * @instance\n * @type {Object}\n * @property {Object} type\n * @property {Boolean} type.remoteAnswered\n * @property {Boolean} type.remoteDeclined\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Local Event\n * Emitted when this member starts sharing\n * @event meeting:startedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Local Event\n * Emitted when this member stops sharing\n * @event meeting:stoppedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Remote Event\n * Emitted when remote sharing starts\n * @event meeting:startedSharingRemote\n * @instance\n * @type {Object}\n * @property {Boolean} memberId id of the meeting member that started screen share\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Remote Event\n * Emitted when remote screen sharing ends\n * @event meeting:stoppedSharingRemote\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Locked Event\n * Emitted when a meeting is locked\n * @event meeting:locked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Unlocked Event\n * Emitted when a meeting is unlocked\n * @event meeting:unlocked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Actions Update Event\n * Emitted when a user can take actions on a meeting such as lock, unlock, assign host\n * @event meeting:actionsUpdate\n * @instance\n * @type {Object}\n * @property {Boolean} canLock\n * @property {Boolean} canUnlock\n * @property {Boolean} canAssignHost\n * @memberof Meeting\n */\n\n/**\n * Meeting Unmuted By Others Event\n * Emitted when a member is unmuted by another member\n * @event meeting:self:unmutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when a member is muted by another member\n * @event meeting:self:mutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @property {Boolean} payload.unmuteAllowed - whether the user is allowed to unmute self\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when the host(moderator)/co-host requests a user to unmute\n * @event meeting:self:requestedToUnmute\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n\n/**\n * Meeting Self Guest Admitted Event\n * Emitted when a joined user get admitted to the meeting by another member or host\n * @event meeting:self:guestAdmitted\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Lobby Waiting Event\n * Emitted when joined user enters the lobby and is waiting for the webex meeting to begin\n * @event meeting:self:lobbyWaiting\n * @instance\n * @type {Object}\n * @property {Object} reason Reason why user left the meeting\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Left State\n * Emitted when user is inactive for more then 40 seconds, User can rejoin the meeting again\n * @event meeting:self:left\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n  * Reconnection Starting Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionStarting\n  * @instance\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Success Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionSuccess\n  * @instance\n  * @type {Object}\n  * @property {Object} reconnect\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Failure Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionFailure\n  * @instance\n  * @type {Object}\n  * @property {Error} error\n  * @memberof Meeting\n  */\n\n/**\n  * Meeting network quality event\n  * Emitted on each interval of retrieving stats Analyzer data\n  * @event network:quality\n  * @type {Object}\n  * @property {string} mediaType {video|audio}\n  * @property {number} networkQualityScore - {1|0} 1 indicates acceptable uplink 0 indicates unacceptable uplink based on threshold\n  * @memberof Meeting\n  */\n\n/**\n * @description Meeting is the crux of the plugin\n * @export\n * @class Meeting\n */\nexport default class Meeting extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @constructor\n   * @memberof Meeting\n  */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.options = options;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.id = uuid.v4();\n    /**\n     * Correlation ID used for network tracking of meeting join\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.correlationId = this.id;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.userId = attrs.userId;\n    /**\n     * Organization ID\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.orgId = attrs.orgId;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.resource = attrs.resource;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.deviceUrl = attrs.deviceUrl;\n    /**\n     * @description set you -1 as default values is 0 (used to idenfify if 1st roap request was sent)\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roapSeq = ROAP_SEQ_PRE;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    // TODO: needs to be defined as a class\n    this.meetingInfo = {};\n    /**\n     * @instance\n     * @type {Members}\n     * @public\n     * @memberof Meeting\n     */\n    this.members = new Members({locusUrl: (attrs.locus && attrs.locus.url)}, {parent: this.webex});\n    /**\n     * @instance\n     * @type {Roap}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roap = new Roap({}, {parent: this.webex});\n    /**\n     * created later\n     * @instance\n     * @type {ReconnectionManager}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.reconnectionManager = new ReconnectionManager(this);\n    /**\n     * created later\n     * @instance\n     * @type {MuteState}\n     * @private\n     * @memberof Meeting\n     */\n    this.audio = null;\n    /**\n     * created later\n     * @instance\n     * @type {MuteState}\n     * @private\n     * @memberof Meeting\n     */\n    this.video = null;\n    /**\n     * created later\n     * @instance\n     * @type {EffectsState}\n     * @private\n     * @memberof Meeting\n     */\n    this.effects = null;\n    /**\n     * @instance\n     * @type {MeetingStateMachine}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.meetingFiniteStateMachine = MeetingStateMachine.create(this);\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.conversationUrl = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.locusUrl = (attrs.locus && attrs.locus.url) || null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.sipUri = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.destination = attrs.destination;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.destinationType = attrs.destinationType;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.partner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.type = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.owner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.hostId = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.policy = null;\n    /**\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingRequest = new MeetingRequest({}, options);\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaConnections = null;\n\n    /**\n     * Fetching meeting info can be done randomly 2-5 mins before meeting start\n     * In case it is done before the timer expires, this timeout id is reset to cancel the timer.\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.fetchMeetingInfoTimeoutId = null;\n\n    /**\n     * Update the MediaConnections property with new information\n     * @param {array} mediaConnections\n     * @returns {undefined}\n     * @private\n     * @memberof Meeting\n     */\n    this.updateMediaConnections = (mediaConnections) => {\n      if (!isEqual(this.mediaConnections, mediaConnections)) {\n        // grab last/latest item in the new mediaConnections information\n        this.mediaConnections = mediaConnections.slice(-1);\n      }\n    };\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MediaProperties}\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaProperties = new MediaProperties();\n    /**\n     * @instance\n     * @type {InMeetingActions}\n     * @public\n     * @memberof Meeting\n    */\n    this.inMeetingActions = new InMeetingActions();\n    /**\n     * This is deprecated, please use shareStatus instead.\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     * @deprecated after v1.118.13\n     */\n    this.isSharing = false;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.shareStatus = SHARE_STATUS.NO_SHARE;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    Object.defineProperty(this, 'isLocalShareLive', {\n      get: () => {\n        const {shareTransceiver} = this.mediaProperties.peerConnection;\n        const shareDirection = shareTransceiver?.direction;\n        const trackReadyState = shareTransceiver?.sender?.track?.readyState;\n        const activeShare = trackReadyState === LIVE;\n        const offersToSendData = shareDirection === SENDRECV;\n\n        if (activeShare && offersToSendData) {\n          return true;\n        }\n\n        return false;\n      },\n      configurable: true\n    });\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.callEvents = [];\n    /**\n     * There is a pending floor requested by the user\n     * @instance\n     * @type {floorGrantPending}\n     * @private\n     * @memberof Meeting\n     */\n    this.floorGrantPending = false;\n    /**\n     * The latest status of the dial in device (can be \"JOINED\", \"CONNECTED\", \"LEFT\",\n     * \"TRANSFERRING\", \"SUCCESS\" or \"\")\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialInDeviceStatus = PSTN_STATUS.UNKNOWN;\n    /**\n     * the url for provisioned device used to dial in\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialInUrl = '';\n    /**\n     * The latest status of the dial out device (can be \"JOINED\", \"CONNECTED\", \"LEFT\",\n     * \"TRANSFERRING\", \"SUCCESS\" or \"\")\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialOutDeviceStatus = PSTN_STATUS.UNKNOWN;\n    /**\n     * the url for provisioned device used to dial out\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialOutUrl = '';\n    /**\n     * @instance\n     * @type {StatsAnalyzer}\n     * @private\n     * @memberof Meeting\n     */\n    this.statsAnalyzer = null;\n    /**\n     * @instance\n     * @type {NetworkQualityMonitor}\n     * @private\n     * @memberof Meeting\n     */\n    this.networkQualityMonitor = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.networkStatus = null;\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.locusInfo = new LocusInfo(this.updateMeetingObject.bind(this), this.webex, this.id);\n    // We had to add listeners first before setting up the locus instance\n    /**\n     * @instance\n     * @type {Recording}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.recording = null;\n\n    /**\n     * Promise that exists if joining, and resolves upon method completion.\n     * @instance\n     * @type {Promise}\n     * @private\n     * @memberof Meeting\n     */\n    this.deferJoin = undefined;\n\n    /**\n     * Staus of websocket connection/mercury connection.\n     * @instance\n     * @type {Boolean}\n     * @private\n     * @memberof Meeting\n     */\n    this.hasWebsocketConnected = this.webex.internal.mercury.connected;\n\n    /**\n     * Last sent render information\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meeting\n     */\n    this.lastVideoLayoutInfo = {layoutType: undefined, main: undefined, content: undefined};\n\n    /**\n     * Queue of pending media updates requested by the app\n     * @instance\n     * @type {Array}\n     * @private\n     * @memberof Meeting\n     */\n    this.queuedMediaUpdates = [];\n\n    /**\n     * Meeting transcription object\n     * @instance\n     * @type {Transcription}\n     * @private\n     * @memberof Meeting\n     */\n    this.transcription = undefined;\n\n    /**\n     * Password status. If it's PASSWORD_STATUS.REQUIRED then verifyPassword() needs to be called\n     * with the correct password before calling join()\n     * @instance\n     * @type {PASSWORD_STATUS}\n     * @public\n     * @memberof Meeting\n     */\n    this.passwordStatus = PASSWORD_STATUS.UNKNOWN;\n\n    /**\n     * Information about required captcha. If null, then no captcha is required. status. If it's PASSWORD_STATUS.REQUIRED then verifyPassword() needs to be called\n     * with the correct password before calling join()\n     * @instance\n     * @type {Object}\n     * @property {string} captchaId captcha id\n     * @property {string} verificationImageURL Url of the captcha image\n     * @property {string} verificationAudioURL Url of the captcha audio file\n     * @property {string} refreshURL Url used for refreshing the captcha (don't use it directly, call refreshCaptcha() instead)\n     * @public\n     * @memberof Meeting\n     */\n    this.requiredCaptcha = null;\n\n    /**\n     * Indicates the reason for last failure to obtain meeting.meetingInfo. MEETING_INFO_FAILURE_REASON.NONE if meeting info was\n     * retrieved successfully\n     * @instance\n     * @type {MEETING_INFO_FAILURE_REASON}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingInfoFailureReason = undefined;\n\n    /**\n     * Repeating timer used to send keepAlives when in lobby\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.keepAliveTimerId = null;\n\n    this.setUpLocusInfoListeners();\n    this.locusInfo.init(attrs.locus ? attrs.locus : {});\n    this.hasJoinedOnce = false;\n  }\n\n  /**\n   * Fetches meeting information.\n   * @param {Object} options\n   * @param {String} [options.password] optional\n   * @param {String} [options.captchaCode] optional\n   * @public\n   * @memberof Meeting\n   * @returns {Promise}\n   */\n  async fetchMeetingInfo({\n    password = null, captchaCode = null\n  }) {\n    // when fetch meeting info is called directly by the client, we want to clear out the random timer for sdk to do it\n    if (this.fetchMeetingInfoTimeoutId) {\n      clearTimeout(this.fetchMeetingInfoTimeoutId);\n      this.fetchMeetingInfoTimeoutId = undefined;\n    }\n    if (captchaCode && !this.requiredCaptcha) {\n      return Promise.reject(new Error('fetchMeetingInfo() called with captchaCode when captcha was not required'));\n    }\n    if (password && (this.passwordStatus !== PASSWORD_STATUS.REQUIRED && this.passwordStatus !== PASSWORD_STATUS.UNKNOWN)) {\n      return Promise.reject(new Error('fetchMeetingInfo() called with password when password was not required'));\n    }\n\n    try {\n      const captchaInfo = captchaCode ? {code: captchaCode, id: this.requiredCaptcha.captchaId} : null;\n\n      const info = await this.attrs.meetingInfoProvider.fetchMeetingInfo(this.destination, this.destinationType, password, captchaInfo);\n\n      this.parseMeetingInfo(info, this.destination);\n      this.meetingInfo = info ? info.body : null;\n      this.meetingInfoFailureReason = MEETING_INFO_FAILURE_REASON.NONE;\n      this.requiredCaptcha = null;\n      if ((this.passwordStatus === PASSWORD_STATUS.REQUIRED) || (this.passwordStatus === PASSWORD_STATUS.VERIFIED)) {\n        this.passwordStatus = PASSWORD_STATUS.VERIFIED;\n      }\n      else {\n        this.passwordStatus = PASSWORD_STATUS.NOT_REQUIRED;\n      }\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meetings',\n          function: 'fetchMeetingInfo'\n        },\n        EVENT_TRIGGERS.MEETING_INFO_AVAILABLE\n      );\n\n      return Promise.resolve();\n    }\n    catch (err) {\n      if (err instanceof MeetingInfoV2PasswordError) {\n        LoggerProxy.logger.info(`Meeting:index#fetchMeetingInfo --> Info Unable to fetch meeting info for ${this.destination} - password required (code=${err?.body?.code}).`);\n\n        // when wbxappapi requires password it still populates partial meeting info in the response\n        if (err.meetingInfo) {\n          this.meetingInfo = err.meetingInfo;\n          this.meetingNumber = err.meetingInfo.meetingNumber;\n        }\n\n        this.passwordStatus = PASSWORD_STATUS.REQUIRED;\n        this.meetingInfoFailureReason = MEETING_INFO_FAILURE_REASON.WRONG_PASSWORD;\n        if (this.requiredCaptcha) {\n          // this is a workaround for captcha service bug, see WEBEX-224862\n          await this.refreshCaptcha();\n        }\n\n        throw (new PasswordError());\n      }\n      else if (err instanceof MeetingInfoV2CaptchaError) {\n        LoggerProxy.logger.info(`Meeting:index#fetchMeetingInfo --> Info Unable to fetch meeting info for ${this.destination} - captcha required (code=${err?.body?.code}).`);\n\n        this.meetingInfoFailureReason = (this.requiredCaptcha) ?\n          MEETING_INFO_FAILURE_REASON.WRONG_CAPTCHA :\n          MEETING_INFO_FAILURE_REASON.WRONG_PASSWORD;\n\n        if (err.isPasswordRequired) {\n          this.passwordStatus = PASSWORD_STATUS.REQUIRED;\n        }\n\n        this.requiredCaptcha = err.captchaInfo;\n        throw (new CaptchaError());\n      }\n      else {\n        this.meetingInfoFailureReason = MEETING_INFO_FAILURE_REASON.OTHER;\n        throw (err);\n      }\n    }\n  }\n\n  /**\n   * Checks if the supplied password/host key is correct. It returns a promise with information whether the\n   * password and captcha code were correct or not.\n   * @param {String} password - this can be either a password or a host key, can be undefined if only captcha was required\n   * @param {String} captchaCode - can be undefined if captcha was not required by the server\n   * @public\n   * @memberof Meeting\n   * @returns {Promise<{isPasswordValid: boolean, requiredCaptcha: boolean, failureReason: MEETING_INFO_FAILURE_REASON}>}\n   */\n  verifyPassword(password, captchaCode) {\n    return this.fetchMeetingInfo({\n      password, captchaCode\n    })\n      .then(() => {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.VERIFY_PASSWORD_SUCCESS\n        );\n\n        return {isPasswordValid: true, requiredCaptcha: null, failureReason: MEETING_INFO_FAILURE_REASON.NONE};\n      })\n      .catch((error) => {\n        if (error instanceof PasswordError || error instanceof CaptchaError) {\n          return {\n            isPasswordValid: this.passwordStatus === PASSWORD_STATUS.VERIFIED,\n            requiredCaptcha: this.requiredCaptcha,\n            failureReason: this.meetingInfoFailureReason\n          };\n        }\n        throw (error);\n      });\n  }\n\n  /**\n   * Refreshes the captcha. As a result the meeting will have new captcha id, image and audio.\n   * If the refresh operation fails, meeting remains with the old captcha properties.\n   * @public\n   * @memberof Meeting\n   * @returns {Promise}\n   */\n  refreshCaptcha() {\n    if (!this.requiredCaptcha) {\n      return Promise.reject(new Error('There is no captcha to refresh'));\n    }\n\n    // in order to get fully populated uris for captcha audio and image in response to refresh captcha request\n    // we have to pass the wbxappapi hostname as the siteFullName parameter\n    const {hostname} = new URL(this.requiredCaptcha.refreshURL);\n\n    return this.meetingRequest.refreshCaptcha({\n      captchaRefreshUrl: `${this.requiredCaptcha.refreshURL}&siteFullName=${hostname}`,\n      captchaId: this.requiredCaptcha.captchaId\n    })\n      .then((response) => {\n        this.requiredCaptcha.captchaId = response.body.captchaID;\n        this.requiredCaptcha.verificationImageURL = response.body.verificationImageURL;\n        this.requiredCaptcha.verificationAudioURL = response.body.verificationAudioURL;\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error(`Meeting:index#refreshCaptcha --> Error Unable to refresh captcha for ${this.destination} - ${error}`);\n        throw (error);\n      });\n  }\n\n  /**\n   * Proxy function for all the listener set ups\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoListeners() {\n    // meeting update listeners\n    this.setUpLocusInfoSelfListener();\n    this.setUpLocusInfoMeetingListener();\n    // members update listeners\n    this.setUpLocusFullStateListener();\n    this.setUpLocusUrlListener();\n    this.setUpLocusHostListener();\n    this.setUpLocusSelfListener();\n    this.setUpLocusParticipantsListener();\n    this.setupLocusControlsListener();\n    this.setUpLocusMediaSharesListener();\n    this.setUpLocusEmbeddedAppsListener();\n    this.setUpLocusInfoMeetingInfoListener();\n    this.setUpLocusInfoAssignHostListener();\n    this.setUpLocusInfoMediaInactiveListener();\n  }\n\n\n  /**\n   * Set up the locus info listener for meetings disconnected due to inactivity\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMediaInactiveListener() {\n    // User gets kicked off the meeting due to inactivity or user did a refresh\n    this.locusInfo.on(EVENTS.DISCONNECT_DUE_TO_INACTIVITY, (res) => {\n      // https:// jira-eng-gpk2.cisco.com/jira/browse/SPARK-240520\n      // TODO: send custom parameter explaining why the inactivity happened\n      // refresh , no media or network got dsconnected or something else\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.DISCONNECT_DUE_TO_INACTIVITY,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n\n      // Upload logs on media inactivity\n      // Normally media should not be inactive\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoMediaInactiveListener'\n        },\n        EVENTS.REQUEST_UPLOAD_LOGS,\n        this\n      );\n\n      LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMediaInactiveListener --> Meeting disconnected due to inactivity: ${res.reason}`);\n\n      if (this.config.reconnection.autoRejoin) {\n        this.reconnect();\n      }\n      else {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMediaInactiveListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LEFT,\n          res.reason\n        );\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info listener for assign host permissions on a meeting\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoAssignHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST, (payload) => {\n      const changed = this.inMeetingActions.set({\n        canAssignHost: payload.canAssignHost,\n      });\n\n      if (changed) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoAssignHostListener'\n          },\n          EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n          this.inMeetingActions.get()\n        );\n      }\n    });\n  }\n\n  /**\n   * Set up the internal locus info full state object listener\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusFullStateListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusFullStateListener'\n        },\n        EVENT_TRIGGERS.MEETING_STATE_CHANGE,\n        {\n          payload\n        }\n      );\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE, (payload) => {\n      this.members.locusFullStateTypeUpdate(payload);\n    });\n  }\n\n  /**\n   * get the metrics payload pre\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @param {Array} options.mediaConnections\n   * @param {Object} options.errors\n   * @returns {Object}\n   * @memberof Meeting\n   */\n  getAnalyzerMetricsPrePayload(options) {\n    if (options) {\n      const {\n        event,\n        trackingId,\n        mediaConnections\n      } = options;\n\n      if (!event) {\n        LoggerProxy.logger.error('Meeting:index#getAnalyzerMetricsPrePayload --> Error [Call Analyzer Event', event || '', `]: invalid identifers or event type! ${this.correlationId}`);\n\n        return null;\n      }\n\n      const identifiers = {\n        correlationId: this.correlationId,\n        userId: this.userId,\n        deviceId: this.deviceUrl,\n        orgId: this.orgId,\n        locusUrl: this.webex.internal.services.get('locus')\n      };\n\n      if (this.locusUrl && this.locusInfo.fullState) {\n        identifiers.locusUrl = this.locusUrl;\n        identifiers.locusId = this.locusUrl && this.locusUrl.split('/').pop();\n        identifiers.locusStartTime = this.locusInfo.fullState && this.locusInfo.fullState.lastActive;\n      }\n\n      // Check if mediaConnections has been passed in or else use this.mediaConnections\n      if (mediaConnections) {\n        identifiers.mediaAgentAlias = mediaConnections?.[0].mediaAgentAlias;\n        identifiers.mediaAgentGroupId = mediaConnections?.[0].mediaAgentGroupId;\n        identifiers.mediaAgentCluster = mediaConnections?.[0].mediaAgentCluster;\n      }\n      else if (this.mediaConnections) {\n        identifiers.mediaAgentAlias = this.mediaConnections?.[0].mediaAgentAlias;\n        identifiers.mediaAgentGroupId = this.mediaConnections?.[0].mediaAgentGroupId;\n        identifiers.mediaAgentCluster = this.mediaConnections?.[0].mediaAgentCluster;\n      }\n\n      if (options.trackingId) {\n        identifiers.trackingId = trackingId;\n      }\n\n      let payload = {};\n\n      const joinRespRxStartAudio = this.getSetupDelayDuration('audio');\n\n      if (joinRespRxStartAudio) {\n        options.audioSetupDelay = {\n          joinRespRxStart: joinRespRxStartAudio\n        };\n      }\n\n      const joinRespRxStartVideo = this.getSetupDelayDuration('video');\n\n      if (joinRespRxStartAudio) {\n        options.videoSetupDelay = {\n          joinRespRxStart: joinRespRxStartVideo\n        };\n      }\n\n      const joinRespTxStartAudio = this.getSendingMediaDelayDuration('audio');\n\n      if (joinRespTxStartAudio) {\n        options.audioSetupDelay = {\n          ...options.audioSetupDelay,\n          joinRespTxStart: joinRespTxStartAudio\n        };\n      }\n\n      const joinRespTxStartVideo = this.getSendingMediaDelayDuration('video');\n\n      if (joinRespTxStartVideo) {\n        options.videoSetupDelay = {\n          ...options.videoSetupDelay,\n          joinRespTxStart: joinRespTxStartVideo\n        };\n      }\n\n      const localSDPGenRemoteSDPRecv = this.getLocalSDPGenRemoteSDPRecvDelay();\n\n      if (localSDPGenRemoteSDPRecv) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          localSDPGenRemoteSDPRecv\n        };\n      }\n\n      const callInitiateJoinReq = this.getCallInitiateJoinReq();\n\n      if (callInitiateJoinReq) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          callInitiateJoinReq\n        };\n      }\n\n      const joinReqResp = this.getJoinReqResp();\n\n      if (joinReqResp) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          joinReqResp\n        };\n      }\n\n      const getTotalJmt = this.getTotalJmt();\n\n      if (getTotalJmt) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          getTotalJmt\n        };\n      }\n\n      if (options.type === MQA_STATS.CA_TYPE) {\n        payload = Metrics.initMediaPayload(options.event, identifiers, options);\n      }\n      else {\n        payload = Metrics.initPayload(options.event, identifiers, options);\n      }\n\n      return payload;\n    }\n\n    return null;\n  }\n\n  /**\n   * Send the metrics to call-analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @param {Object} options.errors\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendCallAnalyzerMetrics(options) {\n    const payload = this.getAnalyzerMetricsPrePayload({\n      ...pick(this.config.metrics, ['clientType', 'subClientType']),\n      ...options\n    });\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * Send the metrics to Media Quality Analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendMediaQualityAnalyzerMetrics(options) {\n    const payload = this.getAnalyzerMetricsPrePayload({\n      type: MQA_STATS.CA_TYPE,\n      ...pick(this.config.metrics, ['clientType', 'subClientType']),\n      ...options\n    });\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * sets the network status on meeting object\n   * @param {String} networkStatus\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  setNetworkStatus(networkStatus) {\n    if (networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_DISCONNECTED,\n      );\n    }\n    else if (networkStatus === NETWORK_STATUS.CONNECTED && this.networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_CONNECTED,\n      );\n    }\n\n    this.networkStatus = networkStatus;\n  }\n\n  /**\n   * Set up the locus info self listener\n   * update self value for members and updates the member\n   * notifies consumer with members:self:update {activeSelfId endedSelfId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusSelfListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_SELF, (payload) => {\n      this.members.locusSelfUpdate(payload);\n      this.pstnUpdate(payload);\n\n      // If user moved to a JOINED state and there is a pending floor grant trigger it\n      if (this.floorGrantPending && payload.newSelf.state === MEETING_STATE.STATES.JOINED) {\n        this.share()\n          .then(() => { this.floorGrantPending = false; });\n      }\n    });\n  }\n\n  /**\n   * Notify any changes on the pstn devices\n   * @param {Object} payload\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  pstnUpdate(payload) {\n    if (this.locusInfo.self) {\n      const dialInPstnDevice = payload.newSelf?.pstnDevices.find((device) => device.url === this.dialInUrl);\n      const dialOutPstnDevice = payload.newSelf?.pstnDevices.find((device) => device.url === this.dialOutUrl);\n      let changed = false;\n\n      if (dialInPstnDevice) {\n        const newStatus = dialInPstnDevice.dialingStatus ?? dialInPstnDevice.state;\n\n        if (newStatus !== this.dialInDeviceStatus) {\n          this.dialInDeviceStatus = newStatus;\n          changed = true;\n        }\n      }\n\n      if (dialOutPstnDevice) {\n        const newStatus = dialOutPstnDevice.dialingStatus ?? dialOutPstnDevice.state;\n\n        if (newStatus !== this.dialOutDeviceStatus) {\n          this.dialOutDeviceStatus = newStatus;\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_PHONE_AUDIO_UPDATE,\n          {\n            dialIn: {\n              status: this.dialInDeviceStatus,\n              attendeeId: dialInPstnDevice?.attendeeId\n            },\n            dialOut: {\n              status: this.dialOutDeviceStatus,\n              attendeeId: dialOutPstnDevice?.attendeeId\n            }\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * Set up the locus info host listener\n   * update host value for members and updates the member\n   * notifies consumer with members:host:update: {activeHostId, endedHostId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_HOST, (payload) => {\n      this.members.locusHostUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info participants update listener\n   * update members collection value for members\n   * notifies consumer with members:update\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusParticipantsListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS, (payload) => {\n      this.members.locusParticipantsUpdate(payload);\n    });\n  }\n\n\n  /**\n   * Set up the locus info recording update listener\n   * update recording value for the meeting\n   * notifies consumer with:\n   *  meeting:recording:started\n   *  meeting:recording:stopped\n   *  meeting:recording:paused\n   *  meeting:recording:resumed\n   *\n   * Set up the locus info meeeting container listener\n   * update meetingContainerUrl value for the meeting\n   * notifies consumer with:\n   *  meeting:meetingContainer:update\n   *\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setupLocusControlsListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n      ({state, modifiedBy, lastModified}) => {\n        let event;\n\n        switch (state) {\n          case RECORDING_STATE.RECORDING:\n            event = EVENT_TRIGGERS.MEETING_STARTED_RECORDING;\n            break;\n          case RECORDING_STATE.IDLE:\n            event = EVENT_TRIGGERS.MEETING_STOPPED_RECORDING;\n            break;\n          case RECORDING_STATE.PAUSED:\n            event = EVENT_TRIGGERS.MEETING_PAUSED_RECORDING;\n            break;\n          case RECORDING_STATE.RESUMED:\n            event = EVENT_TRIGGERS.MEETING_RESUMED_RECORDING;\n            break;\n          default:\n            event = null;\n            break;\n        }\n\n        // `RESUMED` state should be converted to `RECORDING` after triggering the event\n        this.recording = {\n          state: state === RECORDING_STATE.RESUMED ? RECORDING_STATE.RECORDING : state,\n          modifiedBy,\n          lastModified\n        };\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener'\n          },\n          event,\n          this.recording\n        );\n      });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_MEETING_CONTAINER_UPDATED,\n      ({meetingContainerUrl}) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener'\n          },\n          EVENT_TRIGGERS.MEETING_MEETING_CONTAINER_UPDATE,\n          {meetingContainerUrl}\n        );\n      });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_MEETING_TRANSCRIBE_UPDATED,\n      ({caption, transcribing}) => {\n        if (transcribing && this.transcription && this.config.receiveTranscription) {\n          this.receiveTranscription();\n        }\n        else if (!transcribing && this.transcription) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setupLocusControlsListener'\n            },\n            EVENT_TRIGGERS.MEETING_STOPPED_RECEIVING_TRANSCRIPTION,\n            {caption, transcribing}\n          );\n        }\n      });\n  }\n\n  /**\n   * Set up the locus info media shares listener\n   * update content and whiteboard sharing id value for members, and updates the member\n   * notifies consumer with members:content:update {activeContentSharingId, endedContentSharingId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusMediaSharesListener() {\n    // Will get triggered on local and remote share\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES, (payload) => {\n      const {content: contentShare, whiteboard: whiteboardShare} = payload.current;\n      const previousContentShare = payload.previous?.content;\n      const previousWhiteboardShare = payload.previous?.whiteboard;\n\n      if (\n        (contentShare.beneficiaryId === previousContentShare?.beneficiaryId &&\n          contentShare.disposition === previousContentShare?.disposition) &&\n        (whiteboardShare.beneficiaryId === previousWhiteboardShare?.beneficiaryId &&\n          whiteboardShare.disposition === previousWhiteboardShare?.disposition &&\n          whiteboardShare.resourceUrl === previousWhiteboardShare?.resourceUrl)\n      ) {\n        // nothing changed, so ignore\n        // (this happens when we steal presentation from remote)\n        return;\n      }\n\n      let newShareStatus = this.shareStatus;\n\n      // REMOTE - check if remote started sharing\n      if (\n        this.selfId !== contentShare.beneficiaryId &&\n        contentShare.disposition === FLOOR_ACTION.GRANTED\n      ) {\n        // CONTENT - sharing content remote\n        newShareStatus = SHARE_STATUS.REMOTE_SHARE_ACTIVE;\n      }\n      // LOCAL - check if we started sharing content\n      else if (\n        this.selfId === contentShare.beneficiaryId &&\n        contentShare.disposition === FLOOR_ACTION.GRANTED\n      ) {\n        if (this.mediaProperties.shareTrack?.readyState === 'ended') {\n          this.stopShare({\n            skipSignalingCheck: true\n          })\n            .catch((error) => {\n              LoggerProxy.logger.log('Meeting:index#setUpLocusMediaSharesListener --> Error stopping share: ', error);\n            });\n        }\n        else {\n          // CONTENT - sharing content local\n          newShareStatus = SHARE_STATUS.LOCAL_SHARE_ACTIVE;\n        }\n      }\n      // If we did not hit the cases above, no one is sharng content, so we check if we are sharing whiteboard\n      // There is no concept of local/remote share for whiteboard\n      // It does not matter who requested to share the whiteboard, everyone gets the same view\n      else if (whiteboardShare.disposition === FLOOR_ACTION.GRANTED) {\n        // WHITEBOARD - sharing whiteboard\n        newShareStatus = SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE;\n      }\n      // or if content share is either released or null and whiteboard share is either released or null, no one is sharing\n      else if (\n        (previousContentShare &&\n          (contentShare.disposition === FLOOR_ACTION.RELEASED) || (contentShare.disposition === null)) &&\n        (previousWhiteboardShare &&\n          (whiteboardShare.disposition === FLOOR_ACTION.RELEASED) || (whiteboardShare.disposition === null))\n      ) {\n        newShareStatus = SHARE_STATUS.NO_SHARE;\n      }\n\n      if (newShareStatus !== this.shareStatus) {\n        const oldShareStatus = this.shareStatus;\n\n        // update our state before we send out any notifications\n        this.shareStatus = newShareStatus;\n\n        // send out \"stop\" notifications for the old state\n        switch (oldShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meetings/index',\n                function: 'remoteShare'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_REMOTE\n            );\n            break;\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'stopFloorRequest'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n              {\n                reason: SHARE_STOPPED_REASON.SELF_STOPPED\n              }\n            );\n            break;\n\n          case SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'stopWhiteboardShare'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_WHITEBOARD\n            );\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n            // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        // send \"start\" notifications for the new state\n        switch (newShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE: {\n            const sendStartedSharingRemote = () => {\n              Trigger.trigger(\n                this,\n                {\n                  file: 'meetings/index',\n                  function: 'remoteShare'\n                },\n                EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n                {\n                  memberId: contentShare.beneficiaryId\n                }\n              );\n            };\n\n            // if a remote participant is stealing the presentation from us\n            if (!this.mediaProperties.mediaDirection?.sendShare || oldShareStatus === SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE) {\n              sendStartedSharingRemote();\n            }\n            else {\n              this.updateShare({\n                sendShare: false,\n                receiveShare: this.mediaProperties.mediaDirection.receiveShare\n              })\n                .finally(() => {\n                  sendStartedSharingRemote();\n                });\n            }\n            break;\n          }\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'share'\n              },\n              EVENT_TRIGGERS.MEETING_STARTED_SHARING_LOCAL,\n            );\n            Metrics.postEvent({event: eventType.LOCAL_SHARE_FLOOR_GRANTED, meeting: this});\n            break;\n\n          case SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'startWhiteboardShare'\n              },\n              EVENT_TRIGGERS.MEETING_STARTED_SHARING_WHITEBOARD,\n              {\n                resourceUrl: whiteboardShare.resourceUrl,\n                memberId: whiteboardShare.beneficiaryId\n              }\n            );\n            Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_FLOOR_GRANTED, meeting: this});\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n          // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        this.members.locusMediaSharesUpdate(payload);\n      }\n      else if (newShareStatus === SHARE_STATUS.REMOTE_SHARE_ACTIVE) {\n        // if we got here, then some remote participant has stolen\n        // the presentation from another remote participant\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings/index',\n            function: 'remoteShare'\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n          {\n            memberId: contentShare.beneficiaryId\n          }\n        );\n        this.members.locusMediaSharesUpdate(payload);\n      }\n      else if (newShareStatus === SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE) {\n        // if we got here, then some remote participant has stolen\n        // the presentation from another remote participant\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'startWhiteboardShare'\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_WHITEBOARD,\n          {\n            resourceUrl: whiteboardShare.resourceUrl,\n            memberId: whiteboardShare.beneficiaryId\n          }\n        );\n        Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_FLOOR_GRANTED, meeting: this});\n        this.members.locusMediaSharesUpdate(payload);\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info url listener\n   * update locus_url value for members\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusUrlListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_URL, (payload) => {\n      this.members.locusUrlUpdate(payload);\n      this.locusUrl = payload;\n      this.locusId = this.locusUrl?.split('/').pop();\n    });\n  }\n\n  /**\n   * Set up the locus info meeting info listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  setUpLocusInfoMeetingInfoListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_LOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_LOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_UNLOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_UNLOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_INFO_UPDATED, (payload) => {\n      if (payload && payload.info) {\n        const changed = this.inMeetingActions.set({\n          canInviteNewParticipants: MeetingUtil.canInviteNewParticipants(payload.info.userDisplayHints),\n          canAdmitParticipant: MeetingUtil.canAdmitParticipant(payload.info.userDisplayHints),\n          canLock: MeetingUtil.canUserLock(payload.info.userDisplayHints),\n          canUnlock: MeetingUtil.canUserUnlock(payload.info.userDisplayHints),\n          canStartRecording: MeetingUtil.canUserRecord(payload.info.userDisplayHints),\n          canStopRecording: MeetingUtil.canUserStop(payload.info.userDisplayHints),\n          canPauseRecording: MeetingUtil.canUserPause(payload.info.userDisplayHints),\n          canResumeRecording: MeetingUtil.canUserResume(payload.info.userDisplayHints),\n          canRaiseHand: MeetingUtil.canUserRaiseHand(payload.info.userDisplayHints),\n          canLowerAllHands: MeetingUtil.canUserLowerAllHands(payload.info.userDisplayHints),\n          canLowerSomeoneElsesHand: MeetingUtil.canUserLowerSomeoneElsesHand(payload.info.userDisplayHints),\n          canEnableClosedCaption: MeetingUtil.canEnableClosedCaption(payload.info.userDisplayHints),\n          canStartTranscribing: MeetingUtil.canStartTranscribing(payload.info.userDisplayHints),\n          canStopTranscribing: MeetingUtil.canStopTranscribing(payload.info.userDisplayHints),\n          isClosedCaptionActive: MeetingUtil.isClosedCaptionActive(payload.info.userDisplayHints),\n          isWebexAssistantActive: MeetingUtil.isWebexAssistantActive(payload.info.userDisplayHints),\n          canViewCaptionPanel: MeetingUtil.canViewCaptionPanel(payload.info.userDisplayHints),\n          isRealTimeTranslationEnabled: MeetingUtil.isRealTimeTranslationEnabled(payload.info.userDisplayHints),\n          canSelectSpokenLanguages: MeetingUtil.canSelectSpokenLanguages(payload.info.userDisplayHints),\n          waitingForOthersToJoin: MeetingUtil.waitingForOthersToJoin(payload.info.userDisplayHints),\n        });\n\n        if (changed) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            this.inMeetingActions.get()\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info embedded apps listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  setUpLocusEmbeddedAppsListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.EMBEDDED_APPS_UPDATED, (embeddedApps) => {\n      if (embeddedApps) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusEmbeddedAppsListener'\n          },\n          EVENT_TRIGGERS.MEETING_EMBEDDED_APPS_UPDATE,\n          embeddedApps\n        );\n      }\n    });\n  }\n\n  /**\n   * Internal function to listen to the self object changes\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoSelfListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUIRED, (payload) => {\n      if (this.audio) {\n        this.audio.handleServerLocalUnmuteRequired(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_UNMUTED_BY_OTHERS,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_REMOTE_MUTE_STATUS_UPDATED, (payload) => {\n      if (payload) {\n        if (this.audio) {\n          this.audio.handleServerRemoteMuteUpdate(payload.muted, payload.unmuteAllowed);\n        }\n        // with \"mute on entry\" server will send us remote mute even if we don't have media configured,\n        // so if being muted by others, always send the notification,\n        // but if being unmuted, only send it if we are also locally unmuted\n        if (payload.muted || (!this.audio?.isMuted())) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoSelfListener'\n            },\n            payload.muted ? EVENT_TRIGGERS.MEETING_SELF_MUTED_BY_OTHERS : EVENT_TRIGGERS.MEETING_SELF_UNMUTED_BY_OTHERS,\n            {\n              payload\n            },\n          );\n        }\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUESTED, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoSelfListener'\n        },\n        EVENT_TRIGGERS.MEETING_SELF_REQUESTED_TO_UNMUTE,\n        {\n          payload\n        }\n      );\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST, (payload) => {\n      if (payload) {\n        this.startKeepAlive();\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LOBBY_WAITING,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_ENTERED,\n          meeting: this\n        });\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST, (payload) => {\n      this.stopKeepAlive();\n\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_GUEST_ADMITTED,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_EXITED,\n          meeting: this\n        });\n      }\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_INACTIVITY, () => {\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.MEETING_MEDIA_INACTIVE,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n      this.reconnect();\n    });\n\n    // There is two stats for mute one is the actual media being sent or received\n    // The second on is if the audio is muted, we need to tell the statsAnalyzer when\n    // the audio is muted or the user is not willing to send media\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_STATUS_CHANGE, (status) => {\n      if (this.statsAnalyzer) {\n        this.statsAnalyzer.updateMediaStatus({\n          actual: status,\n          expected: {\n            // We need to check what should be the actual direction of media\n            sendAudio: this.mediaProperties.mediaDirection?.sendAudio && !this.audio?.isMuted(),\n            sendVideo: this.mediaProperties.mediaDirection?.sendVideo && !this.video?.isMuted(),\n            sendShare: this.mediaProperties.mediaDirection?.sendShare,\n            receiveAudio: this.mediaProperties.mediaDirection?.receiveAudio,\n            receiveVideo: this.mediaProperties.mediaDirection?.receiveVideo,\n            receiveShare: this.mediaProperties.mediaDirection?.receiveShare\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Add LocusInfo nested object listeners (from child to parent)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMeetingListener() {\n    this.locusInfo.on(EVENTS.REMOTE_RESPONSE, (payload) => {\n      this.meetingFiniteStateMachine.remote(payload);\n\n      if (payload.remoteDeclined) {\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Attempting to leave meeting.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n    });\n    this.locusInfo.on(EVENTS.DESTROY_MEETING, (payload) => {\n      // if self state is NOT left\n\n      // TODO: Handle sharing and wireless sharing when meeting end\n      if (this.wirelessShare) {\n        if (this.mediaProperties.shareTrack) {\n          this.mediaProperties.shareTrack.onended = null;\n          this.mediaProperties.shareTrack.stop();\n        }\n      }\n      // when multiple WEB deviceType join with same user\n      // and some of the devices are joined and some are left\n      // when your own device is still connected you want to leave and destroy\n      // else you want to just destroy\n      // this looks odd because when it leaves it should destroy, but we get a\n      // leave response and we should destroy it on the next event loop\n      // the leave response gets parsed and we decide if we want to destroy the meeting\n      // the first time we just leave it, the second time it comes it destroys it from the collection\n      if (payload.shouldLeave) {\n        // TODO:  We should do cleaning of meeting object if the shouldLeave: false because there might be meeting object which we are not cleaning\n\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.warn('Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. The meeting has been left, but has not been destroyed, you should see a later event for leave.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n      else {\n        LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> MEETING_REMOVED_REASON', payload.reason);\n\n        MeetingUtil.cleanUp(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingListener'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: payload.reason,\n            meetingId: this.id\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Set meeting values rather than events\n   * @param {Object} object\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   * // TODO: is this function necessary?\n   */\n  updateMeetingObject(object) {\n    // Validate if these are valid meeting object property\n    // TODO: add a check to make sure the value passed in the constructor\n    // is not changed by any delta event\n    if (object && Object.keys(object).length) {\n      Object.keys(object).forEach((key) => {\n        this[key] = object[key];\n      });\n    }\n  }\n\n  /**\n   * Invite a guest to the call that isn't normally part of this call\n   * @param {Object} invitee\n   * @param {String} invitee.emailAddress\n   * @param {String} invitee.email\n   * @param {String} invitee.phoneNumber\n   * @param {Boolean} [alertIfActive]\n   * @returns {Promise} see #members.addMember\n   * @public\n   * @memberof Meeting\n   */\n  invite(invitee, alertIfActive = true) {\n    return this.members.addMember(invitee, alertIfActive);\n  }\n\n  /**\n   * Cancel an outgoing phone call invitation made during a meeting\n   * @param {Object} invitee\n   * @param {String} invitee.phoneNumber\n   * @returns {Promise} see #members.cancelPhoneInvite\n   * @public\n   * @memberof Meeting\n   */\n  cancelPhoneInvite(invitee) {\n    return this.members.cancelPhoneInvite(invitee);\n  }\n\n  /**\n   * Admit the guest(s) to the call once they are waiting\n   * @param {Array} memberIds\n   * @returns {Promise} see #members.admitMembers\n   * @public\n   * @memberof Meeting\n   */\n  admit(memberIds) {\n    return this.members.admitMembers(memberIds);\n  }\n\n  /**\n   * Remove the member from the meeting, boot them\n   * @param {String} memberId\n   * @returns {Promise} see #members.removeMember\n   * @public\n   * @memberof Meeting\n   */\n  remove(memberId) {\n    return this.members.removeMember(memberId);\n  }\n\n  /**\n   * Mute another member from the meeting\n   * @param {String} memberId\n   * @param {Boolean} mute\n   * @returns {Promise} see #members.muteMember\n   * @public\n   * @memberof Meeting\n   */\n  mute(memberId, mute = true) {\n    return this.members.muteMember(memberId, mute);\n  }\n\n  /**\n   * Transfer the moderator role to another eligible member\n   * @param {String} memberId\n   * @param {Boolean} moderator\n   * @returns {Promise} see #members.transferHostToMember\n   * @public\n   * @memberof Meeting\n   */\n  transfer(memberId, moderator = true) {\n    return this.members.transferHostToMember(memberId, moderator);\n  }\n\n  /**\n   * Reference to the Members object\n   * @returns {Members}\n   * @public\n   * @memberof Meeting\n   */\n  getMembers() {\n    return this.members;\n  }\n\n  /**\n   * Truthy when a meeting has an audio connection established\n   * @returns {Boolean}  true if meeting audio is connected otherwise false\n   * @public\n   * @memberof Meeting\n   */\n  isAudioConnected() {\n    return !!this.audio;\n  }\n\n  /**\n   * Convenience function to tell whether a meeting is muted\n   * @returns {Boolean} if meeting audio muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isAudioMuted() {\n    return this.audio && this.audio.isMuted();\n  }\n\n  /**\n   * Convenience function to tell if the end user last changed the audio state\n   * @returns {Boolean} if audio was manipulated by the end user\n   * @public\n   * @memberof Meeting\n   */\n  isAudioSelf() {\n    return this.audio && this.audio.isSelf();\n  }\n\n  /**\n   * Truthy when a meeting has a video connection established\n   * @returns {Boolean} true if meeting video connected otherwise false\n   * @public\n   * @memberof Meeting\n   */\n  isVideoConnected() {\n    return !!this.video;\n  }\n\n  /**\n   * Convenience function to tell whether video is muted\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoMuted() {\n    return this.video && this.video.isMuted();\n  }\n\n  /**\n   * Convenience function to tell whether the end user changed the video state\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoSelf() {\n    return this.video && this.video.isSelf();\n  }\n\n  /**\n   * Sets the meeting info on the class instance\n   * @param {Object} meetingInfo\n   * @param {Object} meetingInfo.body\n   * @param {String} meetingInfo.body.conversationUrl\n   * @param {String} meetingInfo.body.locusUrl\n   * @param {String} meetingInfo.body.sipUri\n   * @param {Object} meetingInfo.body.owner\n   * @param {Object | String} destination locus object with meeting data or destination string (sip url, meeting link, etc)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseMeetingInfo(meetingInfo, destination = null) {\n    const webexMeetingInfo = meetingInfo?.body;\n    // We try to use as much info from Locus meeting object, stored in destination\n\n    let locusMeetingObject;\n\n    if (destination) {\n      locusMeetingObject = typeof destination === 'object' ? destination : undefined;\n    }\n\n    // MeetingInfo will be undefined for 1:1 calls\n    if (locusMeetingObject || (webexMeetingInfo && !(meetingInfo?.errors && meetingInfo?.errors.length > 0))) {\n      this.conversationUrl = locusMeetingObject?.conversationUrl || webexMeetingInfo?.conversationUrl || this.conversationUrl;\n      this.locusUrl = locusMeetingObject?.url || webexMeetingInfo?.locusUrl || this.locusUrl;\n      this.setSipUri(this.config.experimental.enableUnifiedMeetings ? locusMeetingObject?.info.sipUri || webexMeetingInfo?.sipUrl : locusMeetingObject?.info.sipUri || webexMeetingInfo?.sipMeetingUri || this.sipUri);\n      if (this.config.experimental.enableUnifiedMeetings) {\n        this.meetingNumber = locusMeetingObject?.info.webExMeetingId || webexMeetingInfo?.meetingNumber;\n        this.meetingJoinUrl = webexMeetingInfo?.meetingJoinUrl;\n      }\n      this.owner = locusMeetingObject?.info.owner || webexMeetingInfo?.owner || webexMeetingInfo?.hostId || this.owner;\n      this.permissionToken = webexMeetingInfo?.permissionToken;\n    }\n  }\n\n  /**\n   * Sets the first locus info on the class instance\n   * @param {Object} locus\n   * @param {String} locus.url\n   * @param {Array} locus.participants\n   * @param {Object} locus.self\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseLocus(locus) {\n    if (locus) {\n      this.locusUrl = locus.url;\n      // TODO: move this to parse participants module\n      this.setLocus(locus);\n\n      // check if we can extract this info from partner\n      // Parsing of locus object must be finished at this state\n      if (locus.participants && locus.self) {\n        this.partner = MeetingUtil.getLocusPartner(locus.participants, locus.self);\n      }\n\n      // For webex meeting the sipUrl gets updated in info parser\n      if (!this.sipUri && this.partner && this.type === _CALL_) {\n        this.setSipUri(this.partner.person.sipUrl || this.partner.person.id);\n      }\n    }\n  }\n\n  /**\n   * Sets the sip uri on the class instance\n   * uses meeting info as precedence\n   * @param {String} sipUri\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setSipUri(sipUri) {\n    // This can be tel no, device id or a sip uri, user Id\n    this.sipUri = sipUri;\n  }\n\n  /**\n   * Set the roap seq on the class instance\n   * @param {Number} seq\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setRoapSeq(seq) {\n    if (seq >= 0) {\n      this.roapSeq = seq;\n    }\n  }\n\n  /**\n   * Set the locus info the class instance\n   * @param {Object} locus\n   * @param {Array} locus.mediaConnections\n   * @param {String} locus.locusUrl\n   * @param {String} locus.locusId\n   * @param {String} locus.mediaId\n   * @param {Object} locus.host\n   * @todo change name to genertic parser\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocus(locus) {\n    const mtgLocus = locus.locus || locus;\n\n    // LocusInfo object saves the locus object\n    // this.locus = mtgLocus;\n    this.mediaConnections = locus.mediaConnections;\n    this.locusUrl = locus.locusUrl || locus.url;\n    this.locusId = locus.locusId;\n    this.selfId = locus.selfId;\n    this.mediaId = locus.mediaId;\n    this.hostId = mtgLocus.host ? mtgLocus.host.id : this.hostId;\n    this.locusInfo.initialSetup(mtgLocus);\n  }\n\n  /**\n   * Sets the remote stream on the class instance and emits and\n   * event to developers\n   * @param {Object} pc The remote stream peer connection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setRemoteStream(pc) {\n    if (!pc) {\n      return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    pc.ontrack = (event) => {\n      // eslint-disable-next-line no-warning-comments\n      // TODO: It's possible for media to not be present\n      // so we might need to either\n      // A) wait until we have media flowing\n      // B) trigger a second event when video is flowing\n      LoggerProxy.logger.log(`Meeting:index#setRemoteStream --> ontrack event received for peerConnection: ${event}`);\n\n      const MEDIA_ID = {\n        AUDIO_TRACK: '0',\n        VIDEO_TRACK: '1',\n        SHARE_TRACK: '2'\n      };\n      let eventType = null;\n      const mediaTrack = event.track;\n      let trackMediaID = null;\n\n\n      // In case of safari some time the transceiver is not present for specific os version\n      // sdk tries to determine the transceive using the track id present\n      if (event.transceiver && event.transceiver.mid) {\n        trackMediaID = event.transceiver.mid;\n      }\n      else {\n        const {audioTransceiver, videoTransceiver, shareTransceiver} = event.target;\n\n        // audio kind indicates its a audio stream\n        if (mediaTrack.id === audioTransceiver.receiver.track.id) {\n          trackMediaID = '0';\n        }\n        else\n        if (mediaTrack.id === videoTransceiver.receiver.track.id) {\n          trackMediaID = '1';\n        }\n        else\n        if (mediaTrack.id === shareTransceiver.receiver.track.id) {\n          trackMediaID = '2';\n        }\n        else {\n          trackMediaID = null;\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.MUTE_AUDIO_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop()\n            }\n          );\n        }\n      }\n\n\n      switch (trackMediaID) {\n        case MEDIA_ID.AUDIO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_AUDIO;\n          this.mediaProperties.setRemoteAudioTrack(mediaTrack);\n          break;\n        case MEDIA_ID.VIDEO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_VIDEO;\n          this.mediaProperties.setRemoteVideoTrack(mediaTrack);\n          break;\n        case MEDIA_ID.SHARE_TRACK:\n          if (event.track) {\n            eventType = EVENT_TYPES.REMOTE_SHARE;\n            this.mediaProperties.setRemoteShare(mediaTrack);\n          }\n          break;\n        default: {\n          LoggerProxy.logger.log('Meeting:index#setRemoteStream --> no matching media track id');\n        }\n      }\n\n      // start stats here the stats are coming null if you dont receive streams\n\n      this.statsAnalyzer.startAnalyzer(this.mediaProperties.peerConnection);\n\n      if (eventType && mediaTrack) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setRemoteStream:pc.ontrack'\n          },\n          EVENT_TRIGGERS.MEDIA_READY,\n          {\n            type: eventType,\n            stream: MediaUtil.createMediaStream([mediaTrack])\n          }\n        );\n      }\n    };\n  }\n\n  /**\n   * Upload logs for the current meeting\n   * @param {object} options file name and function name\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  uploadLogs(options = {file: 'meeting/index', function: 'uploadLogs'}) {\n    Trigger.trigger(\n      this,\n      options,\n      EVENTS.REQUEST_UPLOAD_LOGS,\n      this\n    );\n  }\n\n\n  /**\n   * Removes remote audio and video stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  unsetRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3');\n    this.mediaProperties.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes remote audio, video and share tracks from class instance's mediaProperties\n   * @returns {undefined}\n   */\n  unsetRemoteTracks() {\n    this.mediaProperties.unsetRemoteTracks();\n  }\n\n  /**\n   * Removes the remote stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  closeRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#closeRemoteStream --> [DEPRECATION WARNING]: closeRemoteStream has been deprecated after v1.89.3');\n    this.closeRemoteTracks();\n  }\n\n  /**\n   * Removes the remote tracks on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  closeRemoteTracks() {\n    const {\n      remoteAudioTrack,\n      remoteVideoTrack,\n      remoteShare\n    } = this.mediaProperties;\n\n    /**\n     * Triggers an event to the developer\n     * @param {string} mediaType Type of media that was stopped\n     * @returns {void}\n     * @inner\n     */\n    const triggerMediaStoppedEvent = (mediaType) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'closeRemoteTracks'\n        },\n        EVENT_TRIGGERS.MEDIA_STOPPED,\n        {\n          type: mediaType\n        }\n      );\n    };\n\n    /**\n     * Stops a media track and emits an event\n     * @param {MediaStreamTrack} track Media track to stop\n     * @param {string} type Media track type\n     * @returns {Promise}\n     * @inner\n     */\n    // eslint-disable-next-line arrow-body-style\n    const stopTrack = (track, type) => {\n      return Media.stopTracks(track)\n        .then(() => {\n          const isTrackStopped = track && track.readyState === ENDED;\n          const isWrongReadyState = track && !isTrackStopped;\n\n          if (isTrackStopped) {\n            triggerMediaStoppedEvent(type);\n          }\n          else if (isWrongReadyState) {\n            LoggerProxy.logger.warn(`Meeting:index#closeRemoteTracks --> Error: MediaStreamTrack.readyState is ${track.readyState} for ${type}`);\n          }\n        });\n    };\n\n    return Promise.all([\n      stopTrack(remoteAudioTrack, EVENT_TYPES.REMOTE_AUDIO),\n      stopTrack(remoteVideoTrack, EVENT_TYPES.REMOTE_VIDEO),\n      stopTrack(remoteShare, EVENT_TYPES.REMOTE_SHARE)\n    ]);\n  }\n\n  /**\n   * Emits the 'media:ready' event with a local stream that consists of 1 local audio and 1 local video track\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  sendLocalMediaReadyEvent() {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'setLocalTracks'\n      },\n      EVENT_TRIGGERS.MEDIA_READY,\n      {\n        type: EVENT_TYPES.LOCAL,\n        stream: MediaUtil.createMediaStream([this.mediaProperties.audioTrack, this.mediaProperties.videoTrack])\n      }\n    );\n  }\n\n  /**\n   * Sets the local audio track on the class and emits an event to the developer\n   * @param {MediaStreamTrack} audioTrack\n   * @param {Boolean} emitEvent if true, a media ready event is emitted to the developer\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocalAudioTrack(audioTrack, emitEvent = true) {\n    if (audioTrack) {\n      const settings = audioTrack.getSettings();\n\n      this.mediaProperties.setMediaSettings('audio', {\n        echoCancellation: settings.echoCancellation,\n        noiseSuppression: settings.noiseSuppression\n      });\n\n      LoggerProxy.logger.log('Meeting:index#setLocalAudioTrack --> Audio settings.', JSON.stringify(this.mediaProperties.mediaSettings.audio));\n      this.mediaProperties.setLocalAudioTrack(audioTrack);\n      if (this.audio) this.audio.applyClientStateLocally(this);\n    }\n\n    if (emitEvent) {\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local video track on the class and emits an event to the developer\n   * @param {MediaStreamTrack} videoTrack\n   * @param {Boolean} emitEvent if true, a media ready event is emitted to the developer\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocalVideoTrack(videoTrack, emitEvent = true) {\n    if (videoTrack) {\n      const {\n        aspectRatio, frameRate, height, width, deviceId\n      } = videoTrack.getSettings();\n\n      this.mediaProperties.setLocalVideoTrack(videoTrack);\n      if (this.video) this.video.applyClientStateLocally(this);\n\n      this.mediaProperties.setMediaSettings('video', {\n        aspectRatio, frameRate, height, width\n      });\n      // store and save the selected video input device\n      if (deviceId) {\n        this.mediaProperties.setVideoDeviceId(deviceId);\n      }\n      LoggerProxy.logger.log('Meeting:index#setLocalVideoTrack --> Video settings.', JSON.stringify(this.mediaProperties.mediaSettings.video));\n    }\n\n    if (emitEvent) {\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localStream the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalTracks(localStream) {\n    if (localStream) {\n      const {audioTrack, videoTrack} = MeetingUtil.getTrack(localStream);\n\n      this.setLocalAudioTrack(audioTrack, false);\n      this.setLocalVideoTrack(videoTrack, false);\n\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localShare the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalShareTrack(localShare) {\n    let settings = null;\n\n    if (localShare) {\n      this.mediaProperties.setLocalShareTrack(MeetingUtil.getTrack(localShare).videoTrack);\n      const contentTracks = this.mediaProperties.shareTrack;\n\n      if (contentTracks) {\n        settings = contentTracks.getSettings();\n        this.mediaProperties.setMediaSettings('screen', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width,\n          displaySurface: settings.displaySurface,\n          cursor: settings.cursor\n        });\n        LoggerProxy.logger.log('Meeting:index#setLocalShareTrack --> Screen settings.', JSON.stringify(this.mediaProperties.mediaSettings.screen));\n      }\n\n      contentTracks.onended = () => this.handleShareTrackEnded(localShare);\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalShareTrack'\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL_SHARE,\n          stream: localShare\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalStream() {\n    const {audioTrack, videoTrack} = this.mediaProperties;\n\n    return Media.stopTracks(audioTrack)\n      .then(() => Media.stopTracks(videoTrack))\n      .then(() => {\n        const audioStopped = audioTrack && audioTrack.readyState === ENDED;\n        const videoStopped = videoTrack && videoTrack.readyState === ENDED;\n\n        // triggers event for audio and video stop , sometime either audio or video one of them exists\n        if (audioStopped || videoStopped) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'closeLocalStream'\n            },\n            EVENT_TRIGGERS.MEDIA_STOPPED, {\n              type: EVENT_TYPES.LOCAL\n            }\n          );\n        }\n        else if (audioTrack || videoTrack) {\n          LoggerProxy.logger.warn('Meeting:index#closeLocalStream --> Warning: track might already been ended or unavaliable.');\n        }\n      });\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalShare() {\n    const track = this.mediaProperties.shareTrack;\n\n    return Media.stopTracks(track).then(() => {\n      if (track && track.readyState === ENDED) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'closeLocalShare'\n          },\n          EVENT_TRIGGERS.MEDIA_STOPPED, {\n            type: EVENT_TYPES.LOCAL_SHARE\n          }\n        );\n      }\n      else if (track) {\n        // Track exists but with wrong readyState\n        LoggerProxy.logger.warn(`Meeting:index#closeLocalShare --> Error: MediaStreamTrack.readyState is ${track.readyState} for localShare`);\n      }\n    });\n  }\n\n  /**\n   * Removes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalVideoTrack() {\n    this.mediaProperties.unsetLocalVideoTrack();\n  }\n\n  /**\n   * Removes the local share from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalShareTrack() {\n    this.mediaProperties.unsetLocalShareTrack();\n  }\n\n  /**\n   * sets up listner for mercury event\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setMercuryListener() {\n    // Client will have a socket manager and handle reconnecting to mercury, when we reconnect to mercury\n    // if the meeting has active peer connections, it should try to reconnect.\n    this.webex.internal.mercury.on(ONLINE, () => {\n      LoggerProxy.logger.info('Meeting:index#setMercuryListener --> Web socket online');\n\n      // Only send restore event when it was disconnected before and for connected later\n      if (!this.hasWebsocketConnected) {\n        Metrics.postEvent({\n          event: eventType.MERCURY_CONNECTION_RESTORED,\n          meeting: this\n        });\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MERCURY_CONNECTION_RESTORED,\n          {\n            correlation_id: this.correlationId\n          }\n        );\n      }\n      this.hasWebsocketConnected = true;\n    });\n\n    this.webex.internal.mercury.on(OFFLINE, () => {\n      LoggerProxy.logger.error('Meeting:index#setMercuryListener --> Web socket offline');\n      Metrics.postEvent({\n        event: eventType.MERCURY_CONNECTION_LOST,\n        meeting: this\n      });\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.MERCURY_CONNECTION_FAILURE,\n        {\n          correlation_id: this.correlationId\n        }\n      );\n    });\n  }\n\n  /**\n   * Close the peer connections and remove them from the class. Triggers an event\n   * when each is closed.\n   * @returns {Promise} returns a resolved promise with an array of closed peer connections\n   * @public\n   * @memberof Meeting\n   */\n  closePeerConnections() {\n    return PeerConnectionManager.close(this.mediaProperties.peerConnection);\n  }\n\n  /**\n   * Unsets the peer connections on the class\n   * warning DO NOT CALL WITHOUT CLOSING PEER CONNECTIONS FIRST\n   * @param {PeerConnection} peerConnection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetPeerConnections() {\n    this.mediaProperties.unsetPeerConnection();\n    if (this.config.reconnection.detection) {\n      this.webex.internal.mercury.off(ONLINE);\n    }\n  }\n\n  /**\n   * Convenience method to set the correlation id for the Meeting\n   * @param {String} id correlation id to set on the class\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setCorrelationId(id) {\n    this.correlationId = id;\n  }\n\n  /**\n   * Mute the audio for a meeting\n   * @returns {Promise} resolves the data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  muteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteAudio -->';\n\n    // First, stop sending the local audio media\n    return logRequest(this.audio.handleClientRequest(this, true)\n      .then(() => {\n        MeetingUtil.handleAudioLogging(this.mediaProperties.audioTrack);\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting audio`,\n      success: `${LOG_HEADER} muted audio successfully`,\n      failure: `${LOG_HEADER} muting audio failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting audio\n   * @returns {Promise} resolves data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteAudio -->';\n\n    // First, send the control to unmute the participant on the server\n    return logRequest(this.audio.handleClientRequest(this, false)\n      .then(() => {\n        MeetingUtil.handleAudioLogging(this.mediaProperties.audioTrack);\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.UNMUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting audio`,\n      success: `${LOG_HEADER} unmuted audio successfully`,\n      failure: `${LOG_HEADER} unmuting audio failed, `\n    });\n  }\n\n  /**\n   * Mute the video for a meeting\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  muteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video) {\n      return Promise.reject(new ParameterError('no video control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteVideo -->';\n\n    return logRequest(this.video.handleClientRequest(this, true)\n      .then(() => {\n        MeetingUtil.handleVideoLogging(this.mediaProperties.videoTrack);\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting video`,\n      success: `${LOG_HEADER} muted video successfully`,\n      failure: `${LOG_HEADER} muting video failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting video\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteVideo -->';\n\n    return logRequest(this.video.handleClientRequest(this, false)\n      .then(() => {\n        MeetingUtil.handleVideoLogging(this.mediaProperties.videoTrack);\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.UNMUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting video`,\n      success: `${LOG_HEADER} unmuted video successfully`,\n      failure: `${LOG_HEADER} unmuting video failed, `\n    });\n  }\n\n  /**\n   * Shorthand function to join AND set up media\n   * @param {Object} options - options to join with media\n   * @param {JoinOptions} [options.joinOptions] - see #join()\n   * @param {MediaDirection} options.mediaSettings - see #addMedia()\n   * @param {AudioVideo} [options.audioVideoOptions] - see #getMediaStreams()\n   * @returns {Promise} -- {join: see join(), media: see addMedia(), local: see getMediaStreams()}\n   * @public\n   * @memberof Meeting\n   * @example\n   * joinWithMedia({\n   *  joinOptions: {resourceId: 'resourceId' },\n   *  mediaSettings: {\n   *   sendAudio: true,\n   *   sendVideo: true,\n   *   sendShare: false,\n   *   receiveVideo:true,\n   *   receiveAudio: true,\n   *   receiveShare: true\n   * }\n   * audioVideoOptions: {\n   *   audio: 'audioDeviceId',\n   *   video: 'videoDeviceId'\n   * }})\n   */\n  joinWithMedia(options = {}) {\n    // TODO: add validations for parameters\n    const {mediaSettings, joinOptions, audioVideoOptions} = options;\n\n    return this.join(joinOptions)\n      .then((joinResponse) =>\n        this.getMediaStreams(mediaSettings, audioVideoOptions).then(([localStream, localShare]) =>\n          this.addMedia({\n            mediaSettings,\n            localShare,\n            localStream\n          }).then((mediaResponse) => ({\n            join: joinResponse,\n            media: mediaResponse,\n            local: [localStream, localShare]\n          }))))\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#joinWithMedia --> ', error);\n\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.JOIN_WITH_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Initiates the reconnection of the media in the meeting\n   *\n   * @param {object} options\n   * @returns {Promise} resolves with {reconnect} or errors with {error}\n   * @public\n   * @memberof Meeting\n   */\n  reconnect(options) {\n    LoggerProxy.logger.log(`Meeting:index#reconnect --> attempting to reconnect meeting ${this.id}`);\n\n    if (!this.reconnectionManager || !this.reconnectionManager.reconnect) {\n      return Promise.reject(new ParameterError('Cannot reconnect, ReconnectionManager must first be defined.'));\n    }\n\n    if (!MeetingUtil.isMediaEstablished(this.currentMediaStatus)) {\n      return Promise.reject(new ParameterError('Cannot reconnect, Media has not established to reconnect'));\n    }\n\n    try {\n      LoggerProxy.logger.info('Meeting:index#reconnect --> Validating reconnect ability.');\n      this.reconnectionManager.validate();\n    }\n    catch (error) {\n      // Unable to reconnect this call\n      if (error instanceof ReconnectInProgress) {\n        LoggerProxy.logger.info('Meeting:index#reconnect --> Unable to reconnect, reconnection in progress.');\n      }\n      else {\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Unable to reconnect.', error);\n      }\n\n      return Promise.resolve();\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'reconnect'\n      },\n      EVENT_TRIGGERS.MEETING_RECONNECTION_STARTING\n    );\n\n\n    return this.reconnectionManager\n      .reconnect(options)\n      .then(() => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_SUCCESS\n        );\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Meeting reconnect success');\n      })\n      .catch((error) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_FAILURE,\n          {\n            error: new ReconnectionError('Reconnection failure event', error)\n          }\n        );\n\n        LoggerProxy.logger.error('Meeting:index#reconnect --> Meeting reconnect failed', error);\n\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MEETING_RECONNECT_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        this.uploadLogs({\n          file: 'meeting/index',\n          function: 'reconnect'\n        });\n\n        return Promise.reject(new ReconnectionError('Reconnection failure event', error));\n      })\n      .finally(() => {\n        this.reconnectionManager.reset();\n      });\n  }\n\n  /**\n   * Check if the meeting supports the Webex Assistant feature\n   * @returns {boolean}\n   * @throws TranscriptionNotSupportedError\n   */\n  isTranscriptionSupported() {\n    if (this.locusInfo.controls.transcribe?.transcribing) {\n      return true;\n    }\n\n    LoggerProxy.logger.error(\n      'Meeting:index#isTranscriptionSupported --> Webex Assistant is not supported'\n    );\n\n    return false;\n  }\n\n  /**\n   * Monitor the Low-Latency Mercury (LLM) web socket connection on `onError` and `onClose` states\n   * @private\n   * @returns {void}\n   */\n  monitorTranscriptionSocketConnection() {\n    this.transcription.onCloseSocket((event) => {\n      LoggerProxy.logger.info(\n        `Meeting:index#onCloseSocket -->\n        unable to continue receiving transcription;\n        low-latency mercury web socket connection is closed now.\n        ${event}`\n      );\n\n      this.triggerStopReceivingTranscriptionEvent();\n    });\n\n    this.transcription.onErrorSocket((event) => {\n      LoggerProxy.logger.error(\n        `Meeting:index#onErrorSocket -->\n         unable to continue receiving transcription;\n         low-latency mercury web socket connection error had occured.\n        ${event}`\n      );\n\n      this.triggerStopReceivingTranscriptionEvent();\n\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.RECEIVE_TRANSCRIPTION_FAILURE,\n        {\n          correlation_id: this.correlationId,\n          reason: 'unexpected error: transcription LLM web socket connection error had occured.',\n          event\n        }\n      );\n    });\n  }\n\n  /**\n   * Request for a WebSocket Url, open and monitor the WebSocket connection\n   * @private\n   * @returns {Promise<void>} a promise to open the WebSocket connection\n   */\n  async receiveTranscription() {\n    LoggerProxy.logger.info(\n      `Meeting:index#receiveTranscription -->\n      Attempting to generate a web socket url.`\n    );\n\n    try {\n      const {datachannelUrl} = this.locusInfo.info;\n      const {body: {webSocketUrl}} = await this.request({\n        method: HTTP_VERBS.POST,\n        uri: datachannelUrl,\n        body: {deviceUrl: this.deviceUrl}\n      });\n\n      LoggerProxy.logger.info(\n        `Meeting:index#receiveTranscription -->\n        Generated web socket url succesfully.`\n      );\n\n      this.transcription = new Transcription(\n        webSocketUrl,\n        this.webex.sessionId,\n        this.members,\n      );\n\n      LoggerProxy.logger.info(\n        `Meeting:index#receiveTranscription -->\n        opened LLM web socket connection successfully.`\n      );\n\n      // retrieve and pass the payload\n      this.transcription.subscribe((payload) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'join'\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_RECEIVING_TRANSCRIPTION,\n          payload\n        );\n      });\n\n      this.monitorTranscriptionSocketConnection();\n      this.transcription.connect(this.webex.credentials.supertoken.access_token);\n    }\n    catch (error) {\n      LoggerProxy.logger.error(`Meeting:index#receiveTranscription --> ${error}`);\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.RECEIVE_TRANSCRIPTION_FAILURE,\n        {\n          correlation_id: this.correlationId,\n          reason: error.message,\n          stack: error.stack\n        }\n      );\n    }\n  }\n\n  /**\n   * stop recieving Transcription by closing\n   * the web socket connection properly\n   * @returns {void}\n   */\n  stopReceivingTranscription() {\n    if (this.transcription) {\n      this.transcription.closeSocket();\n    }\n  }\n\n  /**\n   * triggers an event to notify that the user\n   * will not receive any more transcription\n   * @private\n   * @returns{void}\n   */\n  triggerStopReceivingTranscriptionEvent() {\n    LoggerProxy.logger.info(`\n      Meeting:index#stopReceivingTranscription -->\n      closed transcription LLM web socket connection successfully.`);\n\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting',\n        function: 'triggerStopReceivingTranscriptionEvent'\n      },\n      EVENT_TRIGGERS.MEETING_STOPPED_RECEIVING_TRANSCRIPTION\n    );\n  }\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {JoinOptions} options A configurable options object for joining a meeting\n   * @returns {Promise} the join response\n   * @public\n   * @memberof Meeting\n   * Scenario A: Joining own claimed personal meeting room\n   * Scenario B: Joining other's claimed personal meeting room, do pass pin (if desired to join as host, or nullify), do pass moderator\n   * Scenario C: Joining an unclaimed personal meeting room, -do not- pass pin or moderator on first try, -do- pass pin and moderator\n   *             if joining as host on second loop, pass pin and pass moderator if joining as guest on second loop\n   * Scenario D: Joining any other way (sip, pstn, conversationUrl, link just need to specify resourceId)\n   */\n  join(options = {}) {\n    if (!this.webex.meetings.registered) {\n      const errorMessage = 'Meeting:index#join --> Device not registered';\n      const error = new Error(errorMessage);\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(error);\n    }\n\n    // If a join request is being processed, refer to the deferred promise.\n    if (this.deferJoin) {\n      return this.deferJoin;\n    }\n\n    // Scope-up the resolve/reject methods for handling within join().\n    let joinFailed;\n    let joinSuccess;\n\n    // Create a deferred promise for a consistent resolve value from utils.\n    // This also prevents redundant API calls.\n    this.deferJoin = new Promise((resolve, reject) => {\n      joinFailed = reject;\n      joinSuccess = resolve;\n    });\n\n    if (!this.hasJoinedOnce) {\n      this.hasJoinedOnce = true;\n    }\n    else {\n      LoggerProxy.logger.log(`Meeting:index#join --> Generating a new correlation id for meeting ${this.id}`);\n      LoggerProxy.logger.log(`Meeting:index#join --> Previous correlation id ${this.correlationId}`);\n      this.setCorrelationId(uuid.v4());\n      LoggerProxy.logger.log(`Meeting:index#join --> New correlation id ${this.correlationId}`);\n    }\n\n    if (options.rejoin) {\n      this.meetingFiniteStateMachine.reset();\n    }\n\n    Metrics.postEvent({\n      event: eventType.CALL_INITIATED,\n      meeting: this,\n      data: {trigger: trigger.USER_INTERACTION}\n    });\n\n    LoggerProxy.logger.log('Meeting:index#join --> Joining a meeting');\n\n    if (this.meetingFiniteStateMachine.state === MEETING_STATE_MACHINE.STATES.ENDED) {\n      this.meetingFiniteStateMachine.reset();\n    }\n    if (this.meetingFiniteStateMachine.state !== MEETING_STATE_MACHINE.STATES.RINGING) {\n      this.meetingFiniteStateMachine.ring(_JOIN_);\n    }\n\n    // TODO: does this really need to be here?\n    if (options.resourceId && this.destination && options.resourceId === this.destination) {\n      this.wirelessShare = true;\n    }\n\n    if (options.meetingQuality) {\n      if (typeof options.meetingQuality === 'string') {\n        if (!QUALITY_LEVELS[options.meetingQuality]) {\n          const errorMessage = `Meeting:index#join --> ${options.meetingQuality} not defined`;\n          const error = new Error(errorMessage);\n\n          LoggerProxy.logger.error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(error);\n        }\n\n        this.mediaProperties.setLocalQualityLevel(options.meetingQuality);\n        this.mediaProperties.setRemoteQualityLevel(options.meetingQuality);\n      }\n\n      if (typeof options.meetingQuality === 'object') {\n        if (\n          !QUALITY_LEVELS[options.meetingQuality.local] &&\n          !QUALITY_LEVELS[options.meetingQuality.remote]\n        ) {\n          const errorMessage = `Meeting:index#join --> ${\n            options.meetingQuality.local || options.meetingQuality.remote\n          } not defined`;\n\n          LoggerProxy.logger.error(errorMessage);\n\n          const error = new Error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(new Error(errorMessage));\n        }\n\n        if (options.meetingQuality.local) {\n          this.mediaProperties.setLocalQualityLevel(options.meetingQuality.local);\n        }\n        if (options.meetingQuality.remote) {\n          this.mediaProperties.setRemoteQualityLevel(options.meetingQuality.remote);\n        }\n      }\n    }\n\n    return MeetingUtil.joinMeetingOptions(this, options)\n      .then((join) => {\n        this.meetingFiniteStateMachine.join();\n        LoggerProxy.logger.log('Meeting:index#join --> Success');\n\n        return join;\n      })\n      .then((join) => {\n        joinSuccess(join);\n        this.deferJoin = undefined;\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.JOIN_SUCCESS,\n          {\n            correlation_id: this.correlationId\n          }\n        );\n\n        return join;\n      }).then(async (join) => {\n        if (isBrowser) {\n          if (this.config.receiveTranscription || options.receiveTranscription) {\n            if (this.isTranscriptionSupported()) {\n              await this.receiveTranscription();\n              LoggerProxy.logger.info('Meeting:index#join --> enabled to recieve transcription!');\n            }\n          }\n        }\n        else {\n          LoggerProxy.logger.error('Meeting:index#join --> Receving transcription is not supported on this platform');\n        }\n\n\n        return join;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#join --> Failed', error);\n\n        Metrics.postEvent({\n          event: eventType.LOCUS_JOIN_RESPONSE,\n          meeting: this,\n          meetingId: this.id,\n          data: {\n            errors: [\n              Metrics.parseLocusError(error.error, true)\n            ]\n          }\n        });\n\n        // TODO:  change this to error codes and pre defined dictionary\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.JOIN_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            reason: error.error?.message,\n            stack: error.stack\n          }\n        );\n\n        // Upload logs on join Failure\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'join'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        joinFailed(error);\n        this.deferJoin = undefined;\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Use phone for meeting audio\n   * @param {String} phoneNumber If provided, it will dial-out using this number. If not provided, dial-in will be used\n   * @returns {Promise} Resolves once the dial-in or dial-out request has completed, or rejects if it failed\n   * @public\n   * @memberof Meeting\n   */\n  usePhoneAudio(phoneNumber) {\n    if (!phoneNumber) {\n      return this.dialInPstn();\n    }\n\n    return this.dialOutPstn(phoneNumber);\n  }\n\n  /**\n   * Determines if the given pstnStatus is in a state which implies the phone is provisioned\n   * @param {String} pstnStatus\n   * @returns {Boolean}\n   * @private\n   * @memberof Meeting\n   */\n  isPhoneProvisioned(pstnStatus) {\n    return [PSTN_STATUS.JOINED, PSTN_STATUS.CONNECTED, PSTN_STATUS.SUCCESS].includes(pstnStatus);\n  }\n\n  /**\n   * Enable dial-in for audio\n   * @returns {Promise} Resolves once the dial-in request has completed, or rejects if it failed\n   * @private\n   * @memberof Meeting\n   */\n  dialInPstn() {\n    if (this.isPhoneProvisioned(this.dialInDeviceStatus)) return Promise.resolve(); // prevent multiple dial in devices from being provisioned\n\n    const {correlationId, locusUrl} = this;\n\n    if (!this.dialInUrl) this.dialInUrl = `dialin:///${uuid.v4()}`;\n\n    return this.meetingRequest.dialIn({\n      correlationId,\n      dialInUrl: this.dialInUrl,\n      locusUrl,\n      clientUrl: this.deviceUrl\n    }).then((res) => {\n      this.locusInfo.onFullLocus(res.body.locus);\n    }).catch((error) => {\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.ADD_DIAL_IN_FAILURE,\n        {\n          correlation_id: this.correlationId,\n          dial_in_url: this.dialInUrl,\n          locus_id: locusUrl.split('/').pop(),\n          client_url: this.deviceUrl,\n          reason: error.error?.message,\n          stack: error.stack\n        }\n      );\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Enable dial-out for audio\n   * @param {String} phoneNumber Phone number to dial out to\n   * @returns {Promise} Resolves once the dial-out request has completed (it doesn't wait for the user to answer the phone), or rejects if it failed\n   * @private\n   * @memberof Meeting\n   */\n  dialOutPstn(phoneNumber) {\n    if (this.isPhoneProvisioned(this.dialOutDeviceStatus)) return Promise.resolve(); // prevent multiple dial out devices from being provisioned\n\n    const {correlationId, locusUrl} = this;\n\n    if (!this.dialOutUrl) this.dialOutUrl = `dialout:///${uuid.v4()}`;\n\n    return this.meetingRequest.dialOut({\n      correlationId,\n      dialOutUrl: this.dialOutUrl,\n      phoneNumber,\n      locusUrl,\n      clientUrl: this.deviceUrl\n    }).then((res) => {\n      this.locusInfo.onFullLocus(res.body.locus);\n    }).catch((error) => {\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.ADD_DIAL_OUT_FAILURE,\n        {\n          correlation_id: this.correlationId,\n          dial_out_url: this.dialOutUrl,\n          locus_id: locusUrl.split('/').pop(),\n          client_url: this.deviceUrl,\n          reason: error.error?.message,\n          stack: error.stack\n        }\n      );\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Disconnect meeting audio via phone.\n   * @returns {Promise} Resolves once the phone audio disconnection has completed\n   * @public\n   * @memberof Meeting\n   * @returns {Promise}\n   */\n  disconnectPhoneAudio() {\n    return Promise.all([\n      this.isPhoneProvisioned(this.dialInDeviceStatus) ?\n        MeetingUtil.disconnectPhoneAudio(this, this.dialInUrl) :\n        Promise.resolve(),\n      this.isPhoneProvisioned(this.dialOutDeviceStatus) ?\n        MeetingUtil.disconnectPhoneAudio(this, this.dialOutUrl) :\n        Promise.resolve()\n    ]);\n  }\n\n  /**\n   * Moves the call to the specified resourceId\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveTo(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: true,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n\n    Metrics.postEvent({event: eventType.MOVE_MEDIA, meeting: this});\n\n    this.locusInfo.once(LOCUSINFO.EVENTS.SELF_OBSERVING, async () => {\n      // Clean up the camera , microphone track and re initiate it\n\n      try {\n        if (this.isSharing) {\n          await this.stopFloorRequest();\n        }\n        const mediaSettings = {\n          mediaDirection: {\n            sendVideo: false,\n            receiveVideo: false,\n            sendAudio: false,\n            receiveAudio: false,\n            sendShare: false,\n            receiveShare: true\n          }\n        };\n\n        // clean up the local tracks\n        this.mediaProperties.setMediaDirection(mediaSettings.mediaDirection);\n\n        // close the existing local tracks\n        await this.closeLocalStream();\n        await this.closeLocalShare();\n\n        this.mediaProperties.unsetMediaTracks();\n\n\n        // when a move to is intiated by the client , Locus delets the existing media node from the server as soon the DX answers the meeting\n        // once the DX answers we establish connection back the media server with only receiveShare enabled\n        await this.reconnectionManager.reconnectMedia(mediaSettings)\n          .then(() => {\n            Metrics.sendBehavioralMetric(\n              BEHAVIORAL_METRICS.MOVE_TO_SUCCESS,\n            );\n          });\n      }\n      catch (error) {\n        LoggerProxy.logger.error('Meeting:index#moveTo --> Failed to moveTo resourceId', error);\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MOVE_TO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n      }\n    });\n\n    LoggerProxy.logger.info('Meeting:index#moveTo --> Initated moved to using resourceId', resourceId);\n\n    return MeetingUtil.joinMeetingOptions(this, {resourceId, moveToResource: true}).then(() => {\n      this.meetingFiniteStateMachine.join();\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n      Metrics.sendBehavioralMetric(\n        BEHAVIORAL_METRICS.MOVE_TO_FAILURE,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack\n        }\n      );\n      LoggerProxy.logger.error('Meeting:index#moveTo --> Failed to moveTo resourceId', error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Moves the call from the specified resourceId, back to computer\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveFrom(resourceId) {\n    // On moveFrom ask the developer to re capture it moveFrom  then updateMedia\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n    const oldCorrelationId = this.correlationId;\n\n    Metrics.postEvent({event: eventType.MOVE_MEDIA, meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this)\n      .then(() => MeetingUtil.leaveMeeting(this, {\n        resourceId,\n        correlationId: oldCorrelationId,\n        moveMeeting: true\n      }).then(() => {\n        this.resourceId = '';\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MOVE_FROM_SUCCESS,\n        );\n      })).catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MOVE_FROM_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n        LoggerProxy.logger.error('Meeting:index#moveTo --> Failed to moveTo resourceId', error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Get local media streams based on options passed\n   * @param {MediaDirection} mediaDirection A configurable options object for joining a meeting\n   * @param {AudioVideo} [audioVideo] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @param {SharePreferences} [sharePreferences] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @returns {Promise} see #Media.getUserMedia\n   * @public\n   * @todo should be static, or moved so can be called outside of a meeting\n   * @memberof Meeting\n   */\n  getMediaStreams = (\n    mediaDirection,\n    // This return an OBJECT {video: {height, widght}}\n    audioVideo = VIDEO_RESOLUTIONS[this.mediaProperties.localQualityLevel],\n    sharePreferences\n  ) => {\n    if (\n      mediaDirection &&\n      (\n        mediaDirection.sendAudio ||\n        mediaDirection.sendVideo ||\n        mediaDirection.sendShare\n      )\n    ) {\n      if (mediaDirection &&\n        (\n          mediaDirection.sendAudio &&\n          mediaDirection.sendVideo &&\n          mediaDirection.sendShare\n        ) &&\n        isBrowser('safari')\n      ) {\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Setting `sendShare` to FALSE, due to complications with Safari');\n\n        mediaDirection.sendShare = false;\n\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Enabling `sendShare` along with `sendAudio` & `sendVideo`, on Safari, causes a failure while setting up a screen share at the same time as the camera+mic stream');\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Please use `meeting.shareScreen()` to manually start the screen share after successfully joining the meeting');\n      }\n\n      // extract deviceId if exists otherwise default to null.\n      const {deviceId: preferredVideoDevice} = (audioVideo && audioVideo.video || {deviceId: null});\n      const lastVideoDeviceId = this.mediaProperties.getVideoDeviceId();\n\n      if (preferredVideoDevice) {\n        // Store new preferred video input device\n        this.mediaProperties.setVideoDeviceId(preferredVideoDevice);\n      }\n      else if (lastVideoDeviceId) {\n        // no new video preference specified so use last stored value,\n        // works with empty object {} or media constraint.\n        // eslint-disable-next-line no-param-reassign\n        audioVideo = {\n          ...audioVideo,\n          video: {\n            ...audioVideo.video,\n            deviceId: lastVideoDeviceId\n          }\n        };\n      }\n\n      return Media.getSupportedDevice({\n        sendAudio: mediaDirection.sendAudio,\n        sendVideo: mediaDirection.sendVideo\n      })\n        .catch((error) => Promise.reject(\n          new MediaError('Given constraints do not match permission set for either camera or microphone', error)\n        ))\n        .then((devicePermissions) =>\n          Media.getUserMedia(\n            {\n              ...mediaDirection,\n              sendAudio: devicePermissions.sendAudio,\n              sendVideo: devicePermissions.sendVideo,\n              isSharing: this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE\n            },\n            audioVideo,\n            sharePreferences,\n            this.config\n          )\n            .catch((error) => {\n              // Whenever there is a failure when trying to access a user's device\n              // report it as an Behavioral metric\n              // This gives visibility into common errors and can help\n              // with further troubleshooting\n              const metricName = BEHAVIORAL_METRICS.GET_USER_MEDIA_FAILURE;\n              const data = {\n                correlation_id: this.correlationId,\n                locus_id: this.locusUrl?.split('/').pop(),\n                reason: error.message,\n                stack: error.stack\n              };\n              const metadata = {\n                type: error.name\n              };\n\n              Metrics.sendBehavioralMetric(metricName, data, metadata);\n              throw new MediaError('Unable to retrieve media streams', error);\n            }));\n    }\n\n    return Promise.reject(\n      new MediaError('At least one of the mediaDirection value should be true')\n    );\n  };\n\n\n  /**\n   * Checks if the machine has at least one audio or video device\n   * @param {Object} options\n   * @param {Boolean} options.sendAudio\n   * @param {Boolean} options.sendVideo\n   * @returns {Object}\n   * @memberof Meetings\n   */\n  getSupportedDevices = ({sendAudio = true, sendVideo = true}) => Media.getSupportedDevice({sendAudio, sendVideo});\n\n  /**\n   * Get the devices from the Media module\n   * @returns {Promise} resolves to an array of DeviceInfo\n   * @memberof Meetings\n   */\n  getDevices = () => Media.getDevices();\n\n  /**\n   * Registers for all required StatsAnalyzer events\n   * @private\n   * @returns {void}\n   * @memberof Meetings\n   */\n  setupStatsAnalyzerEventHandlers = () => {\n    this.statsAnalyzer.on(StatsAnalyzerEvents.MEDIA_QUALITY, (options) => {\n      // TODO:  might have to send the same event to the developer\n      // Add ip address info if geo hint is present\n      options.data.intervalMetadata.peerReflexiveIP = this.webex.meetings.geoHintInfo?.clientAddress || options.data.intervalMetadata.peerReflexiveIP || MQA_STATS.DEFAULT_IP;\n      Metrics.postEvent({event: eventType.MEDIA_QUALITY, meeting: this, data: {intervalData: options.data, networkType: options.networkType}});\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.LOCAL_MEDIA_STARTED, (data) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'addMedia'\n        },\n        EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n        data\n      );\n      Metrics.postEvent({\n        event: eventType.SENDING_MEDIA_START,\n        meeting: this,\n        data: {\n          mediaType: data.type\n        }\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.LOCAL_MEDIA_STOPPED, (data) => {\n      Metrics.postEvent({\n        event: eventType.SENDING_MEDIA_STOP,\n        meeting: this,\n        data: {\n          mediaType: data.type\n        }\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.REMOTE_MEDIA_STARTED, (data) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'addMedia'\n        },\n        EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n        data\n      );\n      Metrics.postEvent({\n        event: eventType.RECEIVING_MEDIA_START,\n        meeting: this,\n        data: {\n          mediaType: data.type\n        }\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.REMOTE_MEDIA_STOPPED, (data) => {\n      Metrics.postEvent({\n        event: eventType.RECEIVING_MEDIA_STOP,\n        meeting: this,\n        data: {\n          mediaType: data.type\n        }\n      });\n    });\n  };\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {Object} options A configurable options object for joining a meeting\n   * @param {Object} options.resourceId pass the deviceId\n   * @param {MediaDirection} options.mediaSettings pass media options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  addMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#addMedia -->';\n\n    if (this.meetingState !== FULL_STATE.ACTIVE) {\n      return Promise.reject(new MeetingNotActiveError());\n    }\n\n    if (MeetingUtil.isUserInLeftState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n    // If the user is unjoined or guest waiting in lobby dont allow the user to addMedia\n    if (this.isUserUnadmitted && !this.wirelessShare) {\n      return Promise.reject(new UserInLobbyError());\n    }\n\n    const {localStream, localShare, mediaSettings} = options;\n\n    LoggerProxy.logger.info(`${LOG_HEADER} Adding Media.`);\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.roap.doTurnDiscovery(this, false))\n      .then((turnServerInfo) => {\n        this.mediaProperties.setMediaPeerConnection(MediaUtil.createPeerConnection(turnServerInfo));\n        this.setMercuryListener();\n        PeerConnectionManager.setPeerConnectionEvents(this);\n\n        return this.preMedia(localStream, localShare, mediaSettings);\n      })\n      .then(() => Media.attachMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx,\n        enableExtmap: this.config.enableExtmap,\n        setStartLocalSDPGenRemoteSDPRecvDelay: this.setStartLocalSDPGenRemoteSDPRecvDelay.bind(this)\n      })\n        .then((peerConnection) => this.getDevices().then((devices) => {\n          MeetingUtil.handleDeviceLogging(devices);\n\n          return peerConnection;\n        }))\n        .then((peerConnection) => {\n          this.handleMediaLogging(this.mediaProperties);\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection Received from attachMedia `);\n\n          this.setRemoteStream(peerConnection);\n          if (this.config.stats.enableStatsAnalyzer) {\n            // TODO: ** Dont re create StatsAnalyzer on reconnect or rejoin\n            this.networkQualityMonitor = new NetworkQualityMonitor(this.config.stats);\n            this.statsAnalyzer = new StatsAnalyzer(this.config.stats, this.networkQualityMonitor);\n            this.setupStatsAnalyzerEventHandlers();\n            this.networkQualityMonitor.on(EVENT_TRIGGERS.NETWORK_QUALITY, this.sendNetworkQualityEvent.bind(this));\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error adding media , setting up peerconnection, `, error);\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.ADD_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() => new Promise((resolve, reject) => {\n          let timerCount = 0;\n\n          // eslint-disable-next-line func-names\n          // eslint-disable-next-line prefer-arrow-callback\n          if (this.type === _CALL_) {\n            resolve();\n          }\n          const joiningTimer = setInterval(() => {\n            timerCount += 1;\n            if (this.meetingState === FULL_STATE.ACTIVE) {\n              clearInterval(joiningTimer);\n              resolve();\n            }\n\n            if (timerCount === 4) {\n              clearInterval(joiningTimer);\n              reject(new Error('Meeting is still not active '));\n            }\n          }, 1000);\n        }))\n        .then(() =>\n          logRequest(this.roap\n            .sendRoapMediaRequest({\n              sdp: this.mediaProperties.peerConnection.sdp,\n              roapSeq: this.roapSeq,\n              meeting: this // or can pass meeting ID\n            }), {\n            header: `${LOG_HEADER} Send Roap Media Request.`,\n            success: `${LOG_HEADER} Successfully send roap media request`,\n            failure: `${LOG_HEADER} Error joining the call on send roap media request, `\n          }))\n        .then(() => {\n          const {peerConnection} = this.mediaProperties;\n\n          return new Promise((resolve, reject) => {\n            if (peerConnection.connectionState === CONNECTION_STATE.CONNECTED) {\n              LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n\n              resolve(peerConnection);\n\n              return;\n            }\n            // Check if Peer Connection is STABLE (connected)\n            const stabilityTimeout = setTimeout(() => {\n              if (peerConnection.connectionState !== CONNECTION_STATE.CONNECTED) {\n                // TODO: Fix this after the error code pr goes in\n                reject(createMeetingsError(30202, 'Meeting connection failed'));\n              }\n              else {\n                LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n                resolve(peerConnection);\n              }\n            }, PC_BAIL_TIMEOUT);\n\n            this.once(EVENT_TRIGGERS.MEDIA_READY, () => {\n              LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED, clearing stability timer.`);\n              clearTimeout(stabilityTimeout);\n              resolve(peerConnection);\n            });\n          });\n        })\n        .then(() => {\n          if (mediaSettings && mediaSettings.sendShare && localShare) {\n            if (this.state === MEETING_STATE.STATES.JOINED) {\n              return this.share();\n            }\n\n            // When the self state changes to JOINED then request the floor\n            this.floorGrantPending = true;\n          }\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.ADD_MEDIA_SUCCESS,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop()\n            }\n          );\n\n          return Promise.resolve();\n        }))\n      .catch((error) => {\n        // Clean up stats analyzer, peer connection, and turn off listeners\n        const stopStatsAnalyzer = (this.statsAnalyzer) ? this.statsAnalyzer.stopAnalyzer() : Promise.resolve();\n\n        stopStatsAnalyzer\n          .then(() => {\n            this.statsAnalyzer = null;\n\n            if (this.mediaProperties.peerConnection) {\n              this.closePeerConnections();\n              this.unsetPeerConnections();\n            }\n\n            LoggerProxy.logger.error(`${LOG_HEADER} Error adding media failed to initiate PC and send request, `, error);\n\n            Metrics.sendBehavioralMetric(\n              BEHAVIORAL_METRICS.ADD_MEDIA_FAILURE,\n              {\n                correlation_id: this.correlationId,\n                locus_id: this.locusUrl.split('/').pop(),\n                reason: error.message,\n                stack: error.stack,\n                code: error.code\n              }\n            );\n\n            // Upload logs on error while adding media\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'addMedia'\n              },\n              EVENTS.REQUEST_UPLOAD_LOGS,\n              this\n            );\n\n            // If addMedia failes for not establishing connection then\n            // leave the meeting with reson connection failed as meeting anyways will end\n            // and cannot be connected unless network condition is checked for firewall\n            if (error.code === InvalidSdpError.CODE) {\n              this.leave({reason: MEETING_REMOVED_REASON.MEETING_CONNECTION_FAILED});\n            }\n\n            throw error;\n          });\n      });\n  }\n\n  /**\n   * Informs if the peer connection is in a state that can be updated with updateMedia (audio/video/share)\n   * @returns {Boolean}\n   */\n  canUpdateMedia() {\n    return this.mediaProperties.peerConnection.signalingState === SDP.STABLE && !RoapCollection.isBusy(this.correlationId);\n  }\n\n  /**\n   * Enqueues a media update operation.\n   * @param {String} mediaUpdateType one of MEDIA_UPDATE_TYPE values\n   * @param {Object} options\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  enqueueMediaUpdate(mediaUpdateType, options) {\n    return new Promise((resolve, reject) => {\n      const queueItem = {\n        pendingPromiseResolve: resolve, pendingPromiseReject: reject, mediaUpdateType, options\n      };\n\n      LoggerProxy.logger.log(`Meeting:index#enqueueMediaUpdate --> enqueuing media update type=${mediaUpdateType}`);\n      this.queuedMediaUpdates.push(queueItem);\n    });\n  }\n\n  /**\n   * emits event when the negotation is completed\n   * @returns {void}\n   * @private\n   * @memberof Meeting\n   */\n  mediaNegotiatedEvent = () => {\n    if (this.config.experimental.enableMediaNegotiatedEvent) {\n      LoggerProxy.logger.info('Meeting:mediaNegotiatedEvent --> Media server negotiated');\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'mediaNegotiatedEvent'\n        },\n        EVENT_TRIGGERS.MEDIA_NEGOTIATED,\n      );\n    }\n  };\n\n  /**\n   * Checks if there are any queued media updates and runs the first one from\n   * the queue if we are in a state that allows doing that.\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  processNextQueuedMediaUpdate = () => {\n    if (this.canUpdateMedia() && (this.queuedMediaUpdates.length > 0)) {\n      const {\n        pendingPromiseResolve, pendingPromiseReject, mediaUpdateType, options\n      } = this.queuedMediaUpdates.shift();\n\n      LoggerProxy.logger.log(`Meeting:index#processNextQueuedMediaUpdate --> performing delayed media update type=${mediaUpdateType}`);\n      switch (mediaUpdateType) {\n        case MEDIA_UPDATE_TYPE.ALL:\n          this.updateMedia(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        case MEDIA_UPDATE_TYPE.AUDIO:\n          this.updateAudio(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        case MEDIA_UPDATE_TYPE.VIDEO:\n          this.updateVideo(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        case MEDIA_UPDATE_TYPE.SHARE:\n          this.updateShare(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        default:\n          LoggerProxy.logger.error(`Peer-connection-manager:index#processNextQueuedMediaUpdate --> unsupported media update type ${mediaUpdateType} found in the queue`);\n          break;\n      }\n    }\n  };\n\n  /**\n   * A confluence of updateAudio, updateVideo, and updateShare\n   * this function re-establishes all of the media streams with new options\n   * @param {Object} options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @param {MediaDirection} options.mediaSettings\n   * @returns {Promise}\n   * @todo fix setRemoteStream for updateMedia\n   * @public\n   * @memberof Meeting\n   */\n  updateMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#updateMedia -->';\n\n    if (!this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.ALL, options);\n    }\n    const {\n      localStream, localShare, mediaSettings\n    } = options;\n\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.preMedia(localStream, localShare, mediaSettings))\n      .then(() => Media.updateMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx,\n        enableExtmap: this.config.enableExtmap,\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection received from updateMedia, ${peerConnection}`);\n          this.setRemoteStream(peerConnection);\n          if (mediaSettings.receiveShare || localShare) {\n            PeerConnectionManager.setContentSlides(peerConnection);\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error updatedMedia, `, error);\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.UPDATE_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() =>\n          logRequest(this.roap\n            .sendRoapMediaRequest({\n              sdp: this.mediaProperties.peerConnection.sdp,\n              roapSeq: this.roapSeq,\n              meeting: this, // or can pass meeting ID\n            }),\n          {\n            header: `${LOG_HEADER} sendRoapMediaRequest being sent`,\n            success: `${LOG_HEADER} sendRoadMediaRequest successful`,\n            failure: `${LOG_HEADER} Error updateMedia on send roap media request, `\n          }))\n        .then(() => this.checkForStopShare(mediaSettings.sendShare, previousSendShareStatus))\n        .then((startShare) => {\n          // This is a special case if we do an /floor grant followed by /media\n          // we actually get a OFFER from the server and a GLAR condition happens\n          if (startShare) {\n            // We are assuming that the clients are connected when doing an update\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }));\n  }\n\n  /**\n   * Update the main audio track with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendAudio\n   * @param {boolean} options.receiveAudio\n   * @param {MediaStream} options.stream Stream that contains the audio track to update\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  async updateAudio(options) {\n    if (!this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.AUDIO, options);\n    }\n    const {\n      sendAudio, receiveAudio, stream\n    } = options;\n\n    const {audioTransceiver} = this.mediaProperties.peerConnection;\n    let track = MeetingUtil.getTrack(stream).audioTrack;\n\n    if (typeof sendAudio !== 'boolean' || typeof receiveAudio !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendAudio and receiveAudio parameter'));\n    }\n\n    if (this.effects && this.effects.state) {\n      const bnrEnabled = this.effects.state.bnr.enabled;\n\n      if (sendAudio && !this.isAudioMuted() && (bnrEnabled === BNR_STATUS.ENABLED || bnrEnabled === BNR_STATUS.SHOULD_ENABLE)) {\n        LoggerProxy.logger.info('Meeting:index#updateAudio. Calling WebRTC enable bnr method');\n        track = await this.internal_enableBNR(track);\n        LoggerProxy.logger.info('Meeting:index#updateAudio. WebRTC enable bnr request completed');\n      }\n    }\n\n    return MeetingUtil.validateOptions({sendAudio, localStream: stream})\n      .then(() => {\n        let previousMediaDirection = {};\n\n        if (this.mediaProperties.mediaDirection) {\n          previousMediaDirection = {\n            sendTrack: this.mediaProperties.mediaDirection.sendAudio,\n            receiveTrack: this.mediaProperties.mediaDirection.receiveAudio\n          };\n        }\n        else {\n          this.mediaProperties.mediaDirection = {};\n        }\n\n        return MeetingUtil.updateTransceiver(\n          {\n            type: 'audio',\n            sendTrack: options.sendAudio,\n            receiveTrack: options.receiveAudio,\n            track,\n            transceiver: audioTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            meeting: this,\n            id: this.id\n          }\n        );\n      })\n      .then(() => {\n        this.setLocalAudioTrack(track);\n        this.mediaProperties.mediaDirection.sendAudio = sendAudio;\n        this.mediaProperties.mediaDirection.receiveAudio = receiveAudio;\n\n        // audio state could be undefined if you have not sent audio before\n        this.audio = this.audio || createMuteState(AUDIO, this, this.mediaProperties.mediaDirection);\n      });\n  }\n\n  /**\n   * Update the main video track with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendVideo\n   * @param {boolean} options.receiveVideo\n   * @param {MediaStream} options.stream Stream that contains the video track to update\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateVideo(options) {\n    if (!this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.VIDEO, options);\n    }\n    const {sendVideo, receiveVideo, stream} = options;\n    const {videoTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendVideo !== 'boolean' || typeof receiveVideo !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendVideo, localStream: stream})\n      .then(() => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: options.sendVideo,\n        receiveTrack: options.receiveVideo,\n        track,\n        transceiver: videoTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendVideo,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveVideo\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        meeting: this,\n        id: this.id\n      }))\n      .then(() => {\n        this.setLocalVideoTrack(track);\n        this.mediaProperties.mediaDirection.sendVideo = sendVideo;\n        this.mediaProperties.mediaDirection.receiveVideo = receiveVideo;\n\n        // video state could be undefined if you have not sent video before\n        this.video = this.video || createMuteState(VIDEO, this, this.mediaProperties.mediaDirection);\n      });\n  }\n\n  /**\n   * Internal function when stopping a share stream, cleanup\n   * @param {boolean} sendShare\n   * @param {boolean} previousShareStatus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  checkForStopShare(sendShare, previousShareStatus) {\n    if (sendShare && !previousShareStatus) {\n      // When user starts sharing\n      return Promise.resolve(true);\n    }\n\n    if (!sendShare && previousShareStatus) {\n      // When user stops sharing\n      return this.stopFloorRequest()\n        .then(() => Promise.resolve(false));\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Update the share streams, can be used to start sharing\n   * @param {Object} options\n   * @param {boolean} options.sendShare\n   * @param {boolean} options.receiveShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateShare(options) {\n    if (!options.skipSignalingCheck && !this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.SHARE, options);\n    }\n    const {sendShare, receiveShare, stream} = options;\n    const {shareTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendShare !== 'boolean' || typeof receiveShare !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendShare and receiveShare parameter'));\n    }\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    this.setLocalShareTrack(stream);\n\n    return MeetingUtil.validateOptions({sendShare, localShare: stream})\n      .then(() => this.checkForStopShare(sendShare, previousSendShareStatus))\n      .then((startShare) => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: sendShare,\n        receiveTrack: receiveShare,\n        track,\n        transceiver: shareTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendShare,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveShare\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        meeting: this,\n        id: this.id\n      })\n        .then(() => {\n          if (startShare) {\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }))\n      .then(() => {\n        this.mediaProperties.mediaDirection.sendShare = sendShare;\n        this.mediaProperties.mediaDirection.receiveShare = receiveShare;\n      })\n      .catch((error) => {\n        this.unsetLocalShareTrack(stream);\n        throw error;\n      })\n      .finally(() => {\n        const delay = 1e3;\n        // Check to see if share was stopped natively before onended was assigned.\n        const sharingModeIsActive = this.mediaProperties.peerConnection.shareTransceiver.direction === SENDRECV;\n        const isSharingOutOfSync = sharingModeIsActive && !this.isLocalShareLive;\n\n        if (isSharingOutOfSync) {\n          // Adding a delay to avoid a 409 from server\n          // which results in user still appearing as if sharing.\n          // Also delay give time for changes to peerConnection.\n          setTimeout(\n            () => this.handleShareTrackEnded(stream),\n            delay\n          );\n        }\n      });\n  }\n\n  /**\n   * Do all the attach media pre set up before executing the actual attach\n   * @param {MediaStream} localStream\n   * @param {MediaStream} localShare\n   * @param {MediaDirection} mediaSettings\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  preMedia(localStream, localShare, mediaSettings) {\n    // eslint-disable-next-line no-warning-comments\n    // TODO wire into default config. There's currently an issue with the stateless plugin or how we register\n    this.mediaProperties.setMediaDirection(Object.assign(this.config.mediaSettings, mediaSettings));\n    // add a setup a function move the create and setup media in future\n    // TODO: delete old audio and video if stale\n    this.audio = this.audio || createMuteState(AUDIO, this, this.mediaProperties.mediaDirection);\n    this.video = this.video || createMuteState(VIDEO, this, this.mediaProperties.mediaDirection);\n    // Validation is already done in addMedia so no need to check if the lenght is greater then 0\n    this.setLocalTracks(localStream);\n    this.setLocalShareTrack(localShare);\n  }\n\n  /**\n   * Acknowledge the meeting, outgoing or incoming\n   * @param {String} type\n   * @returns {Promise} resolve {message, ringing, response}\n   * @public\n   * @memberof Meeting\n   */\n  acknowledge(type) {\n    if (!type) {\n      return Promise.reject(new ParameterError('Type must be set to acknowledge the meeting.'));\n    }\n    if (type === _INCOMING_) {\n      return this.meetingRequest\n        .acknowledgeMeeting({\n          locusUrl: this.locusUrl,\n          deviceUrl: this.deviceUrl,\n          correlationId: this.correlationId\n        })\n        .then((response) => Promise.resolve(response))\n        .then((response) => {\n          this.meetingFiniteStateMachine.ring(type);\n          Metrics.postEvent({event: eventType.ALERT_DISPLAYED, meeting: this});\n\n          return Promise.resolve({\n            response\n          });\n        });\n    }\n\n    // TODO: outside of 1:1 incoming, and all outgoing calls\n    return Promise.resolve({\n      message: 'noop'\n    });\n  }\n\n  /**\n   * Decline this meeting\n   * @param {String} reason\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  decline(reason) {\n    return MeetingUtil.declineMeeting(this, reason).then((decline) => {\n      this.meetingFiniteStateMachine.decline();\n\n      return Promise.resolve(decline);\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Leave the current meeting\n   * @param {Object} options leave options\n   * @param {String} options.resourceId the device with which to leave from, empty if just the computer\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  leave(options = {}) {\n    Metrics.postEvent({event: eventType.LEAVE, meeting: this, data: {trigger: trigger.USER_INTERACTION, canProceed: false}});\n    const leaveReason = options.reason || MEETING_REMOVED_REASON.CLIENT_LEAVE_REQUEST;\n\n    LoggerProxy.logger.log('Meeting:index#leave --> Leaving a meeting');\n\n    return MeetingUtil.leaveMeeting(this, options)\n      .then((leave) => {\n        this.meetingFiniteStateMachine.leave();\n        this.clearMeetingData();\n\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // TODO: more testing before we remove this code, we are not sure the scenarios for destroy here\n        if (this.wirelessShare || this.guest) {\n          // If screen sharing clean the meeting object\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'leave'\n            },\n            EVENTS.DESTROY_MEETING,\n            {\n              reason: options.reason,\n              meetingId: this.id\n            }\n          );\n        }\n        LoggerProxy.logger.log('Meeting:index#leave --> LEAVE REASON ', leaveReason);\n\n        return leave;\n      }).catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#leave --> Failed to leave ', error);\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MEETING_LEAVE_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Start sharing whiteboard given channelUrl\n   * @param {string} channelUrl whiteboard url\n   * @param {String} resourceToken token created by authorize media injector\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  startWhiteboardShare(channelUrl, resourceToken) {\n    const whiteboard = this.locusInfo.mediaShares.find((element) => element.name === 'whiteboard');\n\n    if (!channelUrl) {\n      return Promise.reject(new ParameterError('Cannot share without channelUrl.'));\n    }\n\n    if (whiteboard) {\n      Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_INITIATED, meeting: this});\n\n      const body = {\n        disposition: FLOOR_ACTION.GRANTED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: whiteboard.url,\n        resourceUrl: channelUrl\n      };\n\n      if (resourceToken) {\n        body.resourceToken = resourceToken;\n      }\n\n      return this.meetingRequest.changeMeetingFloor(body)\n        .then(() => {\n          this.isSharing = false;\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#startWhiteboardShare --> Error ', error);\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.MEETING_START_WHITEBOARD_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack,\n              board: {channelUrl}\n            }\n          );\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without whiteboard.'));\n  }\n\n  /**\n   * Stop sharing whiteboard given channelUrl\n   * @param {string} channelUrl whiteboard url\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  stopWhiteboardShare(channelUrl) {\n    const whiteboard = this.locusInfo.mediaShares.find((element) => element.name === 'whiteboard');\n\n    if (whiteboard) {\n      Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_STOPPED, meeting: this});\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.RELEASED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: whiteboard.url\n      })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#stopWhiteboardShare --> Error ', error);\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.STOP_WHITEBOARD_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack,\n              board: {channelUrl}\n            }\n          );\n\n          return Promise.reject(error);\n        })\n        .finally(() => {\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without whiteboard.'));\n  }\n\n  /**\n   * Start sharing content with server\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  share() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && (this.shareStatus !== SHARE_STATUS.LOCAL_SHARE_ACTIVE)) {\n      Metrics.postEvent({event: eventType.SHARE_INITIATED, meeting: this});\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.GRANTED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .then(() => {\n          this.isSharing = true;\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#share --> Error ', error);\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.MEETING_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without content.'));\n  }\n\n  /**\n   * Stops the screen share\n   * @returns {Promise} see #updateShare\n   * @public\n   * @memberof Meeting\n   */\n  // Internal only, temporarily allows optional params\n  // eslint-disable-next-line valid-jsdoc\n  stopShare(options = {}) {\n    return this.updateShare({\n      sendShare: false,\n      receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n      ...options\n    });\n  }\n\n  /**\n   * sends stops floor request\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  stopFloorRequest() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && (this.mediaProperties.mediaDirection.sendShare)) {\n      Metrics.postEvent({event: eventType.SHARE_STOPPED, meeting: this});\n      Media.stopTracks(this.mediaProperties.shareTrack);\n\n      if (content.floor.beneficiary.id !== this.selfId) {\n        // remote participant started sharing and caused our sharing to stop, we don't want to send any floor action request in that case\n        this.isSharing = false;\n\n        return Promise.resolve();\n      }\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.RELEASED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#stopFloorRequest --> Error ', error);\n\n          Metrics.sendBehavioralMetric(\n            BEHAVIORAL_METRICS.STOP_FLOOR_REQUEST_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        })\n        .finally(() => {\n          this.isSharing = false;\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without content'));\n  }\n\n  /**\n   * Intiate a recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  startRecording() {\n    return MeetingUtil.startRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * End the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  stopRecording() {\n    return MeetingUtil.stopRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Pauses the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  pauseRecording() {\n    return MeetingUtil.pauseRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Resumes the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  resumeRecording() {\n    return MeetingUtil.resumeRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Locks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  lockMeeting() {\n    return MeetingUtil.lockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Unlocks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  unlockMeeting() {\n    return MeetingUtil.unlockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Logs an error message and returns a rejected promise with same message\n   * @param {String} message\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  rejectWithErrorLog(message) {\n    LoggerProxy.logger.error(message);\n\n    return Promise.reject(new Error(message));\n  }\n\n  /**\n   * Sends DTMF tones to the current meeting\n   * @param {String} tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  sendDTMF(tones) {\n    if (this.locusInfo && this.locusInfo.self) {\n      if (this.locusInfo.self.enableDTMF) {\n        return this.meetingRequest\n          .sendDTMF({\n            locusUrl: this.locusInfo.self.url,\n            deviceUrl: this.deviceUrl,\n            tones\n          });\n      }\n\n      return this.rejectWithErrorLog('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have DTMF enabled');\n    }\n\n    return this.rejectWithErrorLog('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have a connection to the \"locus\" call control service. Have you joined?');\n  }\n\n  /**\n   * Sends request to change layout type for the current meeting for the specific participant/device only\n   * @param {String} [layoutType] a layout type that should be available in meeting constants {@link #layout_types}\n   * @param {Object} renderInfo preferred dimensions for the remote main and content streams (server can ignore it)\n   * @param {Object} renderInfo.main preferred dimensions for the remote main video stream\n   * @param {Number} renderInfo.main.width preferred width of main video stream\n   * @param {Number} renderInfo.main.height preferred height of main video stream\n   * @param {Object} renderInfo.content preferred dimensions for the remote content share stream\n   * @param {Number} renderInfo.content.width preferred width of content share stream\n   * @param {Number} renderInfo.content.height preferred height of content share stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  changeVideoLayout(layoutType, renderInfo = {}) {\n    const {main, content} = renderInfo;\n    const {mediaDirection, remoteShare, remoteVideoTrack} = this.mediaProperties;\n\n    const layoutInfo = cloneDeep(this.lastVideoLayoutInfo);\n\n    // TODO: We need a real time value for Audio, Video and Share send indicator\n    if (mediaDirection.receiveVideo !== true || !remoteVideoTrack) {\n      return this.rejectWithErrorLog('Meeting:index#changeVideoLayout --> cannot change video layout, you are not recieving any video/share stream');\n    }\n\n    if (layoutType) {\n      if (!LAYOUT_TYPES.includes(layoutType)) {\n        this.rejectWithErrorLog('Meeting:index#changeVideoLayout --> cannot change video layout, invalid layoutType recieved.');\n      }\n\n      layoutInfo.layoutType = layoutType;\n    }\n\n    if (main) {\n      const mainWidth = Math.round(main.width);\n      const mainHeight = Math.round(main.height);\n\n      // Stop any \"twitching\" caused by very slight size changes\n      if (\n        !this.lastVideoLayoutInfo.main ||\n        Math.abs(this.lastVideoLayoutInfo.main.height - mainHeight) > 2 ||\n        Math.abs(this.lastVideoLayoutInfo.main.width - mainWidth) > 2\n      ) {\n        layoutInfo.main = {width: mainWidth, height: mainHeight};\n      }\n    }\n\n    if (content) {\n      if (this.mediaProperties.mediaDirection.receiveShare && remoteShare) {\n        const contentWidth = Math.round(content.width);\n        const contentHeight = Math.round(content.height);\n\n        // Stop any \"twitching\" caused by very slight size changes\n        if (!this.lastVideoLayoutInfo.content ||\n          Math.abs(this.lastVideoLayoutInfo.content.height - contentHeight) > 2 ||\n          Math.abs(this.lastVideoLayoutInfo.content.width - contentWidth) > 2\n        ) {\n          layoutInfo.content = {width: contentWidth, height: contentHeight};\n        }\n      }\n      else {\n        return this.rejectWithErrorLog('Meeting:index#changeVideoLayout --> unable to send renderInfo for content, you are not receiving remote share');\n      }\n    }\n\n    if (isEqual(layoutInfo, this.lastVideoLayoutInfo)) {\n      // nothing changed, no need to send any request\n      return Promise.resolve();\n    }\n    this.lastVideoLayoutInfo = cloneDeep(layoutInfo);\n\n    this.locusInfo.once(LOCUSINFO.EVENTS.CONTROLS_MEETING_LAYOUT_UPDATED, (envelope) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'changeVideoLayout',\n        },\n        EVENT_TRIGGERS.MEETING_CONTROLS_LAYOUT_UPDATE,\n        {\n          layout: envelope.layout\n        }\n      );\n    });\n\n    return this.meetingRequest\n      .changeVideoLayoutDebounced({\n        locusUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        layoutType,\n        main: layoutInfo.main,\n        content: layoutInfo.content\n      })\n      .then((response) => {\n        if (response && response.body && response.body.locus) {\n          this.locusInfo.onFullLocus(response.body.locus);\n        }\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#changeVideoLayout --> Error ', error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Sets the quality of the local video stream\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setLocalVideoQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setLocalVideoQuality --> Setting quality to ${level}`);\n\n    if (!VIDEO_RESOLUTIONS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setLocalVideoQuality --> ${level} not defined`);\n    }\n\n    if (!this.mediaProperties.mediaDirection.sendVideo) {\n      return this.rejectWithErrorLog('Meeting:index#setLocalVideoQuality --> unable to change video quality, sendVideo is disabled');\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.localQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setLocalQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setLocalQualityLevel(level);\n\n    const mediaDirection = {\n      sendAudio: this.mediaProperties.mediaDirection.sendAudio,\n      sendVideo: this.mediaProperties.mediaDirection.sendVideo,\n      sendShare: this.mediaProperties.mediaDirection.sendShare\n    };\n\n    return this.getMediaStreams(mediaDirection, VIDEO_RESOLUTIONS[level])\n      .then(([localStream]) =>\n        this.updateVideo({\n          sendVideo: true,\n          receiveVideo: true,\n          stream: localStream\n        }));\n  }\n\n  /**\n   * Sets the quality level of the remote incoming media\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setRemoteQualityLevel(level) {\n    LoggerProxy.logger.log(`Meeting:index#setRemoteQualityLevel --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setRemoteQualityLevel --> ${level} not defined`);\n    }\n\n    if (!this.mediaProperties.mediaDirection.receiveAudio && !this.mediaProperties.mediaDirection.receiveVideo) {\n      return this.rejectWithErrorLog('Meeting:index#setRemoteQualityLevel --> unable to change remote quality, receiveVideo and receiveAudio is disabled');\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.remoteQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setRemoteQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setRemoteQualityLevel(level);\n\n    return this.updateMedia({mediaSettings: this.mediaProperties.mediaDirection});\n  }\n\n  /**\n   * Sets the quality level of all meeting media (incoming/outgoing)\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setMeetingQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setMeetingQuality --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setMeetingQuality --> ${level} not defined`);\n    }\n\n    const previousLevel = {\n      local: this.mediaProperties.localQualityLevel,\n      remote: this.mediaProperties.remoteQualityLevel\n    };\n\n    // If level is already the same, don't do anything\n    if (\n      level === this.mediaProperties.localQualityLevel &&\n      level === this.mediaProperties.remoteQualityLevel\n    ) {\n      LoggerProxy.logger.warn(`Meeting:index#setMeetingQuality --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Determine the direction of our current media\n    const {receiveAudio, receiveVideo, sendVideo} = this.mediaProperties.mediaDirection;\n\n    return (sendVideo ? this.setLocalVideoQuality(level) : Promise.resolve())\n      .then(() =>\n        ((receiveAudio || receiveVideo) ?\n          this.setRemoteQualityLevel(level) :\n          Promise.resolve()))\n      .catch((error) => {\n        // From troubleshooting it seems that the stream itself doesn't change the max-fs if the peer connection isn't stable\n        this.mediaProperties.setLocalQualityLevel(previousLevel.local);\n        this.mediaProperties.setRemoteQualityLevel(previousLevel.remote);\n\n        LoggerProxy.logger.error(`Meeting:index#setMeetingQuality --> ${error.message}`);\n\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.SET_MEETING_QUALITY_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n  * @param {Object} options parameter\n  * @param {Boolean} options.sendAudio send audio from the display share\n  * @param {Boolean} options.sendShare send video from the display share\n  * @param {Object} options.sharePreferences\n  * @param {MediaTrackConstraints} options.sharePreferences.shareConstraints constraints to apply to video\n  *   @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints}\n  * @param {Boolean} options.sharePreferences.highFrameRate if shareConstraints isn't provided, set default values based off of this boolean\n  * @returns {Promise}\n  */\n  shareScreen(options = {}) {\n    LoggerProxy.logger.log('Meeting:index#shareScreen --> Getting local share');\n\n    const shareConstraints = {\n      sendShare: true,\n      sendAudio: false,\n      ...options\n    };\n\n    return Media.getDisplayMedia(shareConstraints, this.config)\n      .then((shareStream) => this.updateShare({\n        sendShare: true,\n        receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n        stream: shareStream\n      }))\n      .catch((error) => {\n        // Whenever there is a failure when trying to access a user's display\n        // report it as an Behavioral metric\n        // This gives visibility into common errors and can help\n        // with further troubleshooting\n\n        // This metrics will get erros for getDisplayMedia and share errors for now\n        // TODO: The getDisplayMedia errors need to be moved inside `media.getDisplayMedia`\n        const metricName = BEHAVIORAL_METRICS.GET_DISPLAY_MEDIA_FAILURE;\n        const data = {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendBehavioralMetric(metricName, data, metadata);\n        throw new MediaError('Unable to retrieve display media stream', error);\n      });\n  }\n\n  /**\n   * Functionality for when a share is ended.\n   * @private\n   * @memberof Meeting\n   * @param {MediaStream} localShare\n   * @returns {undefined}\n   */\n  handleShareTrackEnded(localShare) {\n    if (this.wirelessShare) {\n      this.leave({reason: MEETING_REMOVED_REASON.USER_ENDED_SHARE_STREAMS});\n    }\n    else {\n      // Skip checking for a stable peerConnection\n      // to allow immediately stopping screenshare\n      this.stopShare({\n        skipSignalingCheck: true\n      })\n        .catch((error) => {\n          LoggerProxy.logger.log('Meeting:index#handleShareTrackEnded --> Error stopping share: ', error);\n        });\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'handleShareTrackEnded'\n      },\n      EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n      {\n        type: EVENT_TYPES.LOCAL_SHARE,\n        stream: localShare\n      }\n    );\n  }\n\n  /**\n   * Emits the 'network:quality' event\n   * 1 indicates an acceptable uplink network.\n   * 0 indicates an unacceptable uplink network based on a predefined threshold\n   * @returns {undefined}\n   * @param {Object} res - payload of emitNetworkQuality\n   * @property {string} mediaType {video|audio}\n   * @property {number} networkQualityScore - {1|0}\n   * @private\n   * @memberof Meeting\n   */\n  sendNetworkQualityEvent(res) {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'addMedia'\n      },\n      EVENT_TRIGGERS.NETWORK_QUALITY,\n      {\n        networkQualityScore: res.networkQualityScore,\n        mediaType: res.mediaType\n      }\n    );\n  }\n\n  /**\n   * Handle logging the media\n   * @param {Object} audioTrack The audio track\n   * @param {Object} videoTrack The video track\n   * @private\n   * @returns {undefined}\n   */\n  handleMediaLogging({audioTrack, videoTrack}) {\n    MeetingUtil.handleVideoLogging(videoTrack);\n    MeetingUtil.handleAudioLogging(audioTrack);\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setStartSetupDelay(typeMedia) {\n    this[`startSetupDelay${typeMedia}`] = performance.now();\n    this[`endSetupDelay${typeMedia}`] = undefined;\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setEndSetupDelay(typeMedia) {\n    this[`endSetupDelay${typeMedia}`] = performance.now();\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {string} duration between start and end of setup\n   */\n  getSetupDelayDuration(typeMedia) {\n    const start = this[`startSetupDelay${typeMedia}`];\n    const end = this[`endSetupDelay${typeMedia}`];\n\n    return (start && end) ? end - start : undefined;\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setStartSendingMediaDelay(typeMedia) {\n    this[`startSendingMediaDelay${typeMedia}`] = performance.now();\n    this[`endSendingMediaDelay${typeMedia}`] = undefined;\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setEndSendingMediaDelay(typeMedia) {\n    this[`endSendingMediaDelay${typeMedia}`] = performance.now();\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {string} duration between join response and first media tx\n   */\n  getSendingMediaDelayDuration(typeMedia) {\n    const start = this[`startSendingMediaDelay${typeMedia}`];\n    const end = this[`endSendingMediaDelay${typeMedia}`];\n\n    return (start && end) ? end - start : undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setStartLocalSDPGenRemoteSDPRecvDelay() {\n    if (!this.startLocalSDPGenRemoteSDPRecvDelay) {\n      this.startLocalSDPGenRemoteSDPRecvDelay = performance.now();\n      this.endLocalSDPGenRemoteSDPRecvDelay = undefined;\n    }\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setEndLocalSDPGenRemoteSDPRecvDelay() {\n    if (!this.endLocalSDPGenRemoteSDPRecvDelay) {\n      this.endLocalSDPGenRemoteSDPRecvDelay = performance.now();\n    }\n  }\n\n  /**\n   *\n   * @returns {string} duration between local SDP generation and remote SDP reception\n   */\n  getLocalSDPGenRemoteSDPRecvDelay() {\n    const start = this.startLocalSDPGenRemoteSDPRecvDelay;\n    const end = this.endLocalSDPGenRemoteSDPRecvDelay;\n\n    if (start && end) {\n      const calculatedDelay = end - start;\n\n      return calculatedDelay > METRICS_JOIN_TIMES_MAX_DURATION ?\n        undefined :\n        calculatedDelay;\n    }\n\n    return undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setStartCallInitiateJoinReq() {\n    this.startCallInitiateJoinReq = performance.now();\n    this.endCallInitiateJoinReq = undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setEndCallInitiateJoinReq() {\n    this.endCallInitiateJoinReq = performance.now();\n  }\n\n  /**\n   *\n   * @returns {string} duration between call initiate and sending join request to locus\n   */\n  getCallInitiateJoinReq() {\n    const start = this.startCallInitiateJoinReq;\n    const end = this.endCallInitiateJoinReq;\n\n    if (start && end) {\n      const calculatedDelay = end - start;\n\n      return calculatedDelay > METRICS_JOIN_TIMES_MAX_DURATION ?\n        undefined :\n        calculatedDelay;\n    }\n\n    return undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setStartJoinReqResp() {\n    this.startJoinReqResp = performance.now();\n    this.endJoinReqResp = undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setEndJoinReqResp() {\n    this.endJoinReqResp = performance.now();\n  }\n\n  /**\n   *\n   * @returns {string} duration between sending locus join request and receiving join response\n   */\n  getJoinReqResp() {\n    const start = this.startJoinReqResp;\n    const end = this.endJoinReqResp;\n\n    if (start && end) {\n      const calculatedDelay = end - start;\n\n      return calculatedDelay > METRICS_JOIN_TIMES_MAX_DURATION ?\n        undefined :\n        calculatedDelay;\n    }\n\n    return undefined;\n  }\n\n  /**\n   *\n   * @returns {string} duration between call initiate and successful locus join (even if it is in lobby)\n   */\n  getTotalJmt() {\n    const start = this.startCallInitiateJoinReq;\n    const end = this.endJoinReqResp;\n\n    return (start && end) ? end - start : undefined;\n  }\n\n\n  /**\n   * End the current meeting for all\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  endMeetingForAll() {\n    Metrics.postEvent({event: eventType.LEAVE, meeting: this, data: {trigger: trigger.USER_INTERACTION, canProceed: false}});\n\n    LoggerProxy.logger.log('Meeting:index#endMeetingForAll --> End meeting for All');\n    Metrics.sendBehavioralMetric(\n      BEHAVIORAL_METRICS.MEETING_END_ALL_INITIATED,\n      {\n        correlation_id: this.correlationId,\n        locus_id: this.locusId\n      }\n    );\n\n    return MeetingUtil.endMeetingForAll(this)\n      .then((end) => {\n        this.meetingFiniteStateMachine.end();\n\n        this.clearMeetingData();\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'endMeetingForAll'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        return end;\n      }).catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#endMeetingForAll --> Failed to end meeting ', error);\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'endMeetingForAll'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.MEETING_END_ALL_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * clear the meeting data\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  clearMeetingData = () => {\n    this.audio = null;\n    this.video = null;\n    this.isSharing = false;\n    if (this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE) {\n      this.shareStatus = SHARE_STATUS.NO_SHARE;\n    }\n    this.queuedMediaUpdates = [];\n\n    if (this.transcription) {\n      this.transcription.closeSocket();\n      this.triggerStopReceivingTranscriptionEvent();\n      this.transcription = undefined;\n    }\n  };\n\n  /**\n   * Internal API to return status of BNR\n   * @returns {Boolean}\n   * @public\n   * @memberof Meeting\n   */\n  isBnrEnabled() {\n    return this.effects && this.effects.isBnrEnabled();\n  }\n\n  /**\n   * Internal API to obtain BNR enabled MediaStream\n   * @returns {Promise<MediaStreamTrack>}\n   * @private\n   * @param {MedaiStreamTrack} audioTrack from updateAudio\n   * @memberof Meeting\n   */\n  async internal_enableBNR(audioTrack) {\n    try {\n      LoggerProxy.logger.info('Meeting:index#internal_enableBNR. Internal enable BNR called');\n      const bnrAudioTrack = await WebRTCMedia.Effects.BNR.enableBNR(audioTrack);\n\n      LoggerProxy.logger.info('Meeting:index#internal_enableBNR. BNR enabled track obtained from WebRTC & returned as stream');\n\n      return bnrAudioTrack;\n    }\n    catch (error) {\n      LoggerProxy.logger.error('Meeting:index#internal_enableBNR.', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Enable the audio track with BNR for a meeting\n   * @returns {Promise} resolves the data from enable bnr or rejects if there is no audio or audio is muted\n   * @public\n   * @memberof Meeting\n   */\n  enableBNR() {\n    if (typeof this.mediaProperties === 'undefined' || typeof this.mediaProperties.audioTrack === 'undefined') {\n      return Promise.reject(new Error(\"Meeting doesn't have an audioTrack attached\"));\n    }\n\n    if (this.isAudioMuted()) {\n      return Promise.reject(new Error('Cannot enable BNR while meeting is muted'));\n    }\n\n    this.effects = this.effects || createEffectsState('BNR');\n\n    const LOG_HEADER = 'Meeting:index#enableBNR -->';\n\n    return logRequest(this.effects.handleClientRequest(true, this)\n      .then((res) => {\n        LoggerProxy.logger.info('Meeting:index#enableBNR. Enable bnr completed');\n\n        return res;\n      })\n      .catch((error) => {\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} enable bnr`,\n      success: `${LOG_HEADER} enable bnr success`,\n      failure: `${LOG_HEADER} enable bnr failure, `\n    });\n  }\n\n  /**\n   * Disable the BNR for an audio track\n   * @returns {Promise} resolves the data from disable bnr or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  disableBNR() {\n    if (typeof this.mediaProperties === 'undefined' || typeof this.mediaProperties.audioTrack === 'undefined') {\n      return Promise.reject(new Error(\"Meeting doesn't have an audioTrack attached\"));\n    }\n\n    if (!this.isBnrEnabled()) {\n      return Promise.reject(new Error('Can not disable as BNR is not enabled'));\n    }\n\n    this.effects = this.effects || createEffectsState('BNR');\n\n    const LOG_HEADER = 'Meeting:index#disableBNR -->';\n\n    return logRequest(this.effects.handleClientRequest(false, this)\n      .then((res) => {\n        LoggerProxy.logger.info('Meeting:index#disableBNR. Disable bnr completed');\n\n        return res;\n      })\n      .catch((error) => {\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} disable bnr`,\n      success: `${LOG_HEADER} disable bnr success`,\n      failure: `${LOG_HEADER} disable bnr failure, `\n    });\n  }\n\n  /**\n   * starts keepAlives being sent\n   * @returns {void}\n   * @private\n   * @memberof Meeting\n   */\n  startKeepAlive = () => {\n    if (this.keepAliveTimerId) {\n      LoggerProxy.logger.warn('Meeting:index#startKeepAlive --> keepAlive not started: keepAliveTimerId already exists');\n\n      return;\n    }\n    if (!this.joinedWith?.keepAliveUrl) {\n      LoggerProxy.logger.warn('Meeting:index#startKeepAlive --> keepAlive not started: no keepAliveUrl');\n\n      return;\n    }\n    if (!this.joinedWith?.keepAliveSecs) {\n      LoggerProxy.logger.warn('Meeting:index#startKeepAlive --> keepAlive not started: no keepAliveSecs');\n\n      return;\n    }\n    if (this.joinedWith.keepAliveSecs <= 1) {\n      LoggerProxy.logger.warn('Meeting:index#startKeepAlive --> keepAlive not started: keepAliveSecs <= 1');\n\n      return;\n    }\n    const {keepAliveUrl} = this.joinedWith;\n    const keepAliveInterval = (this.joinedWith.keepAliveSecs - 1) * 750; // taken from UCF\n\n    this.keepAliveTimerId = setInterval(() => {\n      this.meetingRequest.keepAlive({keepAliveUrl})\n        .catch((error) => {\n          LoggerProxy.logger.warn(\n            `Meeting:index#startKeepAlive --> Stopping sending keepAlives to ${keepAliveUrl} after error ${error}`\n          );\n          this.stopKeepAlive();\n        });\n    }, keepAliveInterval);\n  };\n\n  /**\n   * stops keepAlives being sent\n   * @returns {void}\n   * @private\n   * @memberof Meeting\n   */\n  stopKeepAlive = () => {\n    if (!this.keepAliveTimerId) {\n      return;\n    }\n    clearInterval(this.keepAliveTimerId);\n    this.keepAliveTimerId = null;\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAyCA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAGA,wBAAoB,IAAAA,yBAAA,GAApB;AAAA,IAAOC,SAAP,qBAAOA,SAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,QAAwD;EAAA,uBAA7CC,MAA6C;EAAA,IAA7CA,MAA6C,4BAApC,EAAoC;EAAA,wBAAhCC,OAAgC;EAAA,IAAhCA,OAAgC,6BAAtB,EAAsB;EAAA,wBAAlBC,OAAkB;EAAA,IAAlBA,OAAkB,6BAAR,EAAQ;;EACzEC,oBAAA,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBL,MAAxB;;EAEA,OAAOD,OAAO,CACXO,IADI,CACC,UAACC,GAAD,EAAS;IACbJ,oBAAA,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBJ,OAAxB;;IAEA,OAAOM,GAAP;EACD,CALI,EAMJC,KANI,CAME,UAACC,KAAD,EAAW;IAChBN,oBAAA,CAAYC,MAAZ,CAAmBK,KAAnB,CAAyBP,OAAzB,EAAkCO,KAAlC;;IACA,MAAMA,KAAN;EACD,CATI,CAAP;AAUD,CAbD;;AAeO,IAAMC,iBAAiB,GAAG;EAC/BC,GAAG,EAAE,KAD0B;EAE/BC,KAAK,EAAE,OAFwB;EAG/BC,KAAK,EAAE,OAHwB;EAI/BC,KAAK,EAAE;AAJwB,CAA1B;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;IACqBC,O;;;;;EAGnB;AACF;AACA;AACA;AACA;AACA;EACE,iBAAYC,KAAZ,EAAmBC,QAAnB,EAA4B;IAAA;;IAAA;IAC1B,0BAAM,EAA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"}