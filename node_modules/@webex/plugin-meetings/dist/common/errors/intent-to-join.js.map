{"version":3,"names":["IntentToJoinError","message","ERROR_DICTIONARY","INTENT_TO_JOIN","MESSAGE","error","name","NAME","sdkMessage","stack","Error","joinIntentRequired","code","CODE"],"sources":["intent-to-join.js"],"sourcesContent":["import {ERROR_DICTIONARY} from '../../constants';\n\n/**\n * Extended Error object to signify the intent to join for unclaimed PMR scenarios\n */\nexport default class IntentToJoinError extends Error {\n  /**\n  *\n  * @constructor\n  * @param {String} [message]\n  * @param {Object} [error]\n  */\n  constructor(message = ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE, error = null) {\n    super(message);\n    this.name = ERROR_DICTIONARY.INTENT_TO_JOIN.NAME;\n    this.sdkMessage = ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE;\n    this.error = error;\n    this.stack = error ? error.stack : (new Error()).stack;\n    this.joinIntentRequired = true;\n    this.code = ERROR_DICTIONARY.INTENT_TO_JOIN.CODE;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;AACA;AACA;IACqBA,iB;;;;;EACnB;AACF;AACA;AACA;AACA;AACA;EACE,6BAA6E;IAAA;;IAAA,IAAjEC,OAAiE,uEAAvDC,2BAAA,CAAiBC,cAAjB,CAAgCC,OAAuB;IAAA,IAAdC,KAAc,uEAAN,IAAM;IAAA;IAC3E,0BAAMJ,OAAN;IACA,MAAKK,IAAL,GAAYJ,2BAAA,CAAiBC,cAAjB,CAAgCI,IAA5C;IACA,MAAKC,UAAL,GAAkBN,2BAAA,CAAiBC,cAAjB,CAAgCC,OAAlD;IACA,MAAKC,KAAL,GAAaA,KAAb;IACA,MAAKI,KAAL,GAAaJ,KAAK,GAAGA,KAAK,CAACI,KAAT,GAAkB,IAAIC,KAAJ,EAAD,CAAcD,KAAjD;IACA,MAAKE,kBAAL,GAA0B,IAA1B;IACA,MAAKC,IAAL,GAAYV,2BAAA,CAAiBC,cAAjB,CAAgCU,IAA5C;IAP2E;EAQ5E;;;+CAf4CH,K"}