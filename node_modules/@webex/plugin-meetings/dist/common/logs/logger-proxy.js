"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _loggerConfig = _interopRequireDefault(require("./logger-config"));

/* eslint-disable no-unused-vars */
var LoggerProxy = {
  logger: {
    info: function info(args) {
      console.error('LoggerProxy->info#NO LOGGER DEFINED');
    },
    log: function log(args) {
      console.error('LoggerProxy->log#NO LOGGER DEFINED');
    },
    error: function error(args) {
      console.error('LoggerProxy->error#NO LOGGER DEFINED');
    },
    warn: function warn(args) {
      console.error('LoggerProxy->warn#NO LOGGER DEFINED');
    },
    trace: function trace(args) {
      console.error('LoggerProxy->trace#NO LOGGER DEFINED');
    },
    debug: function debug(args) {
      console.error('LoggerProxy->debug#NO LOGGER DEFINED');
    }
  }
};

LoggerProxy.set = function (logger) {
  if (!_loggerConfig.default.enable) {
    LoggerProxy.logger = {
      info: function info() {},
      log: function log() {},
      error: function error() {},
      warn: function warn() {},
      trace: function trace() {},
      debug: function debug() {}
    };
  } else {
    LoggerProxy.logger = logger;
  }
};

LoggerProxy.get = function () {
  return LoggerProxy.logger;
};

var _default = LoggerProxy;
exports.default = _default;
//# sourceMappingURL=logger-proxy.js.map
