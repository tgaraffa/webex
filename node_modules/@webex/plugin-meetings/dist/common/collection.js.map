{"version":3,"names":["Collection","property","ParameterError","propertyName","id","value","get","set","getAll"],"sources":["collection.ts"],"sourcesContent":["import {isString} from 'lodash';\n\nimport ParameterError from '../common/errors/parameter';\n\n/**\n * @class Collection\n */\nexport default class Collection {\n  namespace = 'Meetings';\n  propertyName: string;\n\n  /**\n   * @param {String} property\n   * @memberof Collection\n   */\n  constructor(property) {\n    if (!property || !isString(property)) {\n      throw new ParameterError('Collection expects a string to use as a property name.');\n    }\n    /**\n     * The property name for what collection will be stored, i.e., this.meetingInfos, this.meetings, etc.\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Meetings\n     */\n    this.propertyName = property;\n    /**\n     * The actual object for the collection\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof Meetings\n     */\n    this[this.propertyName] = {};\n  }\n\n  /**\n   * @param {String} id ID of the thing stuffed into the collection at id location\n   * @returns {Any} returns whatever is being stuffed into the collection\n   * @public\n   * @memberof Collection\n   */\n  get(id) {\n    return this[this.propertyName] && this[this.propertyName][id] ? this[this.propertyName][id] : null;\n  }\n\n  /**\n   * @param {String} id the id of the meeting info instance to add to the collection\n   * @param {Any} value the thing to set in the collection\n   * @returns {Any} returns the thing just put in the collection\n   * @public\n   * @memberof Collection\n   */\n  set(id, value) {\n    this[this.propertyName][id] = value;\n\n    return this.get(id);\n  }\n\n  /**\n   * remove the thing at the id\n   * @param {String} id ID of the thing you wish to delete from the collection\n   * @returns {undefined}\n   * @public\n   * @memberof Collection\n   */\n  delete(id) {\n    delete this[this.propertyName][id];\n  }\n\n  /**\n   * @returns {Object} returns an object map of things stuffed into the collection\n   * @public\n   * @memberof Collection\n   */\n  getAll() {\n    return this[this.propertyName];\n  }\n\n  /**\n   * @param {Object} set the replacement object\n   * @returns {Object} returns an object map of things stuffed into the collection\n   * @public\n   * @memberof Collection\n   */\n  setAll(set) {\n    this[this.propertyName] = set;\n\n    return this.getAll();\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;;AAEA;AACA;AACA;IACqBA,U;EAInB;AACF;AACA;AACA;EACE,oBAAYC,QAAZ,EAAsB;IAAA;IAAA,iDAPV,UAOU;IAAA;;IACpB,IAAI,CAACA,QAAD,IAAa,CAAC,wBAASA,QAAT,CAAlB,EAAsC;MACpC,MAAM,IAAIC,kBAAJ,CAAmB,wDAAnB,CAAN;IACD;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;IACI,KAAKC,YAAL,GAAoBF,QAApB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,KAAK,KAAKE,YAAV,IAA0B,EAA1B;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;;;WACE,aAAIC,EAAJ,EAAQ;MACN,OAAO,KAAK,KAAKD,YAAV,KAA2B,KAAK,KAAKA,YAAV,EAAwBC,EAAxB,CAA3B,GAAyD,KAAK,KAAKD,YAAV,EAAwBC,EAAxB,CAAzD,GAAuF,IAA9F;IACD;IAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,aAAIA,EAAJ,EAAQC,KAAR,EAAe;MACb,KAAK,KAAKF,YAAV,EAAwBC,EAAxB,IAA8BC,KAA9B;MAEA,OAAO,KAAKC,GAAL,CAASF,EAAT,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,iBAAOA,EAAP,EAAW;MACT,OAAO,KAAK,KAAKD,YAAV,EAAwBC,EAAxB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;WACE,kBAAS;MACP,OAAO,KAAK,KAAKD,YAAV,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,gBAAOI,GAAP,EAAY;MACV,KAAK,KAAKJ,YAAV,IAA0BI,GAA1B;MAEA,OAAO,KAAKC,MAAL,EAAP;IACD"}