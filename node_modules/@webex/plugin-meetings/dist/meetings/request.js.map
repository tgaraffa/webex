{"version":3,"names":["MeetingRequest","request","api","API","LOCUS","resource","RESOURCE","LOCI","then","res","determineRedirections","body","catch","error","LoggerProxy","logger","webex","internal","services","fetchClientRegionInfo","getMeetingPreferences","responseBody","remoteLocusClusterUrls","length","all","map","url","method","HTTP_VERBS","GET","runWhitelistedDomains","loci","concat","locusUrls","resolve","StatelessWebexPlugin"],"sources":["request.js"],"sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  HTTP_VERBS,\n  API,\n  RESOURCE\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  /**\n   *  get all the active meetings for the user\n   * @returns {Array} return locus array\n  */\n  getActiveMeetings() {\n    return this.request({\n      api: API.LOCUS,\n      resource: RESOURCE.LOCI\n    })\n      .then((res) => this.determineRedirections(res.body))\n      .catch((error) => {\n        LoggerProxy.logger.error(`Meetings:request#getActiveMeetings --> failed to get locus details, ${error}`);\n      });\n  }\n\n  /**\n   *  fetch geoHit for the user\n   * @returns {Promise<object>} geoHintInfo\n   */\n  fetchGeoHint() {\n    return this.webex.internal.services.fetchClientRegionInfo();\n  }\n\n  /**\n   * get user meeting preference information\n   * @returns {Promise<object>} getMeetingPreferences\n  */\n  getMeetingPreferences() {\n    return this.webex.internal.services.getMeetingPreferences();\n  }\n\n\n  // locus federation, determines and populate locus if the responseBody has remote URLs to fetch locus details\n\n  /**\n   *  Fetches indivdual locus rather then getting all at once\n   * @param {object} responseBody determine the locus and fetch them if a remoteUrl is given\n   * @returns {Promise}  returns locusObject array\n   */\n  determineRedirections(responseBody) {\n    if (responseBody.remoteLocusClusterUrls && responseBody.remoteLocusClusterUrls.length) {\n      return Promise.all(responseBody.remoteLocusClusterUrls.map((url) => this.request({\n        method: HTTP_VERBS.GET,\n        url,\n        runWhitelistedDomains: true // allows auth token for whitelisted domain\n      })\n        .then((res) => {\n          responseBody.loci = responseBody.loci.concat(res.body.loci);\n          responseBody.locusUrls = responseBody.locusUrls.concat(res.body.locusUrls);\n\n          return Promise.resolve(responseBody);\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`Meetings:request#determineRedirections --> failed to get locus details from url: ${url}, reason: ${error}`);\n        })))\n        .then(() => Promise.resolve(responseBody));\n    }\n\n    return Promise.resolve(responseBody);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;AAMA;AACA;AACA;IACqBA,c;;;;;;;;;;;;;IACnB;AACF;AACA;AACA;IACE,6BAAoB;MAAA;;MAClB,OAAO,KAAKC,OAAL,CAAa;QAClBC,GAAG,EAAEC,cAAA,CAAIC,KADS;QAElBC,QAAQ,EAAEC,mBAAA,CAASC;MAFD,CAAb,EAIJC,IAJI,CAIC,UAACC,GAAD;QAAA,OAAS,KAAI,CAACC,qBAAL,CAA2BD,GAAG,CAACE,IAA/B,CAAT;MAAA,CAJD,EAKJC,KALI,CAKE,UAACC,KAAD,EAAW;QAChBC,oBAAA,CAAYC,MAAZ,CAAmBF,KAAnB,+EAAgGA,KAAhG;MACD,CAPI,CAAP;IAQD;IAED;AACF;AACA;AACA;;;;WACE,wBAAe;MACb,OAAO,KAAKG,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BC,qBAA7B,EAAP;IACD;IAED;AACF;AACA;AACA;;;;WACE,iCAAwB;MACtB,OAAO,KAAKH,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BE,qBAA7B,EAAP;IACD,C,CAGD;;IAEA;AACF;AACA;AACA;AACA;;;;WACE,+BAAsBC,YAAtB,EAAoC;MAAA;;MAClC,IAAIA,YAAY,CAACC,sBAAb,IAAuCD,YAAY,CAACC,sBAAb,CAAoCC,MAA/E,EAAuF;QACrF,OAAO,iBAAQC,GAAR,CAAYH,YAAY,CAACC,sBAAb,CAAoCG,GAApC,CAAwC,UAACC,GAAD;UAAA,OAAS,MAAI,CAACzB,OAAL,CAAa;YAC/E0B,MAAM,EAAEC,qBAAA,CAAWC,GAD4D;YAE/EH,GAAG,EAAHA,GAF+E;YAG/EI,qBAAqB,EAAE,IAHwD,CAGnD;;UAHmD,CAAb,EAKjEtB,IALiE,CAK5D,UAACC,GAAD,EAAS;YACbY,YAAY,CAACU,IAAb,GAAoBV,YAAY,CAACU,IAAb,CAAkBC,MAAlB,CAAyBvB,GAAG,CAACE,IAAJ,CAASoB,IAAlC,CAApB;YACAV,YAAY,CAACY,SAAb,GAAyBZ,YAAY,CAACY,SAAb,CAAuBD,MAAvB,CAA8BvB,GAAG,CAACE,IAAJ,CAASsB,SAAvC,CAAzB;YAEA,OAAO,iBAAQC,OAAR,CAAgBb,YAAhB,CAAP;UACD,CAViE,EAWjET,KAXiE,CAW3D,UAACC,KAAD,EAAW;YAChBC,oBAAA,CAAYC,MAAZ,CAAmBF,KAAnB,4FAA6Ga,GAA7G,uBAA6Hb,KAA7H;UACD,CAbiE,CAAT;QAAA,CAAxC,CAAZ,EAcJL,IAdI,CAcC;UAAA,OAAM,iBAAQ0B,OAAR,CAAgBb,YAAhB,CAAN;QAAA,CAdD,CAAP;MAeD;;MAED,OAAO,iBAAQa,OAAR,CAAgBb,YAAhB,CAAP;IACD;;;EA5DyCc,+B"}