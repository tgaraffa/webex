{"version":3,"names":["PersonalMeetingRoom","attrs","options","MEETINGS","pmr","sipUri","link","userId","name","meetingInfo","personalMeetingRoomRequest","PersonalMeetingRoomRequest","pin","preferred","webex","internal","device","passcode","meetingAddress","claimPmr","then","body","set","reject","ParameterError","sipMeetingUri","meetingLink","webExMeetingLink","owner","meetingName","number","meetingNumber","type","_PERSONAL_ROOM_","fetchMeetingInfo","isPmr","TypeError","StatelessWebexPlugin"],"sources":["index.js"],"sourcesContent":["import {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {MEETINGS, _PERSONAL_ROOM_} from '../constants';\nimport ParameterError from '../common/errors/parameter';\n\nimport PersonalMeetingRoomRequest from './request';\n\n\n/**\n * @class PersonalMeetingRoom\n */\nexport default class PersonalMeetingRoom extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * The pmr server object\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof PersonalMeetingRoom\n    */\n    this.pmr = null;\n    /**\n     * The pmr sip Uri\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof PersonalMeetingRoom\n    */\n    this.sipUri = null;\n    /**\n     * The pmr link\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof PersonalMeetingRoom\n    */\n    this.link = null;\n    /**\n     * The pmr server object\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof PersonalMeetingRoom\n    */\n    this.userId = null;\n    /**\n     * The pmr name\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof PersonalMeetingRoom\n    */\n    this.name = null;\n    /**\n     * The meeting info request server interface\n     * @instance\n     * @type {MeetingInfo}\n     * @private\n     * @memberof PersonalMeetingRoom\n    */\n    this.meetingInfo = attrs.meetingInfo;\n    /**\n     * The pmr server request interface\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof PersonalMeetingRoom\n    */\n    this.personalMeetingRoomRequest = new PersonalMeetingRoomRequest({}, options);\n  }\n\n  /**\n   * claims a pmr and updates the cached PMR values\n   * @param {String} link\n   * @param {String} pin\n   * @param {Boolean} [preferred] defaults to true to set this claimed PMR as the preferred\n   * @returns {Promise}\n   * @public\n   * @memberof PersonalMeetingRoom\n   */\n  claim(link, pin, preferred = true) {\n    const options = {\n      userId: this.webex.internal.device.userId,\n      passcode: pin,\n      meetingAddress: link,\n      preferred\n    };\n\n    return this.personalMeetingRoomRequest.claimPmr(options).then((pmr) => {\n      if (pmr && pmr.body) {\n        this.set(pmr.body);\n      }\n      else {\n        return Promise.reject(new ParameterError('No PMR body provided. PMR values not updated.'));\n      }\n\n      return pmr.body;\n    });\n  }\n\n  /**\n   * @param {Object} body the response body from meeting info request\n   * @returns {undefined}\n   * @private\n   * @memberof PersonalMeetingRoom\n   */\n  set(body) {\n    this.pmr = body;\n    this.sipUri = body.sipMeetingUri;\n    this.meetingLink = body.webExMeetingLink || body.meetingLink;\n    this.userId = body.owner;\n    this.name = body.meetingName;\n    this.number = body.meetingNumber;\n  }\n\n  /**\n   * TODO: implement TTL for syncing and caching so to not request again and again\n   * @param {Object} options\n   * @returns {Promise}\n   * @public\n   * @memberof PersonalMeetingRoom\n   */\n  get() {\n    const options = {\n      type: _PERSONAL_ROOM_\n\n    };\n\n    return this.meetingInfo.fetchMeetingInfo(options).then((pmr) => {\n      if (pmr && pmr.body && pmr.body.isPmr) {\n        this.set(pmr.body);\n      }\n      else {\n        return Promise.reject(new TypeError('The PMR requested is NOT a PMR. PMR values not set.'));\n      }\n\n      return pmr.body;\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;;;;;AAGA;AACA;AACA;IACqBA,mB;;;;;EAGnB;AACF;AACA;AACA;AACA;EACE,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;IAAA;;IAAA;IAC1B,0BAAM,EAAN,EAAUA,OAAV;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IAR8B,wFAPhBC,mBAOgB;IAS1B,MAAKC,GAAL,GAAW,IAAX;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAKC,MAAL,GAAc,IAAd;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAKC,IAAL,GAAY,IAAZ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAKC,MAAL,GAAc,IAAd;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAKC,IAAL,GAAY,IAAZ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAKC,WAAL,GAAmBR,KAAK,CAACQ,WAAzB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAKC,0BAAL,GAAkC,IAAIC,gBAAJ,CAA+B,EAA/B,EAAmCT,OAAnC,CAAlC;IAzD0B;EA0D3B;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACE,eAAMI,IAAN,EAAYM,GAAZ,EAAmC;MAAA;;MAAA,IAAlBC,SAAkB,uEAAN,IAAM;MACjC,IAAMX,OAAO,GAAG;QACdK,MAAM,EAAE,KAAKO,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BT,MADrB;QAEdU,QAAQ,EAAEL,GAFI;QAGdM,cAAc,EAAEZ,IAHF;QAIdO,SAAS,EAATA;MAJc,CAAhB;MAOA,OAAO,KAAKH,0BAAL,CAAgCS,QAAhC,CAAyCjB,OAAzC,EAAkDkB,IAAlD,CAAuD,UAAChB,GAAD,EAAS;QACrE,IAAIA,GAAG,IAAIA,GAAG,CAACiB,IAAf,EAAqB;UACnB,MAAI,CAACC,GAAL,CAASlB,GAAG,CAACiB,IAAb;QACD,CAFD,MAGK;UACH,OAAO,iBAAQE,MAAR,CAAe,IAAIC,kBAAJ,CAAmB,+CAAnB,CAAf,CAAP;QACD;;QAED,OAAOpB,GAAG,CAACiB,IAAX;MACD,CATM,CAAP;IAUD;IAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,aAAIA,IAAJ,EAAU;MACR,KAAKjB,GAAL,GAAWiB,IAAX;MACA,KAAKhB,MAAL,GAAcgB,IAAI,CAACI,aAAnB;MACA,KAAKC,WAAL,GAAmBL,IAAI,CAACM,gBAAL,IAAyBN,IAAI,CAACK,WAAjD;MACA,KAAKnB,MAAL,GAAcc,IAAI,CAACO,KAAnB;MACA,KAAKpB,IAAL,GAAYa,IAAI,CAACQ,WAAjB;MACA,KAAKC,MAAL,GAAcT,IAAI,CAACU,aAAnB;IACD;IAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,eAAM;MAAA;;MACJ,IAAM7B,OAAO,GAAG;QACd8B,IAAI,EAAEC;MADQ,CAAhB;MAKA,OAAO,KAAKxB,WAAL,CAAiByB,gBAAjB,CAAkChC,OAAlC,EAA2CkB,IAA3C,CAAgD,UAAChB,GAAD,EAAS;QAC9D,IAAIA,GAAG,IAAIA,GAAG,CAACiB,IAAX,IAAmBjB,GAAG,CAACiB,IAAJ,CAASc,KAAhC,EAAuC;UACrC,MAAI,CAACb,GAAL,CAASlB,GAAG,CAACiB,IAAb;QACD,CAFD,MAGK;UACH,OAAO,iBAAQE,MAAR,CAAe,IAAIa,SAAJ,CAAc,qDAAd,CAAf,CAAP;QACD;;QAED,OAAOhC,GAAG,CAACiB,IAAX;MACD,CATM,CAAP;IAUD;;;EAvI8CgB,+B"}