{"version":3,"names":["MeetingInfoUtil","extractDestination","destination","type","dest","_LOCUS_ID_","url","ParameterError","getParsedUrl","link","parsedUrl","parse","protocol","HTTPS_PROTOCOL","error","LoggerProxy","logger","warn","isMeetingLink","value","hostNameBool","hostname","includes","WEBEX_DOT_COM","pathNameBool","pathname","MEET","MEET_M","JOIN","isConversationUrl","webex","clusterId","internal","services","getClusterId","endsWith","CONVERSATION_SERVICE","convertLinkToSip","user","userIndex","lastIndexOf","substring","company","companyIndex","replace","WWW_DOT","isSipUri","sipString","sipUri","DIALER_REGEX","SIP_ADDRESS","exec","isPhoneNumber","phoneNumber","isValidNumber","PHONE_NUMBER","test","getHydraId","deconstructHydraId","id","cluster","UUID_REG","_ROOM_","room","_PEOPLE_","people","getSipUriFromHydraPersonId","get","then","res","emails","length","catch","err","generateOptions","from","options","hydraId","_MEETING_LINK_","_SIP_URI_","_CONVERSATION_URL_","wasHydraPerson","resolve","waitForCatalog","conversationUrl","conversation","getUrlFromClusterId","getResourceUrl","resource","LOCI","MEETINGINFO","method","HTTP_VERBS","GET","uri","_PERSONAL_ROOM_","_MEETING_ID_","encodeURIComponent","TYPE","USE_URI_LOOKUP_FALSE","PUT","btoa","getRequestParams","resourceOptions","api","requestParams","concat","ALTERNATE_REDIRECT_TRUE","body","lookupType"],"sources":["util.js"],"sourcesContent":["import url from 'url';\n\nimport btoa from 'btoa';\nimport {\n  deconstructHydraId\n} from '@webex/common';\n\nimport ParameterError from '../common/errors/parameter';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  _SIP_URI_,\n  _PERSONAL_ROOM_,\n  _MEETING_ID_,\n  _CONVERSATION_URL_,\n  _LOCUS_ID_,\n  _MEETING_LINK_,\n  _PEOPLE_,\n  _ROOM_,\n  HTTP_VERBS,\n  USE_URI_LOOKUP_FALSE,\n  TYPE,\n  LOCI,\n  MEETINGINFO,\n  ALTERNATE_REDIRECT_TRUE,\n  DIALER_REGEX,\n  WEBEX_DOT_COM,\n  CONVERSATION_SERVICE,\n  WWW_DOT,\n  JOIN,\n  MEET,\n  MEET_M,\n  HTTPS_PROTOCOL,\n  UUID_REG\n} from '../constants';\n\nconst MeetingInfoUtil = {};\n\nMeetingInfoUtil.extractDestination = (destination, type) => {\n  let dest = destination;\n\n  if (type === _LOCUS_ID_) {\n    if (!(destination && destination.url)) {\n      throw new ParameterError('You cannot create a meeting by locus without a locus.url defined');\n    }\n    dest = destination.url;\n  }\n\n  return dest;\n};\n\nMeetingInfoUtil.getParsedUrl = (link) => {\n  try {\n    let parsedUrl = url.parse(link);\n\n    if (!parsedUrl) {\n      return false;\n    }\n    // hack for links such as <company>.webex.com/meet/<user> without a protocol\n    if (!parsedUrl.protocol) {\n      parsedUrl = url.parse(`${HTTPS_PROTOCOL}${link}`);\n    }\n\n    return parsedUrl;\n  }\n  catch (error) {\n    LoggerProxy.logger.warn(`Meeting-info:util#getParsedUrl --> unable to parse the URL, error: ${error}`);\n\n    return null;\n  }\n};\n\n/**\n * Helper function to check if a string matches a known meeting link pattern\n * @param {String} value  string to parse and see if it matches a meeting link\n * @returns {Boolean}\n */\nMeetingInfoUtil.isMeetingLink = (value) => {\n  const parsedUrl = MeetingInfoUtil.getParsedUrl(value);\n  const hostNameBool = parsedUrl.hostname && parsedUrl.hostname.includes(WEBEX_DOT_COM);\n  const pathNameBool = parsedUrl.pathname && (parsedUrl.pathname.includes(`/${MEET}`) || parsedUrl.pathname.includes(`/${MEET_M}`) || parsedUrl.pathname.includes(`/${JOIN}`));\n\n  return hostNameBool && pathNameBool;\n};\n\nMeetingInfoUtil.isConversationUrl = (value, webex) => {\n  const clusterId = webex.internal.services.getClusterId(value);\n\n  if (clusterId) {\n    return clusterId.endsWith(CONVERSATION_SERVICE);\n  }\n\n  return false;\n};\n\nMeetingInfoUtil.convertLinkToSip = (value) => {\n  const parsedUrl = MeetingInfoUtil.getParsedUrl(value);\n\n  if (!parsedUrl) {\n    return null;\n  }\n  let user;\n\n  if (parsedUrl.pathname) {\n    const userIndex = parsedUrl.pathname.lastIndexOf('/');\n\n    user = parsedUrl.pathname.substring(userIndex + 1);\n  }\n  if (!user) {\n    return null;\n  }\n  let company;\n\n  if (parsedUrl.hostname) {\n    const companyIndex = parsedUrl.hostname.lastIndexOf(`.${WEBEX_DOT_COM}`);\n\n    company = parsedUrl.hostname.substring(0, companyIndex).replace(WWW_DOT, '');\n  }\n  if (!company) {\n    return null;\n  }\n\n  return `${user}@${company}.${WEBEX_DOT_COM}`;\n};\n\n\nMeetingInfoUtil.isSipUri = (sipString) => {\n  // TODO: lets remove regex from this equation and user URI matchers and such\n  // have not found a great sip uri parser library as of now\n  const sipUri = DIALER_REGEX.SIP_ADDRESS.exec(sipString);\n\n  return sipUri;\n};\n\nMeetingInfoUtil.isPhoneNumber = (phoneNumber) => {\n  const isValidNumber = DIALER_REGEX.PHONE_NUMBER.test(phoneNumber);\n\n  return isValidNumber;\n};\n\nMeetingInfoUtil.getHydraId = (destination) => {\n  const {type, id, cluster} = deconstructHydraId(destination);\n\n  if (id && UUID_REG.test(id)) {\n    if (type === _ROOM_) {\n      return {room: true, destination: id, cluster};\n    }\n    if (type === _PEOPLE_) {\n      return {people: true, destination: id, cluster};\n    }\n\n    return {};\n  }\n\n  return {};\n};\n\nMeetingInfoUtil.getSipUriFromHydraPersonId = (destination, webex) => webex.people.get(destination).then((res) => {\n  if (res.emails && res.emails.length) {\n    return res.emails[0];\n  }\n  throw new ParameterError('Hydra Id Lookup was an invalid hydra person id.');\n}).catch((err) => {\n  LoggerProxy.logger.error(`Meeting-info:util#MeetingInfoUtil.getSipUriFromHydraPersonId --> getSipUriFromHydraPersonId ${err} `);\n  throw err;\n});\n\nMeetingInfoUtil.generateOptions = async (from) => {\n  const {destination, type, webex} = from;\n\n  if (type) {\n    return {\n      destination,\n      type\n    };\n  }\n  const options = {};\n  const hydraId = MeetingInfoUtil.getHydraId(destination);\n\n  if (MeetingInfoUtil.isMeetingLink(destination)) {\n    LoggerProxy.logger.warn('Meeting-info:util#generateOptions --> WARN, use of Meeting Link is deprecated, please use a SIP URI instead');\n\n    options.type = _MEETING_LINK_;\n    options.destination = destination;\n  }\n  else if (MeetingInfoUtil.isSipUri(destination)) {\n    options.type = _SIP_URI_;\n    options.destination = destination;\n  }\n  else if (MeetingInfoUtil.isPhoneNumber(destination)) {\n    options.type = _SIP_URI_;\n    options.destination = destination;\n  }\n  else if (MeetingInfoUtil.isConversationUrl(destination, webex)) {\n    options.type = _CONVERSATION_URL_;\n    options.destination = destination;\n  }\n  else if (hydraId.people) {\n    options.type = _SIP_URI_;\n\n    return MeetingInfoUtil.getSipUriFromHydraPersonId(hydraId.destination, webex).then((res) => {\n      options.destination = res;\n\n      // Since hydra person ids require a unique case in which they are\n      // entirely converted to a SIP URI, we need to set a flag for detecting\n      // this type of destination.\n      options.wasHydraPerson = true;\n\n      return Promise.resolve(options);\n    });\n  }\n  else if (hydraId.room) {\n    options.type = _CONVERSATION_URL_;\n    try {\n      await webex.internal.services.waitForCatalog('postauth');\n\n      const conversationUrl = webex.internal.conversation.getUrlFromClusterId({\n        cluster: hydraId.cluster,\n        id: hydraId.destination\n      });\n\n      options.destination = conversationUrl;\n    }\n    catch (e) {\n      LoggerProxy.logger.error(`Meeting-info:util#generateOptions --> ${e}`);\n      throw (e);\n    }\n  }\n  else {\n    throw new ParameterError('MeetingInfo is fetched with meeting link, sip uri, phone number, hydra room id, hydra people id, or a conversation url.');\n  }\n\n  return Promise.resolve(options);\n};\n\n/**\n * Helper function to build up a correct locus url depending on the value passed\n * @param {String} type One of [SIP_URI, PERSONAL_ROOM, MEETING_ID, CONVERSATION_URL, LOCUS_ID, MEETING_LINK]\n * @param {Object} value ?? value.value\n * @returns {Object} returns an object with {resource, method}\n */\nMeetingInfoUtil.getResourceUrl = (type, value) => {\n  let resource = `/${LOCI}/${MEETINGINFO}`;\n  let method = HTTP_VERBS.GET;\n  let uri = null;\n\n  switch (type) {\n    case _SIP_URI_:\n    case _PERSONAL_ROOM_:\n    case _MEETING_ID_:\n      resource = `/${LOCI}/${MEETINGINFO}/${encodeURIComponent(value)}?${TYPE}=${type}&${USE_URI_LOOKUP_FALSE}`;\n      break;\n    case _CONVERSATION_URL_:\n      method = HTTP_VERBS.PUT;\n      break;\n    case _LOCUS_ID_:\n      uri = `${value}/${MEETINGINFO}`;\n      method = HTTP_VERBS.PUT;\n      break;\n    case _MEETING_LINK_:\n      resource = `$/${LOCI}/${MEETINGINFO}/${btoa(value)}?${TYPE}=${_MEETING_LINK_}&${USE_URI_LOOKUP_FALSE}`;\n      break;\n    default:\n  }\n\n  return {\n    uri,\n    resource,\n    method\n  };\n};\n\nMeetingInfoUtil.getRequestParams = (resourceOptions, type, value, api) => {\n  let requestParams = {\n    method: resourceOptions.method,\n    api,\n    resource: resourceOptions.resource\n  };\n\n  if (resourceOptions.method === HTTP_VERBS.GET) {\n    // for handling URL redirections\n    requestParams.resource = requestParams.resource.concat(`&${ALTERNATE_REDIRECT_TRUE}`);\n  }\n  else\n  if (type !== _LOCUS_ID_) {\n    // locus id check is a PUT not sure why\n    requestParams.resource = requestParams.resource.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n    requestParams.body = {\n      value,\n      lookupType: type\n    };\n  }\n  else if (type === _LOCUS_ID_) {\n    requestParams = {\n      method: resourceOptions.method,\n      uri: resourceOptions.uri\n    };\n  }\n\n  return requestParams;\n};\n\nexport default MeetingInfoUtil;\n"],"mappings":"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"}