{"version":3,"names":["computeDimensions","maxWidth","maxHeight","width","height","processImage","file","type","thumbnailMaxWidth","thumbnailMaxHeight","enableThumbnails","logger","isAvatar","startsWith","resolve","Blob","reject","img","Image","onload","onerror","src","URL","createObjectURL","then","fileDimensions","info","size","thumbnailDimensions","canvas","document","createElement","ctx","getContext","orientation","orient","x","y","parts","toDataURL","split","byteString","atob","buffer","ArrayBuffer","length","view","DataView","i","setUint8","charCodeAt"],"sources":["process-image.browser.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {pick} from 'lodash';\n\nimport {orient} from './index';\n/* eslint-env browser */\n\n/**\n * Determins the dimensions of an image\n * @param {Object} constraints\n * @param {Number} constraints.width\n * @param {Number} constraints.height\n * @param {Number} maxWidth\n * @param {Number} maxHeight\n * @returns {Object}\n */\nfunction computeDimensions({width, height}, maxWidth, maxHeight) {\n  if (height > width) {\n    if (height > maxHeight) {\n      width = width * maxHeight / height;\n      height = maxHeight;\n    }\n\n    if (width > maxWidth) {\n      height = height * maxWidth / width;\n      width = maxWidth;\n    }\n  }\n  else {\n    if (width > maxWidth) {\n      height = height * maxWidth / width;\n      width = maxWidth;\n    }\n\n    if (height > maxHeight) {\n      width = width * maxHeight / height;\n      height = maxHeight;\n    }\n  }\n\n  return {height, width};\n}\n\n/**\n * Measures an image file and produces a thumbnail for it\n * @param {Object} options\n * @param {Blob|ArrayBuffer} options.file\n * @param {Number} options.thumbnailMaxWidth\n * @param {Number} options.thumbnailMaxHeight\n * @param {Boolean} options.enableThumbnails\n * @param {Object} options.logger\n * @param {Boolean} options.isAvatar\n * @returns {Promise<Array>} Buffer, Dimensions, thumbnailDimensions\n */\nexport default function processImage({\n  file, type, thumbnailMaxWidth, thumbnailMaxHeight, enableThumbnails, logger, isAvatar\n}) {\n  if (!type || !type.startsWith('image')) {\n    return Promise.resolve();\n  }\n\n  file = file instanceof Blob ? file : new Blob([file]);\n\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n\n    img.onload = function onload() {\n      resolve(img);\n    };\n    img.onerror = reject;\n    img.src = URL.createObjectURL(file);\n  })\n    .then((img) => {\n      const fileDimensions = pick(img, 'height', 'width');\n\n      if (isAvatar) { // only if image is a profile avatar\n        logger.info('dimensions will be set for avatar image');\n        const size = fileDimensions.height > fileDimensions.width ? fileDimensions.height : fileDimensions.width;\n\n        fileDimensions.height = size;\n        fileDimensions.width = size;\n      }\n      if (!enableThumbnails) {\n        logger.info('thumbnails not enabled');\n\n        return [null, fileDimensions, null];\n      }\n      const thumbnailDimensions = computeDimensions(fileDimensions, thumbnailMaxWidth, thumbnailMaxHeight);\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const {width, height} = thumbnailDimensions;\n\n      // explanation of orientation:\n      // https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images\n      if (file.orientation && file.orientation > 4) {\n        canvas.width = height;\n        canvas.height = width;\n        thumbnailDimensions.width = height;\n        thumbnailDimensions.height = width;\n      }\n      else {\n        canvas.width = thumbnailDimensions.width;\n        canvas.height = thumbnailDimensions.height;\n      }\n\n\n      orient(\n        {\n          orientation: file && file.orientation ? file.orientation : '',\n          img,\n          x: 0,\n          y: 0,\n          width,\n          height,\n          ctx\n        },\n        file\n      );\n\n      const parts = canvas.toDataURL('image/png').split(',');\n      // Thumbnail uploads were failing with common/base64 decoding\n      const byteString = atob(parts[1]);\n\n      const buffer = new ArrayBuffer(byteString.length);\n      const view = new DataView(buffer);\n\n      for (let i = 0; i < byteString.length; i += 1) {\n        view.setUint8(i, byteString.charCodeAt(i));\n      }\n\n      return [buffer, fileDimensions, thumbnailDimensions];\n    });\n}\n"],"mappings":"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"}