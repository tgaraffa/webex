{"version":3,"names":["CalendarCollection","namespace","CALENDAR","items","get","id","getBy","key","value","item","set","itemId","meeting","CalendarUtil","calculateEndTime","reset","remove","setAll","forEach","getAll"],"sources":["collection.js"],"sourcesContent":["import {find} from 'lodash';\n\nimport CalendarUtil from './util';\nimport {CALENDAR} from './constants';\n/**\n * @class CalendarCollection\n */\nconst CalendarCollection = {\n  namespace: CALENDAR,\n  items: {},\n  /**\n   * @param {String} id calendar ID\n   * @returns {Any} Calendar Item specifc to that id\n   * @private\n   * @memberof CalendarCollection\n   */\n  get(id) {\n    return this.items[id];\n  },\n\n  /**\n   * @param {String} key any key and the corresponding calendar Item\n   * @param {String} value any values corresponding to calendar item\n   * @returns {Any} returns whatever is being stuffed into the collection\n   * @private\n   * @memberof CalendarCollection\n   */\n  getBy(key, value) {\n    if (key && value) {\n      return find(this.items, (item) => (item[key] === value));\n    }\n\n    return null;\n  },\n\n  /**\n   * @param {Object} item CalendarObject passed to the collection\n   * @returns {Any} returns calender id whats get set\n   * @private\n   * @memberof CalendarCollection\n   */\n  set(item) {\n    const itemId = item.id;\n    const meeting = CalendarUtil.calculateEndTime(item);\n\n    this.items[itemId] = meeting;\n\n    return itemId;\n  },\n\n  /**\n   * resets all the values in the calendarcollection\n   * @returns {undefined}\n   * @private\n   * @memberof CalendarCollection\n   */\n  reset() {\n    this.items = {};\n  },\n\n\n  /**\n   * @param {Id} id is the id for the calendar item to be removed\n   * @returns {Any} calendar item which got removed\n   * @private\n   * @memberof CalendarCollection\n   */\n  remove(id) {\n    const meeting = this.get(id);\n\n    delete this.items[id];\n\n    return meeting;\n  },\n\n  /**\n   * sets all the item passed to the collection\n   * @param {Array} items array of calendar items\n   * @private\n   * @returns {undefined}\n   * @memberof CalendarCollection\n   */\n  setAll(items) {\n    items.forEach((item) => {\n      this.set(item);\n    });\n  },\n\n  /**\n   * gets all the calendar stored in the collection\n   * @param {Array} items array of calendar items\n   * @private\n   * @returns {Array} returns an array of calendar items\n   * @memberof CalendarCollection\n   */\n  getAll() {\n    return Object.values(this.items);\n  }\n\n};\n\nexport default CalendarCollection;\n"],"mappings":";;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;AACA;AACA;AACA,IAAMA,kBAAkB,GAAG;EACzBC,SAAS,EAAEC,mBADc;EAEzBC,KAAK,EAAE,EAFkB;;EAGzB;AACF;AACA;AACA;AACA;AACA;EACEC,GATyB,eASrBC,EATqB,EASjB;IACN,OAAO,KAAKF,KAAL,CAAWE,EAAX,CAAP;EACD,CAXwB;;EAazB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,KApByB,iBAoBnBC,GApBmB,EAoBdC,KApBc,EAoBP;IAChB,IAAID,GAAG,IAAIC,KAAX,EAAkB;MAChB,OAAO,oBAAK,KAAKL,KAAV,EAAiB,UAACM,IAAD;QAAA,OAAWA,IAAI,CAACF,GAAD,CAAJ,KAAcC,KAAzB;MAAA,CAAjB,CAAP;IACD;;IAED,OAAO,IAAP;EACD,CA1BwB;;EA4BzB;AACF;AACA;AACA;AACA;AACA;EACEE,GAlCyB,eAkCrBD,IAlCqB,EAkCf;IACR,IAAME,MAAM,GAAGF,IAAI,CAACJ,EAApB;;IACA,IAAMO,OAAO,GAAGC,aAAA,CAAaC,gBAAb,CAA8BL,IAA9B,CAAhB;;IAEA,KAAKN,KAAL,CAAWQ,MAAX,IAAqBC,OAArB;IAEA,OAAOD,MAAP;EACD,CAzCwB;;EA2CzB;AACF;AACA;AACA;AACA;AACA;EACEI,KAjDyB,mBAiDjB;IACN,KAAKZ,KAAL,GAAa,EAAb;EACD,CAnDwB;;EAsDzB;AACF;AACA;AACA;AACA;AACA;EACEa,MA5DyB,kBA4DlBX,EA5DkB,EA4Dd;IACT,IAAMO,OAAO,GAAG,KAAKR,GAAL,CAASC,EAAT,CAAhB;IAEA,OAAO,KAAKF,KAAL,CAAWE,EAAX,CAAP;IAEA,OAAOO,OAAP;EACD,CAlEwB;;EAoEzB;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,MA3EyB,kBA2ElBd,KA3EkB,EA2EX;IAAA;;IACZA,KAAK,CAACe,OAAN,CAAc,UAACT,IAAD,EAAU;MACtB,KAAI,CAACC,GAAL,CAASD,IAAT;IACD,CAFD;EAGD,CA/EwB;;EAiFzB;AACF;AACA;AACA;AACA;AACA;AACA;EACEU,MAxFyB,oBAwFhB;IACP,OAAO,qBAAc,KAAKhB,KAAnB,CAAP;EACD;AA1FwB,CAA3B;eA8FeH,kB"}