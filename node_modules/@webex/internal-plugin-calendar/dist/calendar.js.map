{"version":3,"names":["Calendar","WebexPlugin","extend","namespace","registered","register","webex","canAuthorize","logger","error","reject","Error","info","resolve","internal","device","then","mercury","connect","listenForEvents","trigger","CALENDAR_REGISTERED","catch","message","unregister","stopListeningForEvents","disconnect","CALENDAR_UNREGISTERED","on","envelope","_handleCreate","data","_handleUpdate","_handleDelete","off","id","CalendarCollection","set","calendarMeetingExternal","CALENDAR_UPDATED","get","CALENDAR_CREATE","item","remove","CALENDAR_DELETE","syncCalendar","options","fromDate","config","toDate","list","res","setAll","getAll","getByType","key","value","includes","getBy","processMeetingEvent","event","transform","getParticipants","request","method","service","resource","btoa","getNotes","qs","meetingObjects","body","items","promises","forEach","meeting","encryptedNotes","push","notesResponse","encryptedParticipants","all"],"sources":["calendar.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n   * Calendar Item Create Event\n   * Emitted when a calendar item has been added\n   * @event calendar:meeting:create\n   * @instance\n   * @memberof Calendar\n   */\n\n/**\n   * Calendar Item Update Event\n   * Emitted when a calendar item has been updated\n   * @event calendar:meeting:update\n   * @instance\n   * @memberof Calendar\n   */\n\n/**\n   * Calendar Item Update Event\n   * Emitted when a calendar item has been deleted\n   * @event calendar:meeting:delete\n   * @instance\n   * @memberof Calendar\n   */\n\n/**\n * Calendar Registered Event\n * Emitted when the calendar instance has been registered and listening\n * @event calendar:registered\n * @instance\n * @memberof Calendar\n */\n\n/**\n * Calendar Registered Event\n * Emitted when the calendar instance has been registered and listening\n * @event calendar:unregistered\n * @instance\n * @memberof Calendar\n */\n\nimport btoa from 'btoa';\nimport {WebexPlugin} from '@webex/webex-core';\n\nimport CalendarCollection from './collection';\nimport {CALENDAR_REGISTERED, CALENDAR_UNREGISTERED, CALENDAR_DELETE, CALENDAR_CREATE, CALENDAR_UPDATED} from './constants';\n\nconst Calendar = WebexPlugin.extend({\n  namespace: 'Calendar',\n\n  /**\n   * registered value indicating events registration is successful\n   * @instance\n   * @type {Boolean}\n   * @memberof Calendar\n   */\n  registered: false,\n\n  /**\n   * Explicitly sets up the calendar plugin by registering\n   * the device, connecting to mercury, and listening for calendar events.\n   * @returns {Promise}\n   * @public\n   * @memberof Calendar\n   */\n  register() {\n    if (!this.webex.canAuthorize) {\n      this.logger.error('calendar->register#ERROR, Unable to register, SDK cannot authorize');\n\n      return Promise.reject(new Error('SDK cannot authorize'));\n    }\n\n    if (this.registered) {\n      this.logger.info('calendar->register#INFO, Calendar plugin already registered');\n\n      return Promise.resolve();\n    }\n\n    return this.webex.internal.device.register()\n      .then(() => this.webex.internal.mercury.connect())\n      .then(() => {\n        this.listenForEvents();\n        this.trigger(CALENDAR_REGISTERED);\n        this.registered = true;\n      })\n      .catch((error) => {\n        this.logger.error(`calendar->register#ERROR, Unable to register, ${error.message}`);\n\n        return Promise.reject(error);\n      });\n  },\n\n  /**\n   * Explicitly tears down the calendar plugin by deregistering\n   * the device, disconnecting from mercury, and stops listening to calendar events\n   *\n   * @returns {Promise}\n   * @public\n   * @memberof Calendar\n   */\n  unregister() {\n    if (!this.registered) {\n      this.logger.info('calendar->unregister#INFO, Calendar plugin already unregistered');\n\n      return Promise.resolve();\n    }\n\n    this.stopListeningForEvents();\n\n    return this.webex.internal.mercury.disconnect()\n      .then(() => this.webex.internal.device.unregister())\n      .then(() => {\n        this.trigger(CALENDAR_UNREGISTERED);\n        this.registered = false;\n      });\n  },\n\n  /**\n   * registers for calendar events through mercury\n   * @returns {undefined}\n   * @private\n   */\n  listenForEvents() {\n    // Calendar mercury events listener\n    this.webex.internal.mercury.on('event:calendar.meeting.create', (envelope) => {\n      this._handleCreate(envelope.data);\n    });\n    this.webex.internal.mercury.on('event:calendar.meeting.update', (envelope) => {\n      this._handleUpdate(envelope.data);\n    });\n    this.webex.internal.mercury.on('event:calendar.meeting.create.minimal', (envelope) => {\n      this._handleCreate(envelope.data);\n    });\n    this.webex.internal.mercury.on('event:calendar.meeting.update.minimal', (envelope) => {\n      this._handleUpdate(envelope.data);\n    });\n    this.webex.internal.mercury.on('event:calendar.meeting.delete', (envelope) => {\n      this._handleDelete(envelope.data);\n    });\n  },\n\n  /**\n   * unregisteres all the calendar events from mercury\n   * @returns {undefined}\n   * @private\n   */\n  stopListeningForEvents() {\n    this.webex.internal.mercury.off('event:calendar.meeting.create');\n    this.webex.internal.mercury.off('event:calendar.meeting.create.minimal');\n    this.webex.internal.mercury.off('event:calendar.meeting.update');\n    this.webex.internal.mercury.off('event:calendar.meeting.update.minimal');\n    this.webex.internal.mercury.off('event:calendar.meeting.delete');\n  },\n\n  /**\n   * handles update events, triggers after collection updates\n   * @param {Object} data\n   * @returns {undefined}\n   * @private\n   */\n  _handleUpdate(data) {\n    const id = CalendarCollection.set(data.calendarMeetingExternal);\n\n    this.trigger(CALENDAR_UPDATED, CalendarCollection.get(id));\n  },\n\n  /**\n   * handles create events, triggers after collection updates\n   * @param {Object} data\n   * @returns {undefined}\n   * @private\n   */\n  _handleCreate(data) {\n    const id = CalendarCollection.set(data.calendarMeetingExternal);\n\n    this.trigger(CALENDAR_CREATE, CalendarCollection.get(id));\n  },\n\n  /**\n   * handles delete events, triggers after collection updates\n   * @param {Object} data\n   * @returns {undefined}\n   * @private\n   */\n  _handleDelete(data) {\n    const item = CalendarCollection.remove(data.calendarMeetingExternal.id);\n\n    this.trigger(CALENDAR_DELETE, item);\n  },\n\n  /**\n   * Retrieves a collection of calendars based on the request parameters\n   * Defaults to 1 day before and 7 days ahead\n   * @param {Object} options\n   * @param {Date} options.fromDate the start of the time range\n   * @param {Date} options.toDate the end of the time range\n   * @returns {Promise} Resolves with an array of calendars\n   */\n  syncCalendar(options = {fromDate: this.config.fromDate, toDate: this.config.toDate}) {\n    return this.list({fromDate: options.fromDate, toDate: options.toDate}).then((res) => {\n      CalendarCollection.setAll(res);\n\n      return CalendarCollection.getAll();\n    });\n  },\n  /**\n   * get the calendar item that has a matching value\n   * @param {String} key meeting property\n   * @param {Any} value the meeting property to match\n   * @returns {Object}\n   */\n  getByType(key, value) {\n    if (['spaceURI', 'spaceMeetURL', 'conversationId'].includes(key)) {\n      return CalendarCollection.getBy(key, value);\n    }\n    throw new Error('key must be one of, spaceURI, spaceMeetURL, or conversationId');\n  },\n\n  /**\n   * gets all the calendar items that have been populated\n   * @returns {Object}\n   */\n  getAll() {\n    return CalendarCollection.getAll();\n  },\n\n  /**\n   * Decrypts an encrypted incoming calendar event\n   * @param {Object} event\n   * @returns {Promise} Resolves with a decrypted calendar event\n   */\n  processMeetingEvent(event) {\n    return this.webex.transform('inbound', event)\n      .then(() => event);\n  },\n\n  /**\n   * Retrieves an array of meeting participants for the meeting id\n   * @param {String} id\n   * @returns {Promise} Resolves with an object of meeting participants\n   */\n  getParticipants(id) {\n    return this.request({\n      method: 'GET',\n      service: 'calendar',\n      resource: `calendarEvents/${btoa(id)}/participants`\n    });\n  },\n\n  /**\n   * Retrieves a collection of meetings based on the request parameters\n   * @param {String} id\n   * @returns {Promise} Resolves with an object of meeting notes\n   */\n  getNotes(id) {\n    return this.request({\n      method: 'GET',\n      service: 'calendar',\n      resource: `calendarEvents/${btoa(id)}/notes`\n    });\n  },\n\n  /**\n   * Retrieves a collection of meetings based on the request parameters\n   * @param {Object} options\n   * @param {Date} options.fromDate the start of the time range\n   * @param {Date} options.toDate the end of the time range\n   * @returns {Promise} Resolves with an array of meetings\n   */\n  list(options) {\n    options = options || {};\n\n    return this.webex.request({\n      method: 'GET',\n      service: 'calendar',\n      resource: 'calendarEvents',\n      qs: options\n    })\n      .then((res) => {\n        const meetingObjects = res.body.items;\n        const promises = [];\n\n        meetingObjects.forEach((meeting) => {\n          if (!meeting.encryptedNotes) {\n            promises.push(\n              this.getNotes(meeting.id)\n                .then((notesResponse) => {\n                  meeting.encryptedNotes = notesResponse.body && notesResponse.body.encryptedNotes;\n                })\n            );\n          }\n\n          if (!meeting.encryptedParticipants) {\n            promises.push(\n              this.getParticipants(meeting.id)\n                .then((notesResponse) => {\n                  meeting.encryptedParticipants = notesResponse.body.encryptedParticipants;\n                })\n            );\n          }\n        });\n\n        return Promise.all(promises)\n          .then(() => meetingObjects);\n      });\n  }\n});\n\nexport default Calendar;\n"],"mappings":"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"}