{"version":3,"names":["DeviceCollection","devices","get","deviceId","set","device","id","identity","existingDevice","reset","getAll"],"sources":["collection.js"],"sourcesContent":["import {merge} from 'lodash';\n\nconst DeviceCollection = {\n  devices: {},\n\n  get(deviceId) {\n    return this.devices[deviceId];\n  },\n\n  set(device) {\n    const deviceId = device.id || device.identity && device.identity.id;\n    // check if the device is already existing, if so then merge else add\n    const existingDevice = this.devices[deviceId];\n\n    if (existingDevice) {\n      // already existing, merge for any new binding information\n      merge(existingDevice, device);\n    }\n    else {\n      this.devices[deviceId] = device;\n    }\n  },\n\n  reset() {\n    this.devices = {};\n  },\n\n  getAll() {\n    return Object.values(this.devices);\n  }\n\n};\n\nexport default DeviceCollection;\n"],"mappings":";;;;;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG;EACvBC,OAAO,EAAE,EADc;EAGvBC,GAHuB,eAGnBC,QAHmB,EAGT;IACZ,OAAO,KAAKF,OAAL,CAAaE,QAAb,CAAP;EACD,CALsB;EAOvBC,GAPuB,eAOnBC,MAPmB,EAOX;IACV,IAAMF,QAAQ,GAAGE,MAAM,CAACC,EAAP,IAAaD,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACE,QAAP,CAAgBD,EAAjE,CADU,CAEV;;IACA,IAAME,cAAc,GAAG,KAAKP,OAAL,CAAaE,QAAb,CAAvB;;IAEA,IAAIK,cAAJ,EAAoB;MAClB;MACA,qBAAMA,cAAN,EAAsBH,MAAtB;IACD,CAHD,MAIK;MACH,KAAKJ,OAAL,CAAaE,QAAb,IAAyBE,MAAzB;IACD;EACF,CAnBsB;EAqBvBI,KArBuB,mBAqBf;IACN,KAAKR,OAAL,GAAe,EAAf;EACD,CAvBsB;EAyBvBS,MAzBuB,oBAyBd;IACP,OAAO,qBAAc,KAAKT,OAAnB,CAAP;EACD;AA3BsB,CAAzB;eA+BeD,gB"}