{"version":3,"names":["sockets","Socket","onmessage","bind","onclose","get","binaryType","bufferedAmount","extensions","protocol","readyState","url","options","resolve","reject","socket","logger","info","code","Error","reason","closeTimer","safeSetTimeout","error","warn","forceCloseDelay","event","clearTimeout","close","checkRequired","forEach","key","enumerable","value","WebSocket","getWebSocketConstructor","_fixCloseCode","UnknownResponse","BadRequest","NotAuthorized","Forbidden","ConnectionError","onopen","_authorize","then","catch","onerror","set","pongTimer","pingTimer","emit","removeAllListeners","data","JSON","parse","sequenceNumber","debug","expectedSequenceNumber","processedEvent","_acknowledge","type","send","messageId","id","uuid","v4","token","trackingId","logLevelToken","waitForBufferState","eventType","removeListener","_ping","once","toLowerCase","confirmPongId","onPongNotReceived","scheduleNextPingAndCancelPongTimer","pingInterval","pongTimeout","EventEmitter"],"sources":["socket-base.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {EventEmitter} from 'events';\n\nimport {checkRequired} from '@webex/common';\nimport {safeSetTimeout} from '@webex/common-timers';\nimport {defaults, has, isObject} from 'lodash';\nimport uuid from 'uuid';\n\nimport {\n  BadRequest,\n  ConnectionError,\n  Forbidden,\n  NotAuthorized,\n  UnknownResponse\n  // NotFound\n} from '../errors';\n\nconst sockets = new WeakMap();\n\n/**\n * Generalized socket abstraction\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * constructor\n   * @returns {Socket}\n   */\n  constructor() {\n    super();\n    this.onmessage = this.onmessage.bind(this);\n    this.onclose = this.onclose.bind(this);\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get binaryType() {\n    return sockets.get(this).binaryType;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {number}\n   */\n  get bufferedAmount() {\n    return sockets.get(this).bufferedAmount;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get extensions() {\n    return sockets.get(this).extensions;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get protocol() {\n    return sockets.get(this).protocol;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {number}\n   */\n  get readyState() {\n    return sockets.get(this).readyState;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get url() {\n    return sockets.get(this).url;\n  }\n\n  /**\n   * Provides the environmentally appropriate constructor (ws in NodeJS,\n   * WebSocket in browsers)\n   * @returns {WebSocket}\n   */\n  static getWebSocketConstructor() {\n    throw new Error('Socket.getWebSocketConstructor() must be implemented in an environmentally appropriate way');\n  }\n\n  /**\n   * Closes the socket\n   * @param {Object} options\n   * @param {string} options.reason\n   * @param {number} options.code\n   * @returns {Promise}\n   */\n  close(options) {\n    return new Promise((resolve, reject) => {\n      const socket = sockets.get(this);\n\n      if (!socket) {\n        // Open has not been called yet so there is no socket to close\n        resolve();\n\n        return;\n      }\n      // logger is defined once open is called\n      this.logger.info('socket: closing');\n\n      if (socket.readyState === 2 || socket.readyState === 3) {\n        this.logger.info('socket: already closed');\n        resolve();\n\n        return;\n      }\n\n      options = options || {};\n      if (options.code && options.code !== 1000 && (options.code < 3000 || options.code > 4999)) {\n        reject(new Error('`options.code` must be 1000 or between 3000 and 4999 (inclusive)'));\n\n        return;\n      }\n\n      options = defaults(options, {\n        code: 1000,\n        reason: 'Done'\n      });\n\n      const closeTimer = safeSetTimeout(() => {\n        try {\n          this.logger.info('socket: no close event received, forcing closure');\n          resolve(this.onclose({\n            code: 1000,\n            reason: 'Done (forced)'\n          }));\n        }\n        catch (error) {\n          this.logger.warn('socket: force-close failed', error);\n        }\n      }, this.forceCloseDelay);\n\n      socket.onclose = (event) => {\n        this.logger.info('socket: close event fired', event.code, event.reason);\n        clearTimeout(closeTimer);\n        this.onclose(event);\n        resolve(event);\n      };\n\n      socket.close(options.code, options.reason);\n    });\n  }\n\n  /**\n   * Opens a WebSocket\n   * @param {string} url\n   * @param {options} options\n   * @param {number} options.forceCloseDelay (required)\n   * @param {number} options.pingInterval (required)\n   * @param {number} options.pongTimeout (required)\n   * @param {string} options.token (required)\n   * @param {string} options.trackingId (required)\n   * @param {Logger} options.logger (required)\n   * @param {string} options.logLevelToken\n   * @returns {Promise}\n   */\n  open(url, options) {\n    return new Promise((resolve, reject) => {\n      /* eslint complexity: [0] */\n      if (!url) {\n        reject(new Error('`url` is required'));\n\n        return;\n      }\n\n      if (sockets.get(this)) {\n        reject(new Error('Socket#open() can only be called once per instance'));\n\n        return;\n      }\n\n      options = options || {};\n\n      checkRequired([\n        'forceCloseDelay',\n        'pingInterval',\n        'pongTimeout',\n        'token',\n        'trackingId',\n        'logger'\n      ], options);\n\n      Object.keys(options).forEach((key) => {\n        Reflect.defineProperty(this, key, {\n          enumerable: false,\n          value: options[key]\n        });\n      });\n\n      const WebSocket = Socket.getWebSocketConstructor();\n\n      this.logger.info('socket: creating WebSocket');\n      const socket = new WebSocket(url, [], options);\n\n      socket.binaryType = 'arraybuffer';\n      socket.onmessage = this.onmessage;\n\n      socket.onclose = (event) => {\n        event = this._fixCloseCode(event);\n        this.logger.info('socket: closed before open', event.code, event.reason);\n        switch (event.code) {\n          case 1005:\n          // IE 11 doesn't seem to allow 4XXX codes, so if we get a 1005, assume\n          // it's a bad websocket url. That'll trigger a device refresh; if it\n          // turns out we had a bad token, the device refresh should 401 and\n          // trigger a token refresh.\n            return reject(new UnknownResponse(event));\n          case 4400:\n            return reject(new BadRequest(event));\n          case 4401:\n            return reject(new NotAuthorized(event));\n          case 4403:\n            return reject(new Forbidden(event));\n            // case 4404:\n            //   return reject(new NotFound(event));\n          default:\n            return reject(new ConnectionError(event));\n        }\n      };\n\n      socket.onopen = () => {\n        this.logger.info('socket: connected');\n        this._authorize()\n          .then(() => {\n            this.logger.info('socket: authorized');\n            socket.onclose = this.onclose;\n            resolve();\n          })\n          .catch(reject);\n      };\n\n      socket.onerror = (event) => {\n        this.logger.warn('socket: error event fired', event);\n      };\n\n      sockets.set(this, socket);\n      this.logger.info('socket: waiting for server');\n    });\n  }\n\n  /**\n   * Handles incoming CloseEvents\n   * @param {CloseEvent} event\n   * @returns {undefined}\n   */\n  onclose(event) {\n    this.logger.info('socket: closed', event.code, event.reason);\n    clearTimeout(this.pongTimer);\n    clearTimeout(this.pingTimer);\n\n    event = this._fixCloseCode(event);\n    this.emit('close', event);\n\n    // Remove all listeners to (a) avoid reacting to late pongs and (b) ensure\n    // we don't have a retain cycle.\n    this.removeAllListeners();\n  }\n\n  /**\n   * Handles incoming message events\n   * @param {MessageEvent} event\n   * @returns {undefined}\n   */\n  onmessage(event) {\n    try {\n      const data = JSON.parse(event.data);\n      const sequenceNumber = parseInt(data.sequenceNumber, 10);\n\n      this.logger.debug('socket: sequence number: ', sequenceNumber);\n      if (this.expectedSequenceNumber && sequenceNumber !== this.expectedSequenceNumber) {\n        this.logger.debug(`socket: sequence number mismatch indicates lost mercury message. expected: ${this.expectedSequenceNumber}, actual: ${sequenceNumber}`);\n        this.emit('sequence-mismatch', sequenceNumber, this.expectedSequenceNumber);\n      }\n      this.expectedSequenceNumber = sequenceNumber + 1;\n\n      // Yes, it's a little weird looking; we want to emit message events that\n      // look like normal socket message events, but event.data cannot be\n      // modified and we don't actually care about anything but the data property\n      const processedEvent = {data};\n\n      this._acknowledge(processedEvent);\n      if (data.type === 'pong') {\n        this.emit('pong', processedEvent);\n      }\n      else {\n        this.emit('message', processedEvent);\n      }\n    }\n    catch (error) {\n      // The above code should only be able to throw if we receive an unparsable\n      // message from Mercury. At this time, the only action we have is to\n      // ignore it and move on.\n      /* istanbul ignore next */\n      this.logger.warn('socket: error while receiving WebSocket message', error);\n    }\n  }\n\n  /**\n   * Sends a message up the socket\n   * @param {mixed} data\n   * @returns {Promise}\n   */\n  send(data) {\n    return new Promise((resolve, reject) => {\n      if (this.readyState !== 1) {\n        return reject(new Error('INVALID_STATE_ERROR'));\n      }\n\n      if (isObject(data)) {\n        data = JSON.stringify(data);\n      }\n\n      const socket = sockets.get(this);\n\n      socket.send(data);\n\n      return resolve();\n    });\n  }\n\n  /**\n   * Sends an acknowledgment for a specific event\n   * @param {MessageEvent} event\n   * @returns {Promise}\n   */\n  _acknowledge(event) {\n    if (!event) {\n      return Promise.reject(new Error('`event` is required'));\n    }\n\n    if (!has(event, 'data.id')) {\n      return Promise.reject(new Error('`event.data.id` is required'));\n    }\n\n    return this.send({\n      messageId: event.data.id,\n      type: 'ack'\n    });\n  }\n\n  /**\n   * Sends an auth message up the socket\n   * @private\n   * @returns {Promise}\n   */\n  _authorize() {\n    return new Promise((resolve) => {\n      this.logger.info('socket: authorizing');\n      this.send({\n        id: uuid.v4(),\n        type: 'authorization',\n        data: {\n          token: this.token\n        },\n        trackingId: this.trackingId,\n        logLevelToken: this.logLevelToken\n      });\n\n      const waitForBufferState = (event) => {\n        if (!event.data.type && (event.data.data.eventType === 'mercury.buffer_state' || event.data.data.eventType === 'mercury.registration_status')) {\n          this.removeListener('message', waitForBufferState);\n          this._ping();\n          resolve();\n        }\n      };\n\n      this.once('message', waitForBufferState);\n    });\n  }\n\n  /**\n   * Deals with the fact that some browsers drop some close codes (but not\n   * close reasons).\n   * @param {CloseEvent} event\n   * @private\n   * @returns {CloseEvent}\n   */\n  _fixCloseCode(event) {\n    if (event.code === 1005 && event.reason) {\n      switch (event.reason.toLowerCase()) {\n        case 'replaced':\n          this.logger.info('socket: fixing CloseEvent code for reason: ', event.reason);\n          event.code = 4000;\n          break;\n        case 'authentication failed':\n        case 'authentication did not happen within the timeout window of 30000 seconds.':\n          this.logger.info('socket: fixing CloseEvent code for reason: ', event.reason);\n          event.code = 1008;\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return event;\n  }\n\n  /**\n   * Sends a ping up the socket and confirms we get it back\n   * @param {[type]} id\n   * @private\n   * @returns {[type]}\n   */\n  _ping(id) {\n    const confirmPongId = (event) => {\n      try {\n        this.logger.debug('socket: pong', event.data.id);\n        if (event.data && event.data.id !== id) {\n          this.logger.info('socket: received pong for wrong ping id, closing socket');\n          this.logger.debug('socket: expected', id, 'received', event.data.id);\n          this.close({\n            code: 1000,\n            reason: 'Pong mismatch'\n          });\n        }\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error('socket: error occurred in confirmPongId', error);\n      }\n    };\n\n    const onPongNotReceived = () => {\n      try {\n        this.logger.info('socket: pong not receive in expected period, closing socket');\n        this.close({\n          code: 1000,\n          reason: 'Pong not received'\n        })\n          .catch((reason) => {\n            this.logger.warn('socket: failed to close socket after missed pong', reason);\n          });\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error('socket: error occurred in onPongNotReceived', error);\n      }\n    };\n\n    const scheduleNextPingAndCancelPongTimer = () => {\n      try {\n        clearTimeout(this.pongTimer);\n        this.pingTimer = safeSetTimeout(() => this._ping(), this.pingInterval);\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error('socket: error occurred in scheduleNextPingAndCancelPongTimer', error);\n      }\n    };\n\n    id = id || uuid.v4();\n    this.pongTimer = safeSetTimeout(onPongNotReceived, this.pongTimeout);\n    this.once('pong', scheduleNextPingAndCancelPongTimer);\n    this.once('pong', confirmPongId);\n\n    this.logger.debug(`socket: ping ${id}`);\n\n    return this.send({\n      id,\n      type: 'ping'\n    });\n  }\n}\n"],"mappings":"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"}