{"version":3,"names":["detect","buffer","Blob","ArrayBuffer","Uint8Array","Error","type","fromBuffer","fileType","mime"],"sources":["detect.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {fromBuffer} from 'file-type';\n\n/**\n * Determine mimeType for the specified buffer;\n * @param {Buffer|Uint8Array|ArrayBuffer} buffer\n * @returns {Promise<string>}\n */\nexport default async function detect(buffer) {\n  /* global Blob */\n  if (\n    !(buffer instanceof Blob) &&\n    !(buffer instanceof ArrayBuffer) &&\n    !(buffer instanceof Uint8Array)\n  ) {\n    throw new Error('`detect` requires a buffer of type Blob, ArrayBuffer, or Uint8Array');\n  }\n\n  if (buffer instanceof Blob) {\n    return buffer.type;\n  }\n\n  // `fromBuffer()` can take a buffer that is either a ArrayBuffer or Uinit8Array\n  const fileType = await fromBuffer(buffer);\n\n  if (!fileType) {\n    return 'application/octet-stream';\n  }\n\n  return fileType.mime;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAIA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;SAC8BA,M;;;;;oFAAf,iBAAsBC,MAAtB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MAGX,EAAEA,MAAM,YAAYC,IAApB,KACA,EAAED,MAAM,YAAYE,WAApB,CADA,IAEA,EAAEF,MAAM,YAAYG,UAApB,CALW;cAAA;cAAA;YAAA;;YAAA,MAOL,IAAIC,KAAJ,CAAU,qEAAV,CAPK;;UAAA;YAAA,MAUTJ,MAAM,YAAYC,IAVT;cAAA;cAAA;YAAA;;YAAA,iCAWJD,MAAM,CAACK,IAXH;;UAAA;YAAA;YAAA,OAeU,IAAAC,oBAAA,EAAWN,MAAX,CAfV;;UAAA;YAePO,QAfO;;YAAA,IAiBRA,QAjBQ;cAAA;cAAA;YAAA;;YAAA,iCAkBJ,0BAlBI;;UAAA;YAAA,iCAqBNA,QAAQ,CAACC,IArBH;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C"}