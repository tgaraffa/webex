{"version":3,"names":["HttpError","res","body","message","JSON","parse","parseObject","err","defaultMessage","enumerable","value","httpVersion","headers","rawHeaders","trailers","rawTrailers","method","url","statusCode","statusMessage","socket","_res","messages","errorKeys","length","Exception","makeSubTypes"],"sources":["http-error.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {pick} from 'lodash';\nimport {Exception} from '@webex/common';\n\nimport makeSubTypes from './http-error-subtypes';\n\n/**\n * Base HttpError class. Unlikely to be thrown directly, but handy for general\n * type comparison.\n */\nexport default class HttpError extends Exception {\n  /**\n   * @example Extend via\n   * MyError extends HttpError {\n   *  static errorKeys = HttpError.errorKeys.concat([\n   *    `key1`,\n   *    `key2`\n   *  ])\n   * }\n   *\n   * @type {Array}\n   */\n  static errorKeys = [\n    'error',\n    'errorString',\n    'response',\n    'errorResponse',\n    'message',\n    'msg'\n  ];\n\n  /**\n   * Default error string if no error can be extracted from the http response\n   * @type {string}\n   */\n  static defaultMessage = 'An error was received while trying to fulfill the request';\n\n  /**\n   * Parses HttpResponse objects for useful information (status, headers, etc)\n   * as well as attempting to extract a useful error message.\n   * @param {HttpResponse} res\n   * @returns {string}\n   */\n  parse(res) {\n    // complexity is high here because of all the default values below.\n    /* eslint complexity: [0] */\n    let {body} = res;\n    let message;\n\n    switch (typeof body) {\n      case 'string':\n        try {\n          body = JSON.parse(body);\n          message = this.parseObject(body);\n        }\n        catch (err) {\n          message = body;\n        }\n        break;\n      case 'object':\n        message = this.parseObject(body);\n        break;\n      default:\n    }\n\n    if (!message) {\n      message = this.defaultMessage;\n    }\n\n    Object.defineProperties(this, {\n      body: {\n        enumerable: false,\n        value: body\n      },\n      httpVersion: {\n        enumerable: false,\n        value: res.httpVersion\n      },\n      headers: {\n        enumerable: false,\n        value: res.headers || {}\n      },\n      rawHeaders: {\n        enumerable: false,\n        value: res.rawHeaders || []\n      },\n      trailers: {\n        enumerable: false,\n        value: res.trailers || {}\n      },\n      rawTrailers: {\n        enumerable: false,\n        value: res.rawTrailers || []\n      },\n      method: {\n        enumerable: false,\n        value: res.method\n      },\n      url: {\n        enumerable: false,\n        value: res.url\n      },\n      statusCode: {\n        enumerable: false,\n        value: res.statusCode\n      },\n      statusMessage: {\n        enumerable: false,\n        value: res.statusMessage\n      },\n      socket: {\n        enumerable: false,\n        value: res.socket\n      },\n      _res: {\n        enumerable: false,\n        value: res\n      }\n    });\n\n    return message;\n  }\n\n  /**\n   * Recursively parses an error body looking for a likely error candidate\n   * @param {object} body\n   * @returns {string}\n   */\n  parseObject(body) {\n    // Search body for common names of error strings\n    const messages = Object.values(pick(body, HttpError.errorKeys));\n\n    // If no error candidate was found, stringify the entire body\n    if (messages.length === 0) {\n      return JSON.stringify(body, null, 2);\n    }\n\n    // Assume the first key found was the error explanation\n    const message = messages[0];\n\n    // If the explanation is an object, recurse and try again\n    if (typeof message === 'object') {\n      return this.parseObject(message);\n    }\n\n    // Return the first key\n    return message;\n  }\n}\n\nmakeSubTypes(HttpError);\nHttpError.makeSubTypes = makeSubTypes;\n"],"mappings":"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"}